{ "_id" : { "$oid" : "552b6bce4264b6c4196ab898" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T15:10:06.085+0800" }, "content" : "<pre>具体代码：<br>1、水平翻转<br>-moz-transform:scale(-1，1);<br>-webkit-transform:scale(-1，1);<br>-o-transform:scale(-1，1);<br>transform:scale(-1，1);<br>filter:FlipH;&nbsp;<br><br>2、垂直翻转<br>-moz-transform:scale(1，-1);<br>-webkit-transform:scale(1，-1);<br>-o-transform:scale(1，-1);<br>transform:scale(1，-1);<br>filter:FlipV;&nbsp;<br><br>3、顺时针旋转90度<br>-moz-transform:rotate(90deg);<br>-webkit-transform:rotate(90deg);<br>-o-transform:rotate(90deg);<br>transform:rotate(90deg);&nbsp;<br>filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);<br><br>其它的我就不一一列举了<br><br>虽然这些都是细节部分，感觉就是省也省不了多少，但是周五晚我收到“<a href=\"http://www.cssforest.org/blog/\" target=\"_blank\" style=\"color: rgb(62, 115, 160);\">鬼</a>”给我的邮件回复，里面一句很瞩目的话：<span style=\"word-wrap: normal; word-break: normal; color: rgb(255, 126, 0);\">细节体现专业</span>。我反反复复把邮件看了几遍，那晚躺在床上想模块，想细节，差点睡不着；<br><span style=\"word-wrap: normal; word-break: normal; color: rgb(255, 126, 0);\">网站都能搭建出来，但是框架模块搭建的粒度，细节，重用率，直接反映了重构者的水平，这就是一个看似相同的网站，体现出来的水平境界不同。</span><br>也许要看一个重构的家伙实力如何，就是在细节一较高下。<br><br>所以不要以为把网站任务式的做出来就完事，里面还有好多需要注意需要优化的地方，就看你水平的高低去发现去优化。<br></pre>", "title" : "css翻转", "__v" : 0 }
{ "_id" : { "$oid" : "552b7bef662a29d414c27a0f" }, "category" : "NodeJS", "create_time" : { "$date" : "2015-04-13T16:18:55.668+0800" }, "content" : "<h1><a href=\"http://www.jqcool.net/jquery-bootstrapvalidator.html\">BootstrapValidator</a></h1><h1><a href=\"http://www.jqcool.net/jquery-bootstrapvalidator.html\">BootstrapValidator</a></h1><h1><a href=\"http://www.jqcool.net/jquery-bootstrapvalidator.html\">BootstrapValidator</a></h1>", "title" : "BootstrapValidator", "__v" : 0 }
{ "_id" : { "$oid" : "552b7c12662a29d414c27a10" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-13T16:19:30.082+0800" }, "content" : "<h1><a href=\"http://www.jqcool.net/jquery-bootstrapvalidator.html\">基于bootstrap3最好的jquery表单验证插件BootstrapValidator</a></h1><p><a href=\"http://www.jqcool.net/plug/form\">&nbsp;表单</a>&nbsp;&nbsp;<a href=\"http://www.jqcool.net/author/fishcity\">fishcity</a>&nbsp;&nbsp;9个月前 (07-28)&nbsp;&nbsp;9536浏览</p><p><strong><img src=\"http://www.jqcool.net/wp-content/uploads/2014/07/2014-07-2848.png\" width=\"560\" height=\"771\" alt=\"最好的jquery表单验证插件BootstrapValidator\"></strong></p><p><strong>BootstrapValidator</strong>是一款最好的<a href=\"http://www.jqcool.net/tag/jquery/\" target=\"_blank\">jquery</a>表单字段验证插件，它是基于boostrap3设计的，插件需要<a href=\"http://www.jqcool.net/tag/jquery/\" target=\"_blank\">jquery</a>与boostrap3才能正常运行，不喜欢bootstrap的朋友慎下。</p><p><strong>特点</strong></p><p>代码从新构建,清晰明了</p><p>内置验证器和计数!</p><p>容易编写新确认器</p><p>显示基于字段有效性反馈图标</p><p>支持Ajax验证器和表单提交</p><p>字段验证器可以启用/禁用</p><p>使用方法</p><p>引入核心库，插件是基本jquery和bootstrap的，需先引入。</p><p>12345678910&nbsp;&nbsp;&nbsp;//如果你想使用默认的语言包，请引入下面的文件<br></p><p>构建html代码<br></p><p>12345678910&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email&nbsp;address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br></p><p>写入JS初始化插件</p><pre class=\"\">123456789101112131415161718192021222324252627282930313233343536373839$(document).ready(function()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;$('.registerForm').bootstrapValidator({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'This&nbsp;value&nbsp;is&nbsp;not&nbsp;valid',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feedbackIcons:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valid:&nbsp;'glyphicon&nbsp;glyphicon-ok',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalid:&nbsp;'glyphicon&nbsp;glyphicon-remove',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validating:&nbsp;'glyphicon&nbsp;glyphicon-refresh'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fields:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;username&nbsp;is&nbsp;not&nbsp;valid',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validators:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;notEmpty:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;username&nbsp;is&nbsp;required&nbsp;and&nbsp;cannot&nbsp;be&nbsp;empty'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stringLength:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min:&nbsp;6,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max:&nbsp;30,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;username&nbsp;must&nbsp;be&nbsp;more&nbsp;than&nbsp;6&nbsp;and&nbsp;less&nbsp;than&nbsp;30&nbsp;characters&nbsp;long'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexp:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexp:&nbsp;/^[a-zA-Z0-9_]+$/,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;username&nbsp;can&nbsp;only&nbsp;consist&nbsp;of&nbsp;alphabetical,&nbsp;number&nbsp;and&nbsp;underscore'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validators:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;notEmpty:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;email&nbsp;is&nbsp;required&nbsp;and&nbsp;cannot&nbsp;be&nbsp;empty'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emailAddress:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;'The&nbsp;input&nbsp;is&nbsp;not&nbsp;a&nbsp;valid&nbsp;email&nbsp;address'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;});});</pre>", "title" : "BootstrapValidator", "__v" : 0, "delete" : 0 }
{ "_id" : { "$oid" : "552b7ccf662a29d414c27a11" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T16:22:39.914+0800" }, "content" : "<p>产业导航项目play framework下出现响应头部有Set-Cookie但在浏览器查看的时候未发现cookie</p><p>&nbsp;</p><p>情景：新注册用户使用激活链接进行登录，正常进入实名页面                                </p><p>待信息填写完毕后点击下一步，由于ajax返回信息显示用户未登录而跳转至首页</p><p>&nbsp;</p><p>解决过程：通过不断重启项目，将激活链接直接粘贴至浏览器地址栏，可将该情景重现，但存在一定概率。</p><p>正常情况下查看控制台的网络状态如下： </p><p>激活链接操作涉及的ajax请求为：</p><p>user_activate用户激活 user_login_by_token?token=-24t2aqdm034b92c47h995778na83pkg6用户token登录</p><p> </p><p>get_user_verifiy?user_id=270获取用户已填的信息</p><p> </p><p>&nbsp;</p><p>另外两条localhost请求的信息如下：  </p><p>&nbsp;</p><p>由于rest端使用的是playframework，其session与浏览器端cookie有联系，当设置好session后，每次请求和响应都将涉及cookie的传递，如图    </p><p>浏览器端也会保存cookie </p><p>&nbsp;</p><p>&nbsp;</p><p>经过观察，由于发现localhost的ajax请求收发的顺序不固定</p><p>  两次localhost请求的响应头部为</p><p>  </p><p> 以上情况下cookie依然存在，而当localhost的请求开始和结束的顺序一致时，也不会发生cookie未设置   </p><p>两次localhost请求的响应头部为  </p><p>&nbsp;</p><p>而产生以下情况时就会出现没有cookie</p><p>  </p><p>     </p><p>由上图知道，虽然localhost请求开始的早，但是结束的晚，且两次localhost都未返回PLAY_SESSION的值，但紧随其后的两次ajax请求的通信却带有cookie，而且get_user_verifiy?user_id=270这条请求明显有更新cookie，但最后浏览器依然是不存在cookie，不过看到localhost响应头部中有<b>Set-Cookie:</b>PLAY_SESSION=;Expires=Wed, 25-Mar-15 02:00:41 GMT;Path=/，便猜测是不是这个设置对cookie也有影响</p><p>为了了解<b>Set-Cookie:</b><a>PLAY_SESSION</a>=;Expires=Tue,24-Mar-15 08:05:06 GMT;Path=/ 是否会对已存在的PLAY_SESSION 的cookie产生影响，下面使用node.js进行一个小实验，实验代码如下： 此处为响应头部返回<b>Set-Cookie:</b>PLAY_SESSION=\"70bae227634b9811bfa4a6806a9e123e848ef8cb-user_name=xiekun%40int-yt.com&amp;entity_name=&amp;user_type=2&amp;user_id=270&amp;entity_id=0&amp;entity_type=2\";Path=/的状态 </p><p>相应的的浏览器cookie状态 当响应头部返回为<b>Set-Cookie:</b>PLAY_SESSION=;Expires=Tue,24-Mar-15 08:05:06 GMT;Path=/时的状态 相应的cookie状态为空 </p><p>由此可知<b>Set-Cookie:</b>PLAY_SESSION=;Expires=Tue, 24-Mar-15 08:05:06 GMT;Path=/会覆盖浏览器已有的PLAY_SESSION的cookie</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>经过以上不断地实验可知：</p><p>以图表示，y轴代表往返的距离，x轴代表时间，该情况下虽然get_user_verifiy和user_login_by_token的两次访问都有cookie，但最后被晚到的localhost清空，浏览器端查看cookie的时候发现不存在</p><p> </p><p>随后对localhost的请求进行观察，发现并不是所有页面都会出现localhost的ajax请求，它的出现与jqueryuploadify插件的使用次数有关，因此，去directives文件中将封装的uploadify插件的功能注释掉，此后再操作，未发现localhost的ajax请求和cookie为空的现象，由于使用的是Uploadifyv3.2.1在此时为最新版，且在IE和opera下均有问题，最终确定降低插件版本到v2.1.4同时在后端解决v2.1.4下文件类型上传的控制</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>总结：</p><p>l&nbsp; 对不是自己代码发出的ajax请求产生怀疑，本次问题中一直没有怀疑过localhost这个ajax请求，但是又不是自己代码发出的，但是这个请求最后影响到了程序的正常运行。</p><p>l&nbsp;&nbsp;play freamwork中响应头部中的<b>Set-Cookie:</b>PLAY_SESSION=;Expires=Tue, 24-Mar-15 08:05:06 GMT;Path=/会覆盖浏览器已有的PLAY_SESSION的cookie</p>", "title" : "产业导航项目play framework下出现响应头部有Set-Cookie但在浏览器查看的时候未发现cookie", "__v" : 0, "favor" : 6, "delete" : 0 }
{ "_id" : { "$oid" : "552b7d20662a29d414c27a12" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T16:24:00.604+0800" }, "content" : "<p>sun.net.ftp.FtpClient 这个类在jdk的帮助文档中没有具体的说明，也就是并没有对外公开。并且这个类是在jdk的 rt.jar中实现的。</p><p>jdk1.7下其构造函数FtpClient()被定义为private类型，所以无法new了。 在jdk1.7，已经换成了 FtpClient.create(ip)方法</p><p>同时，其他的一些方法也基本都改掉了，</p><p>如 ftpClient.openServer(server);</p><p>&nbsp; ftpClient.login(user, password);</p><p>就可以换成：ftpClient.login(user, null, password); &nbsp;&nbsp;</p><p>&nbsp; ftpClient.binary(); &nbsp;---&gt; &nbsp;ftpClient.setBinaryType(); &nbsp;&nbsp;</p><p>ftpClient.put(remotefilename);---&gt;ftpClient.putFileStream(remotefilename, true); &nbsp;&nbsp;</p><p>等。</p><p>window下在同一台机器上安装多个版本jdk，修改环境变量不生效问题处理办法</p><p>&nbsp;</p><p>本机已经安装了jdk1.7，而比较早期的项目需要依赖jdk1.6，于是同时在本机安装了jdk1.6和jdk1.7.&nbsp;</p><p>&nbsp;安装jdk1.6前，执行java -version得到</p><p>C:\\Users\\liuxiang2&gt;java -version</p><p>java version \"1.7.0_21\"</p><p>Java(TM) SE Runtime Environment (build 1.7.0_21-b11)</p><p>Java HotSpot(TM) Client VM (build 23.21-b01, mixed mode, sharing)</p><p>安装完jdk1.6,并修改环境变量JAVA_HOME为C:\\jdk1.6.0.再执行 java -version时，依然显示：</p><p>C:\\Users\\liuxiang2&gt;java -version</p><p>java version \"1.7.0_21\"</p><p>Java(TM) SE Runtime Environment (build 1.7.0_21-b11)</p><p>Java HotSpot(TM) Client VM (build 23.21-b01, mixed mode, sharing)</p><p>看上去，新的环境变量JAVA_HOME=C:\\jdk1.6.0并没有生效。 在网上找了很多资料才发现：</p><p>&nbsp; &nbsp; &nbsp; 在安装JDK1.7时（本机先安装jdk1.7再安装的jdk1.6），自动将java.exe、javaw.exe、javaws.exe三个可执行文件复制到了C:\\Windows\\System32目录，由于这个目录在WINDOWS环境变量中的优先级高于JAVA_HOME设置的环境变量优先级</p><p>解决方案：将C:\\Windows\\System32目录下的java.exe,javaw.exe,javaws.exe删除即可。开启新的命令行窗口，再执行java -version时，就得到了期望中的结果</p><p>C:\\Users\\liuxiang2&gt;java -version</p><p>java version \"1.6.0_18\"</p><p>Java(TM) SE Runtime Environment (build 1.6.0_18-b07)</p><p>Java HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)</p>", "title" : "本机已经安装了jdk1.7，而比较早期的项目需要依赖jdk1.6", "__v" : 0, "delete" : 0 }
{ "_id" : { "$oid" : "552b7dbd662a29d414c27a13" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T16:26:37.362+0800" }, "content" : "<ul><li><h2>\t<a href=\"http://my.oschina.net/jak/blog/387693\">bootstrap中dialog水平垂直居中</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=3278991\">FE lib &amp; Frame</a><br><br><br>162015-03<p><br></p><p>方法一：</p><p>HTML:</p><pre class=\"\">&lt;button&nbsp;type=\"button\"&nbsp;class=\"btn&nbsp;btn-primary&nbsp;btn-lg\"&nbsp;data-toggle=\"modal\"&nbsp;data-target=\"#myModal\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;Launch&nbsp;demo&nbsp;modal\n&lt;/button&gt;\n\n&lt;!--&nbsp;Modal&nbsp;--&gt;\n&lt;div&nbsp;class=\"modal&nbsp;fade\"&nbsp;id=\"myModal\"&nbsp;data-backdrop=\"static\"&nbsp;tabindex=\"-1\"&nbsp;role=\"dialog\"&nbsp;aria-labelledby=\"myModalLabel\"&nbsp;aria-hidden=\"true\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"modal-dialog\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"modal-content\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"modal-header\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;type=\"button\"&nbsp;class=\"close\"&nbsp;data-dismiss=\"modal\"&nbsp;aria-label=\"Close\"&gt;&lt;span&nbsp;aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h4&nbsp;class=\"modal-title\"&nbsp;id=\"myModalLabel\"&gt;Modal&nbsp;title&lt;/h4&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"modal-body\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"modal-footer\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;type=\"button\"&nbsp;class=\"btn&nbsp;btn-default\"&nbsp;data-dismiss=\"modal\"&gt;Close&lt;/button&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;type=\"button\"&nbsp;class=\"btn&nbsp;btn-primary\"&gt;Save&nbsp;changes&lt;/button&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\n&lt;/div&gt;</pre><p>JavaScript:</p><pre class=\"\">//&nbsp;Do&nbsp;like&nbsp;this&nbsp;for&nbsp;more&nbsp;best&nbsp;user&nbsp;experience,\n//&nbsp;But&nbsp;you&nbsp;have&nbsp;to&nbsp;remove&nbsp;dialog&nbsp;\"fade\"&nbsp;class(Used&nbsp;animation)\n$(\"[role='dialog']\").on(\"shown.bs.modal\",&nbsp;function()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;$modalDialog&nbsp;=&nbsp;$(this).find(\".modal-dialog\"),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$modalBody&nbsp;=&nbsp;$(this).find(\".modal-body\"),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogHeight&nbsp;=&nbsp;$modalDialog.height(),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogWidth&nbsp;=&nbsp;$modalDialog.width(),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;windowHeight&nbsp;=&nbsp;$(window).height(),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;windowWidth&nbsp;=&nbsp;$(window).width();\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;When&nbsp;dialog&nbsp;height&nbsp;greater&nbsp;than&nbsp;window&nbsp;height,\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;default&nbsp;margin&nbsp;top&nbsp;value&nbsp;to&nbsp;set&nbsp;dialog&nbsp;position.\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(windowHeight&nbsp;&lt;&nbsp;dialogHeight)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;do&nbsp;nothing\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;When&nbsp;dialog&nbsp;height&nbsp;less&nbsp;than&nbsp;window&nbsp;height,\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;dialog&nbsp;position&nbsp;set&nbsp;it&nbsp;with&nbsp;vertical&nbsp;center.\n&nbsp;&nbsp;&nbsp;&nbsp;$modalDialog.css({\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"position\":&nbsp;\"absolute\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"top\":&nbsp;\"50%\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"left\":&nbsp;\"50%\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"marginLeft\":&nbsp;-&nbsp;(&nbsp;dialogWidth&nbsp;/&nbsp;2&nbsp;),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"marginTop\":&nbsp;-&nbsp;(&nbsp;dialogHeight&nbsp;/&nbsp;2&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;});\n});</pre><p>注：这种方式最好将fade class去掉，否则会有不好的用户体验</p><p>方式二：修改bootstrap.js源码</p><pre class=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.$element\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.addClass('in')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr('aria-hidden',&nbsp;false)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.enforceFocus()\n/***************************************************************/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;$modalDialog&nbsp;=&nbsp;that.$element.find(\".modal-dialog\"),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogHeight&nbsp;=&nbsp;$modalDialog.height(),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;windowHeight&nbsp;=&nbsp;$(window).height();\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;When&nbsp;dialog&nbsp;height&nbsp;greater&nbsp;than&nbsp;window&nbsp;height,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;default&nbsp;margin&nbsp;top&nbsp;value&nbsp;to&nbsp;set&nbsp;dialog&nbsp;position.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;if&nbsp;(windowHeight&nbsp;&lt;&nbsp;dialogHeight)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;do&nbsp;nothing\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;When&nbsp;dialog&nbsp;height&nbsp;less&nbsp;than&nbsp;window&nbsp;height,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;margin&nbsp;top&nbsp;set&nbsp;it&nbsp;position.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Dialog&nbsp;position&nbsp;set&nbsp;it&nbsp;with&nbsp;vertical&nbsp;center.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(windowHeight&nbsp;&gt;&nbsp;dialogHeight)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$modalDialog.css({\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"marginTop\":&nbsp;(&nbsp;windowHeight&nbsp;-&nbsp;dialogHeight)&nbsp;/&nbsp;2\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n/**************************************************************/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;e&nbsp;=&nbsp;$.Event('shown.bs.modal',&nbsp;{&nbsp;relatedTarget:&nbsp;_relatedTarget&nbsp;})</pre><p>注：块级注释间为增加代码，在bootstrap中722行</p><br>发布于 4周前， 阅读(80) | 评论(0) | 投票(0) | 收藏(5)&nbsp;<a href=\"http://my.oschina.net/jak/blog/387693\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/354115\">B2G概要</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585506\">B2G</a><br><br><br>092014-12<p>什么是<a href=\"http://baike.baidu.com/link?url=GztpOPV8u4EyFeZAEx_bZFHCWtSqBwP5PBE8rpg4fen8uC3mP3LvZCDyC9jyeCNV5DJ8UMJ8Pbnj9rXD6OHlga\" target=\"_blank\">B2G</a>？<br></p><p><a href=\"https://github.com/search?utf8=%E2%9C%93&amp;q=b2g\" target=\"_blank\">Github B2G</a></p><p><a href=\"https://developer.mozilla.org/en-US/Apps\" target=\"_blank\">应用开发</a></p><p>社区：<a href=\"http://www.mozfan.com/\" target=\"_blank\">魔智</a></p><br>发布于 4个月前， 阅读(40) | 评论(0) | 投票(0) | 收藏(1)&nbsp;<a href=\"http://my.oschina.net/jak/blog/354115\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/354111\">Linux快捷键&amp;命令</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585667\">Tools</a><br><br><br>092014-12<p><strong>sudo&nbsp;</strong>-i &nbsp;// 切换到root用户</p><p><strong>nohup&nbsp;</strong>command &lt;fileName&gt; &amp; &nbsp;//&nbsp;在命令行打开程序，当命令行关闭时，程序不关闭</p><p>如：nohup sublime Webapps.jsm &amp;</p><p><strong>set</strong>&nbsp;-o vi &nbsp;// 将命令行切换到vi模式</p><p><strong>ssh</strong>&nbsp;dest[host-name@host-ip] &nbsp;// 远程登录</p><p><strong>scp</strong>&nbsp;source dest[host-name@host-ip:file-path] &nbsp;// 远程拷贝文件</p><p>待续</p><br>发布于 4个月前， 阅读(37) | 评论(0) | 投票(0) | 收藏(1)&nbsp;<a href=\"http://my.oschina.net/jak/blog/354111\">阅读全文...</a><br></li><li><h2>转\t<a href=\"http://my.oschina.net/jak/blog/354048\">异步编程</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585472\">JavaScript</a><br><br><br>092014-12<p>&nbsp; &nbsp; &nbsp;目前需求中涉及到大量的异步操作，实际的页面越来越倾向于单页面应用。以后可以会使用backbone、angular、knockout等框架，但是关于异步编程的问题是首先需要面对的问题。随着node的兴起，异步编程成为一个非常热的话题。经过一段时间的学习和实践，对异步编程的一些细节进行总结。</p><h2>1.异步编程的分类</h2><p>&nbsp; &nbsp; &nbsp;解决异步问题方法大致包括：直接回调、pub/sub模式(事件模式)、异步库控制库(例如async、when)、promise、Generator等。</p><h3>1.1 回调函数</h3><p>&nbsp; &nbsp; &nbsp; 回调函数是常用的解决异步的方法，经常接触和使用到，易于理解，并且在库或函数中非常容易实现。这种也是大家接使用异步编程经常使用到的方法。</p><p>&nbsp; &nbsp; &nbsp; 但是回调函数的方式存在如下的问题：</p><p>&nbsp; &nbsp; &nbsp;1. 可能形成万恶的嵌套金字塔，代码不易阅读；</p><p>&nbsp; &nbsp; &nbsp;2. 只能对应一个回调函数，在很多场景中成为一个限制。</p><h3>1.2 pub/sub模式(事件)</h3><p>&nbsp; &nbsp; &nbsp;该模式也称为事件模式，是回调函数的事件化，在jQuery等类库中非常常见。</p><p>&nbsp; &nbsp; &nbsp;事件发布订阅者模式本身并无同步与异步调用的问题，但是在node中，emit调用多半是伴随事件循环而异步触发的。该模式常用来解耦业务逻辑，事件发布者无须关注注册的回调函数，也不用关注回调函数的个数，数据通过消息的方式可以很灵活的传递。</p><p>&nbsp; &nbsp; &nbsp;该模式的好处是：1. 便于理解；2. 不再局限于一个回调函数。</p><p>&nbsp; &nbsp; &nbsp;不好的地方时：1. 需要借助类库； 2.事件与回调函数的顺序很重要</p><p><a>?</a></p><p>123456789var&nbsp;img = document.querySelect(#id);img.addEventListener(&nbsp;'load'&nbsp;, function() {　　&nbsp;// 图片加载完成&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......});img.addEventListener(&nbsp;'error'&nbsp;, function() {　　&nbsp;// 出问题了　　......});<br></p><p>　　上述代码存在两个问题：</p><p>&nbsp; &nbsp; &nbsp; a. img实际已经加载完成，此时才绑定load回调函数，结果回调不会执行，但依然希望执行该对应回调函数。</p><p><a>?</a></p><p>123456789101112131415var&nbsp;img = document.querySelect(#id);function load() {　　...}&nbsp;&nbsp;if&nbsp;(img.complete) {　　load();}&nbsp;else&nbsp;{　　img.addEventListener(&nbsp;'load'&nbsp;, load);}&nbsp;img.addEventListener(&nbsp;'error'&nbsp;, function() {　　&nbsp;// 出问题了　　......});<br></p><p>　　&nbsp;b. 无法很好处理存在异常</p><p>&nbsp; &nbsp; &nbsp; 结论：事件机制最适合处理同一个对象上反复发生的事情，不需要考虑当绑定回调函数之前事件发生的情况。</p><h3>1.3 异步控制库</h3><p>&nbsp; &nbsp; &nbsp; 目前的异步库主要有Q、when.js、win.js、RSVP.js等。</p><p>&nbsp; &nbsp; &nbsp; 这些库的特点是代码是线性的，可以从上到下完成书写，符合自然习惯。</p><p>&nbsp; &nbsp; &nbsp; 不好的地方也是风格各异，不便于阅读，增加学习成本。</p><h3>1.4 Promise</h3><p>&nbsp; &nbsp; &nbsp;Promise翻译成中文为承诺，个人理解是异步完成之后，就会给外部一个结果（成功或失败），并承诺结果不再发生改变。换句话就是Promise反应了一个操作的最终返回结果值(A promise represents the eventual value returned from the single completion of an operation)。目前Promise已经引入到ES6规范里面，Chrome、firefox等高级浏览器已经在内部实现了该原生方法，使用起来相当方便。</p><p>&nbsp; &nbsp; &nbsp;下面从如下几个方面来解析Promise的特点：</p><h4>&nbsp; &nbsp; 1.4.1 状态</h4><p>&nbsp; &nbsp; &nbsp;包含三种状态：pending、fulfilled、rejected，三种状态只能发生两种转换(从pending---&gt;fulfilled、pending—&gt;rejected)，并且状态的转换仅能发生一次。</p><p><img src=\"http://static.oschina.net/uploads/img/201412/09102508_7suA.jpg\" alt=\"\"></p><h4>&nbsp; &nbsp; 1.4.2 then方法</h4><p>&nbsp; &nbsp; then方法用于指定异步事件完成之后的回调函数。</p><p>&nbsp; &nbsp;这个方法可以说是Promise的灵魂方法，该方法让Promise充满了魔力。有如下几个具体表现：</p><p>&nbsp; &nbsp; a） then方法返回Promise。这样就实现了多个异步操作的串行操作。</p><p><img src=\"http://static.oschina.net/uploads/img/201412/09102508_CxNb.jpg\" alt=\"\"></p><p>&nbsp; &nbsp; &nbsp;关于上图中黄圈1的对value的处理是Promise里面较为复杂的一个地方，value的处理分为两种情况：Promise对象、非Promise对象。</p><p>&nbsp; &nbsp; &nbsp;当value 不是Promise类型时，直接将value作为第二个Promise的resolve的参数值即可；当为Promise类型时，promise2的状态、参数完全由value决定，可以认为promsie2完全是value的傀儡，promise2仅仅是连接不同异步的桥梁。</p><p><img src=\"http://static.oschina.net/uploads/img/201412/09102509_P3jn.jpg\" alt=\"\"></p><p><a>?</a></p><p>123456789101112131415161718192021222324252627282930Promise.prototype.then = function(onFulfilled, onRejected) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Promise(function(resolve, reject) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//此处的Promise标注为promise2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onFulfilled: onFulfilled,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onRejected: onRejected,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve: resolve,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reject: reject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});}&nbsp;&nbsp;function handle(deferred) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;handleFn;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(state ===&nbsp;'fulfilled'&nbsp;) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handleFn = deferred.onFulfilled;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(state ===&nbsp;'rejected'&nbsp;) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handleFn = deferred.onRejected;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ret = handleFn(value);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deferred.resolve(ret);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//注意，此时的resolve是promise2的resolve}function&nbsp; resolve(val) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(val &amp;&amp;&nbsp;typeof&nbsp;val.then ===&nbsp;'function'&nbsp;) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val.then(resolve);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if val为promise对象或类promise对象时，promise2的状态完全由val决定&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(callback) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// callback为指定的回调函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(val);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}}<br></p><p>　　b）实现了多个不同异步库之间的转换。</p><p>&nbsp; &nbsp; 在异步中存在一个叫thenable的对象，就是指具有then方法的对象，只要一个对象对象具有then方法，就可以对其进行转换，例如：</p><p><a>?</a></p><p>123var&nbsp;deferred = $(&nbsp;'aa.ajax'&nbsp;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// !!deferred.then&nbsp; === truevar&nbsp;P = Promise.resolve(deferred);p.then(......)<br></p><h4>1.4.3 commonJS Promise/A规范</h4><p>&nbsp; &nbsp; &nbsp; 目前关于Promise的规范存在Promise/A和Promise/A+规范，这说明关于Promise的实现是挺复杂的。</p><p><a>?</a></p><p>1then(fulfilledHandler, rejectedHandler, progressHandler)<br></p><h4>1.4.4 注意事项</h4><p>&nbsp; &nbsp; &nbsp;一个Promise里面的回调函数是共享value的，在结果处理中value作为参数传递给相应的回调函数，如果value是对象，那就要小心不要轻易修改value的值。</p><p><a>?</a></p><p>1234567891011var&nbsp;p = Promise.resolve({x: 1});p.then(function(val) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'first callback: '&nbsp;+ val.x++);});p.then(function(val) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'second callback: '&nbsp;+ val.x)})&nbsp;&nbsp;// first callback: 1// second callback: 2<br></p><h3>1.5 Generator&nbsp;</h3><p>&nbsp; &nbsp; &nbsp; 上面所有的方法均是基于回调函数来完成异步操作的，无非是对回调函数进行封装而已。ES6里面提出了Generator，增加了解决异步操作的途径，不再依据回调函数来完成。</p><p>&nbsp; &nbsp; &nbsp; Generator最大的特点就是可以实现函数的暂停、重启，这个特性非常有利于解决异步操作。将Generator的暂停与promise的异常处理结合起来，可以比较优雅地解决异步编程问题。具体实现参考：<a href=\"http://davidwalsh.name/es6-generators\">Kyle Simpson</a></p><h2>2. 异步编程存在的问题</h2><h3>&nbsp; &nbsp; &nbsp; 2.1 异常处理</h3><p>&nbsp; &nbsp; &nbsp; &nbsp; a) 异步事件包括两个环节：发出异步请求、结果处理，这两个环节通过event loop来连接起来。那么try catch来进行异常捕获的时候就需要分来捕获。</p><p><a>?</a></p><p>12345try&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;asyncEvent(callback);&nbsp;}&nbsp;catch&nbsp;(err) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......}<br></p><p>&nbsp; &nbsp; &nbsp;上述代码是无法捕获callback里面的异常，只能获取发出请求环节的异常。这样就存在问题：假如请求的发出和请求的处理是两个人完成的，那么在异常处理的时候就存在问题？</p><p>&nbsp; &nbsp; &nbsp; &nbsp; b）promise实现异常的传递，这带来一些好处，在实际项目中保证代码不被阻塞。但是如果异步事件比较多的时候，不容易找出到底是那个异步事件产生了异常。</p><p><a>?</a></p><p>1234567891011121314151617181920212223242526272829303132333435363738// 场景描述： 在CRM里面展示价格的报警信息，其中包含竞对的信息。但是获取竞对的信息时间比较长，后端为了避免慢查询，就把一条记录拆成两块分别获取。// 第一步：获取价格报警信息，除了竞对信息function getPriceAlarmData() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Promise(function(resolve) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.io(url, {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method:&nbsp;'get'&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;params&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;: function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(id, data) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(alarmData);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});}// 得到报警信息后，在去获取竞对信息getPriceAlarmData().then(function(data) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 数据渲染，除了竞对信息&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render(data);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Promise(function(resolve) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.io(url, {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method:&nbsp;'get'&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: {alarmList: data},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;: function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(id, compData) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(compData);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});})&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp; 获取完所有数据后进行竞对信息的渲染.then(function(data) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 渲染竞对信息&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render(data)}, function(err) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 异常处理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(err);});<br></p><p>&nbsp; &nbsp; &nbsp; 可以把上述代码转换成如下：</p><p><a>?</a></p><p>12345678910try&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 获取除竞对以外的报警信息&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;alarmData = alarmDataExceptCompare();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render(alarmData);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 根据报警信息查询竞对信息&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;compareData = getCompareInfo(alarmData);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render(compareData);} catche(err) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(err.message);}<br></p><p>在上述例子中把异常处理放到最后进行处理，这样当其中存在某个环节出现异常，我们无法准确知道到底是哪个事件产生的。&nbsp; &nbsp; &nbsp;&nbsp;</p><h3>2.2 jQuery.Deferred 的问题</h3><p>&nbsp; &nbsp; &nbsp;jQuery中也实现了异步操作，但是在实现上不符合promise/A+规范，主要表现在以下几个方面：</p><p>&nbsp; &nbsp; a. 参数的个数：标准的Promise只能接受一个参数，而jQuery中则可以传递多个参数</p><p><a>?</a></p><p>1234567891011function asyncInJQuery() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d =&nbsp;new&nbsp;$.Deferred();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.resolve(1, 2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 100);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;d.promise()}asyncInJQuery().then(function(val1, val2) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'output: '&nbsp;, val1, val2);});// output: 1 2<br></p><p>&nbsp;b. 结果处理中异常的处理&nbsp; &nbsp;</p><p><a>?</a></p><p>12345678910111213141516171819202122232425262728293031323334function asyncInPromise() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Promise(function(resolve) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;jsonStr =&nbsp;'{\"name\": \"mt}'&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(jsonStr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 100);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;asyncInPromise().then(function(val) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d = JSON.parse(val);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(d.name);&nbsp;&nbsp;&nbsp;}).then(&nbsp;null&nbsp;, function(err) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'show error: '&nbsp;+ err.message);&nbsp;&nbsp;&nbsp;});// show error: Unexpected end of input&nbsp;&nbsp;function asyncInJQuery() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d =&nbsp;new&nbsp;$.Deferred();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;jsonStr =&nbsp;'{\"name\": \"mt}'&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.resolve(jsonStr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 100);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;d.promise()}asyncInJQuery().then(function(val) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;d = JSON.parse(val);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(d.name);}).then(function(v) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'success: '&nbsp;, v.name);}, function(err){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&nbsp;'show error: '&nbsp;+ err.message);});&nbsp;&nbsp;//Uncaught SyntaxError: Unexpected end of input<br></p><p>&nbsp; &nbsp; &nbsp;从中可以看出，Promise对回调函数进行了结果处理，可以捕获回调函数执行过程中的异常，而jQuery.Deferred却不可以。</p><p>&nbsp;</p><p>参考内容</p><p><a href=\"http://sporto.github.io/blog/2012/12/09/callbacks-listeners-promises/\">http://sporto.github.io/blog/2012/12/09/callbacks-listeners-promises/</a></p><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></p><p><a href=\"http://wiki.commonjs.org/wiki/Promises/A#Open_Issues\">http://wiki.commonjs.org/wiki/Promises/A#Open_Issues</a></p><p><a href=\"https://promisesaplus.com/\">https://promisesaplus.com/</a></p><p><a href=\"https://blog.domenic.me/youre-missing-the-point-of-promises/\">https://blog.domenic.me/youre-missing-the-point-of-promises/</a></p><p><a href=\"http://www.html5rocks.com/zh/tutorials/es6/promises/\">http://www.html5rocks.com/zh/tutorials/es6/promises/</a></p><p><a href=\"http://davidwalsh.name/es6-generators\">http://davidwalsh.name/es6-generators</a></p><p>&nbsp;</p><br>发布于 4个月前， 阅读(32) | 评论(0) | 投票(0) | 收藏(2)&nbsp;<a href=\"http://my.oschina.net/jak/blog/354048\">阅读全文...</a><br></li><li><h2>转\t<a href=\"http://my.oschina.net/jak/blog/354028\">前端WEB编辑器最爱——webstrom</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585667\">Tools</a><br><br><br>092014-12<p>欲先善其事，必先利其器，如题。看到网上一篇介绍webstrom的文章，觉得功能确实强大，也知道为什么阿里巴巴的前端传到github上的文件为啥都有一个 .idea 文件，（传说淘宝内部推荐写js用webstrom）</p><p>我们可以理解 IDE 就是集成了很多你想要的功能，或者你不想要的功能。换句话说就是装了很多插件的 editor ，所以到目前为止，我还觉得没必要给它装什么插件。</p><p>那么接下来开始介绍webstrom的特色功能：</p><p>&nbsp;</p><p><img src=\"http://static.oschina.net/uploads/img/201412/09094837_2BUW.jpg\" alt=\"WebStorm 是 JetBrains 推出的一款商业的 JavaScript 开发工具\"></p><p>&nbsp;</p><p>WebStorm 是 JetBrains 推出的一款商业的 JavaScript 开发工具</p><ol><li><p>任何一个编辑器都需要保存(ctrl + s)，这是所有win平台上编辑类软件的特点，但是webstorm编辑文件右上角是没有那个熟悉的 * 的。<br>好处：省去了ctrl + s之后，在结合Firefox的vim，基本不动鼠标就可以看到结果页面了。&nbsp;<br>坏处：没有以前的 * 标识，万一键盘误操作也会被立即存储。</p></li><li><p>任何一个编辑器只要文件关闭了就没有历史记录了，但是webstorm有。 vcs-&gt;Local History -&gt; Show History（快捷键：ALT+~ -〉7）<br>好处：只要webstorm不关闭，你的文件随时可以返回到之前的操作（这也是为啥在 webstorm 里ctrl+y是删除一行的原因了）。<br>坏处：webstorm关闭重启后这些历史记录就没有了；还有一个坏处就是由此带来的内存消耗也必然比较大。</p></li><li><p>任何一个编辑器，除了服务器svn之外，没有本地版本，但是webstorm提供一个本地文件修改历史记录（快捷键：ALT+SHIFT+c）。也可以 Ctrl + E 弹出最近打开的文件。<br>好处：相当于本地svn。&nbsp;<br>坏处：内存消耗也必然比较大。</p></li><li><p>集成了zencoding，html5，ftp，即时编辑（chrome）,自动完成,基于Mozilla的JavaScript调试器，JSLint、Less支持、CoffeeScript支持、Node.JS、单元测试、集成git和svn版本控制等特性。</p></li><li><p>在编写CSS中，会智能的提示各种文件以及图片的路径，就不用再去确认这个文件是否存在了。</p></li></ol><p>其他的特性就介绍了，想了解更多可以去<a href=\"http://www.jetbrains.com/webstorm/index.html\" target=\"_blank\">webstrom官网</a>继续寻找。看完了这么介绍以及那么多给力的特性，是不是有种冲动马上试一试这款传说中的前端神器啊？嗯。</p><p>首先在<a href=\"http://www.jetbrains.com/webstorm/download/index.html\" target=\"_blank\">官方下载页</a>下载webstrom后，点击安装，然后一直下一步，最后会出现需要注册码界面，因为webstrom是商业的IDE，而天朝的屌丝前端当然没那么钱去买那么昂贵的神器了，不用担心，我们可以用<a href=\"http://vdisk.weibo.com/s/43rOs\" target=\"_blank\">WebStorm的密钥</a>来学习使用这款前端神器。嘿嘿~~~~</p><p>安装成功后，肯定会有些不适，就像我一样觉得这配色真的太戳了。还有一些设置也不是我也要的。那么以下我就列出我习惯的设置。</p><h2>webstorm安装后的一些设置技巧：</h2><ul><li><p>如何更改主题（字体&amp;配色）:<br>File -&gt; settings -&gt; Editor -&gt; colors&amp;fonts -&gt; scheme name.<a href=\"http://phpstorm-themes.com/\" target=\"_blank\">主题下载地址</a></p></li><li><p>如何让webstorm启动的时候不打开工程文件：<br>File -&gt; Settings-&gt;General去掉Reopen last project on startup.</p></li><li><p>如何完美显示中文：<br>File -&gt; Settings-&gt;Appearance中勾选Override default fonts by (not recommended)，设置Name:NSimSun，Size:12</p></li><li><p>如何显示行号：<br>File -&gt; Settings-&gt;Editor，”Show line numbers”打上勾，就显示行号了</p></li><li><p>如何代码自动换行：<br>File -&gt; settings -&gt; Editor “Use Soft Wraps in editor” 打上钩，代码就自动换行了</p></li><li><p>如何点击光标，显示在本行末尾：<br>File -&gt; Settings-&gt;Editor “Allow placement of caret after end of line”去掉勾就行了。</p></li><li><p>如何修改快键键：<br>File -&gt; Settings-&gt;Keymap，然后双击要修改快捷的功能会有提示框出来，按提示操作</p></li><li><p>换成自己熟悉编辑器的快键键：<br>File -&gt;Settings-&gt;Keymap，支持像Visual Studio、Eclipse、NetBeans这样的主流IDE。</p></li><li><p>javascript类库提示。&nbsp;<br>File -&gt; settings -&gt; Javascript -&gt; Libraries -&gt; 然后在列表里选择自己经常用到的javascript类库，最后Download and Install就ok了.</p></li><li><p>在开发js时发现，需要ctrl + return 才能选候选项：&nbsp;<br>File -&gt; Setting -&gt; Editor -&gt; Code Completion -&gt; Preselect the first suggestion: “Smart” 改为 “Always”</p></li><li><p>js提示比较迟缓<br>File -&gt; Code Completion -&gt; Autopopup in 下 1000改为0</p></li><li><p>git配置：<br>File -&gt; settings -&gt; Editor -&gt; github，进去改github的账户，如果没有git则不需要.</p></li><li><p>插件安装：<br>File -&gt;plugins，然后就选择给力的插件们再安装.(“css-X-fire”插件,用于当使用firebug修改css属性时，编辑器内的css代码也会发生变化。）</p></li><li><p>以后更新</p></li></ul><h2>webstorm使用心得</h2><ul><li><p>收藏夹功能:<br>当工程目录很庞大时，有些子目录很经常打开，但层级又很深，这时候可以把目录添加到收藏夹里面，添加成功后，左侧有个“Favorites”菜单</p></li><li><p>面包屑导航：<br>除了左侧的工程页面，可以选择目录之外，在顶部菜单下有一个类似网站面包屑导航一样的目录也可以实现相同功。点击每个目录就会有下拉菜单显示其下的子目录，很实用.</p></li><li><p>构造器界面:<br>注释符合格式的话就会出现。如果是js文件则是js类的函数和对象；css文件的话则是这个css文件的概括；html文件的话则是节点的结构图。话说这几个就是为了方便查看代码的结构性.</p></li><li><p>todo界面：<br>给代码加todo注释就会出现这个界面</p></li><li><p>双栏代码界面：<br>右击代码选项卡上的文件，然后右键 -&gt; spilt vertically(左右两屏)或者spilt horizontally(上下两屏)</p></li><li><p>本地历史功能:<br>找回代码的好办法</p></li></ul><h2>git使用</h2><p>webstorm中只集成了git的常用操作，并不能完全替代命令行工具。在界面的右下角可以查看处于哪个git分支。也可以在上面点击切换或者新建分支。</p><ul><li><p>查看当前代码与版本库代码的差异:<br>右击代码界面任意区域，选择git -&gt; compare with然后选择要比较的版本库。</p></li></ul><h2>webstorm的快捷键说明：</h2><p>Editing编辑相关快捷键</p><ul><li><p>Ctrl + Space：<br>Basic code completion (the name of any class, method or variable) 基本代码完成（任何类、函数或者变量名称），改为Alt+S</p></li><li><p>Ctrl + Shift + Enter：<br>Complete statement 补全当前语句</p></li><li><p>Ctrl + P：<br>Parameter info (within method call arguments) 参数信息 包括方法调用参数</p></li><li><p>Ctrl + mouse over code<br>Brief Info 简单信息</p></li><li><p>Ctrl + F1<br>Show description of error or warning at caret 显示光标所在位置的错误信息或者警告信息</p></li><li><p>Alt + Insert<br>Generate code…（Getters, Setters, Constructors）新建一个文件或者生成代码，…构造函数，可以创建类里面任何字段的getter与setter方法</p></li><li><p>Ctrl + O<br>Override methods 重载方法</p></li><li><p>Ctrl + I<br>Implement methods 实现方法</p></li><li><p>Ctrl + Alt + T<br>Surround with…（if, else, try, catch, for, etc）用 * 来围绕选中的代码行，（ * 包括 if 、 while 、 try catch 等）</p></li><li><p>Ctrl + /<br>Comment/uncomment with line comment 行注释/取消行注释</p></li><li><p>Ctrl + Shift + /<br>Comment/uncomment with block comment 块注释/取消块注释</p></li><li><p>Ctrl + W<br>Select successively increasing code blocks 选择代码块，一般是增量选择</p></li><li><p>Ctrl + Shift + W<br>Decrease current selection to previous state 上个快捷键的回退，减量选择代码</p></li><li><p>Alt + Q<br>Context info 上下文信息</p></li><li><p>Alt + Enter<br>Show intention actions and quick-fixes 意图行动，快速见效</p></li><li><p>Ctrl + Alt + L<br>Reformat code 根据模板格式对代码格式化</p></li><li><p>Tab/ Shift + Tab<br>Indent/unindent selected lines 对所选行进行缩排处理/撤销缩排处理</p></li><li><p>Ctrl + X or Shift + Delete<br>Cut current line or selected block to clipboard 剪切当前行或所选代码块到剪切板</p></li><li><p>Ctrl + C or Ctrl + Insert<br>Copy current line or selected block to chipboard 拷贝当前行或者所选代码块到剪切板</p></li><li><p>Ctrl + V or Shift + Insert<br>Paste from clipboard 粘贴剪切板上的内容</p></li><li><p>Ctrl + Shift + V<br>Paste from recent buffers 粘贴缓冲器中最新的内容</p></li><li><p>Ctrl + D<br>Duplicate current line or selected block 复制当前行或者所选代码块</p></li><li><p>Ctrl + Y<br>Delete line at caret 删除光标所在位置行</p></li><li><p>Ctrl + Shift + J<br>Smart line join（HTML and JavaScript only）加入智能行 （HTML 和JavaScript）</p></li><li><p>Ctrl + Enter<br>Smart line split（HTML and JavaScript only）分离智能行 （HTML 和JavaScript）</p></li><li><p>Shift + Enter<br>Start new line 另起一行</p></li><li><p>Ctrl + Shift + U<br>Toggle case for word at caret or selected block 光标所在位置大小写转换</p></li><li><p>Ctrl + Shift + ]/[<br>Select till code block end/start 选择直到代码块结束/开始</p></li><li><p>Ctrl + Delete<br>Delete to word end 删除文字结束</p></li><li><p>Ctrl + Backspace<br>Delete to word start 删除文字开始</p></li><li><p>Ctrl + NumPad+/-<br>Expand/collapse code block 扩展/缩减代码块</p></li><li><p>Ctrl + Shift+ NumPad+<br>Expand all 扩张所有</p></li><li><p>Ctrl + Shift+ NumPad-<br>Collapse 缩减所有</p></li><li><p>Ctrl + F4<br>Close active editor tab 关闭活跃编辑标签</p></li></ul><p>Search/replace搜索/替代相关快捷键</p><ul><li><p>Ctrl + F&nbsp;<br>Find 当前文件内快速查找代码</p></li><li><p>Ctrl + Shift + F&nbsp;<br>Find in path 指定文件内寻找路径</p></li><li><p>F3&nbsp;<br>Find next 查找下一个</p></li><li><p>Shift + F3&nbsp;<br>Find previous 查找上一个</p></li><li><p>Ctrl + R&nbsp;<br>Replace 当前文件内代码替代</p></li><li><p>Ctrl + Shift + R&nbsp;<br>Replace in path 指定文件内代码批量替代</p></li></ul><p>Usage Search搜索相关快捷键</p><ul><li><p>Alt + F7/Ctrl + F7&nbsp;<br>Find usages/Find usages in file 找到使用/在文件找到使用</p></li><li><p>Ctrl + Shift + F7&nbsp;<br>Highlight usages in file文件中精彩使用</p></li><li><p>Ctrl + Alt + F7&nbsp;<br>Show usages 显示使用</p></li></ul><p>Running运行</p><ul><li><p>Alt + Shift + F10&nbsp;<br>Select configuration and run 选择构架，运行</p></li><li><p>Alt + Shift + F9&nbsp;<br>Select configuration and debug 选择构架，修补漏洞</p></li><li><p>Shift + F10&nbsp;<br>Run 运行</p></li><li><p>Shift + F9&nbsp;<br>Debug 修补漏洞</p></li><li><p>Ctrl + Shift + F10&nbsp;<br>Run context configuration from editor 从编辑运行内容构架</p></li><li><p>Ctrl + Shift + X&nbsp;<br>Run command line 运行命令行</p></li></ul><p>Debugging&nbsp;Debugging相关快捷键</p><ul><li><p>F8&nbsp;<br>Step over 不进入函数</p></li><li><p>F7&nbsp;<br>Step into 单步执行</p></li><li><p>Shift + F7&nbsp;<br>Smart step into 智能单步执行</p></li><li><p>Shift + F8&nbsp;<br>Step out 跳出</p></li><li><p>Alt + F9&nbsp;<br>Run to cursor 运行到光标处</p></li><li><p>Alt+ F8&nbsp;<br>Evaluate expression 评估表达</p></li><li><p>F9&nbsp;<br>Resume program 重新开始程序</p></li><li><p>Ctrl + F8&nbsp;<br>Toggle breakpoint 切换断点</p></li><li><p>Ctrl + Shift + F8&nbsp;<br>View breakpoints 查看断点</p></li></ul><p>Navigation&nbsp;定位相关快捷键</p><ul><li><p>Ctrl + N&nbsp;<br>Go to class跳转到指定类</p></li><li><p>Ctrl + Shift + N&nbsp;<br>Go to file 通过文件名快速查找工程内的文件</p></li><li><p>Ctrl + Alt +Shift + N&nbsp;<br>Go to symbol 通过一个字符查找函数位置</p></li><li><p>Alt + Right/ left&nbsp;<br>Go to next/ previous editor tab 进入下一个/ 上一个编辑器选项</p></li><li><p>F12&nbsp;<br>Go back to previous tool window 进入上一个工具窗口</p></li><li><p>Esc&nbsp;<br>Go to editor（from tool window） 从工具窗口进入编辑器</p></li><li><p>Shift + Esc&nbsp;<br>Hide active or last active window 隐藏活动窗口</p></li><li><p>Ctrl + Shift + F4&nbsp;<br>Close active run/message/find/…tab 关闭活动….标签</p></li><li><p>Ctrl + G&nbsp;<br>Go to line 跳转到第几行</p></li><li><p>Ctrl + E&nbsp;<br>Recent files popup 弹出最近打开的文件</p></li><li><p>Ctrl + Alt + Left/Right&nbsp;<br>Navigate back/forward 导航前进/后退</p></li><li><p>Ctrl + Shift + Backspace&nbsp;<br>Navigate to last edit location 向最近编辑定位导航</p></li><li><p>Alt + F1&nbsp;<br>Select current file or symbol in any view 查找当前选中的代码或文件在其他界面模块的位置</p></li><li><p>Ctrl + B or Ctrl + Click&nbsp;<br>Go to declaration跳转到定义处</p></li><li><p>Ctrl + Alt + B&nbsp;<br>Go to implementation(s) 跳转方法实现处</p></li><li><p>Ctrl + Shift + B&nbsp;<br>Go to type declaration 跳转方法定义处</p></li><li><p>Ctrl + Shift + I&nbsp;<br>Open quick definition lookup 打开定义快速查找</p></li><li><p>Ctrl + U&nbsp;<br>Go to super-method/super-class 跳转方法/超阶级</p></li><li><p>Alt + Up/Down&nbsp;<br>Go to previous/next method 在方法间快速移动定位</p></li><li><p>Ctrl + ]/[&nbsp;<br>Move to code block end/start 跳转到编码块结束/开始</p></li><li><p>Ctrl + F12&nbsp;<br>File structure popup 文件结构弹出</p></li><li><p>Ctrl + H&nbsp;<br>Type hierarchy 类型层次</p></li><li><p>Ctrl + Alt + H&nbsp;<br>Call hierarchy 调用层次结构</p></li><li><p>F2/ Shift + F2&nbsp;<br>Next/previous highlighted error 跳转到后一个/前一个错误，高亮错误或警告快速定位，使用这个快捷键可以快捷在出错的语句之间进行跳转。</p></li><li><p>F4/Ctrl + Enter&nbsp;<br>Edit source/ View source 编辑源代码/查看源代码</p></li><li><p>Alt + Home&nbsp;<br>Show navigation bar 显示导航栏</p></li><li><p>F11&nbsp;<br>Toggle bookmark 切换标记</p></li><li><p>Ctrl + F11&nbsp;<br>Toggle bookmark with mnemonic 采用记忆切换标记</p></li><li><p>Ctrl + #[0-9]&nbsp;<br>Go to numbered bookmark 跳转到带编号的标记</p></li><li><p>Shift + F11&nbsp;<br>Show bookmark 显示标记</p></li></ul><p>Refactoring&nbsp;重构相关快捷键</p><ul><li><p>F5<br>Copy 拷贝</p></li><li><p>F6&nbsp;<br>Move 移动</p></li><li><p>Alt + Delete&nbsp;<br>Safe Delete 安全删除</p></li><li><p>Shift + F6&nbsp;<br>Rename 重新命名</p></li><li><p>Ctrl + Alt + N&nbsp;<br>Inline Variable 嵌入变量</p></li><li><p>Ctrl + Alt + M&nbsp;<br>Extract Method( Javascript only) 提取函数</p></li><li><p>Ctrl + Alt + V&nbsp;<br>Introduce Variable 引入变量</p></li><li><p>Ctrl + Alt + F&nbsp;<br>Introduce Field 引入域</p></li><li><p>Ctrl + Alt + C&nbsp;<br>Introduce Constant 引入常量</p></li></ul><p>VCS/Local History&nbsp;版本控制系统/ 本地历史相关快捷键</p><ul><li><p>Alt +　BackQuote( )&nbsp;<br>‘VCS’quick popup 快速弹出 VCS</p></li><li><p>Ctrl + K&nbsp;<br>Commit project to VCS 提交项目至VCS</p></li><li><p>Ctrl + T&nbsp;<br>Update project from VCS 从VCS 更新项目</p></li><li><p>Alt + Shift + C&nbsp;<br>View recent changes 查看最新改变</p></li></ul><p>General&nbsp;常用的相关快捷键</p><ul><li><p>Ctrl + Shift +A&nbsp;<br>Find action 查找并调用编辑器的功能</p></li><li><p>Alt + #[0-9]&nbsp;<br>Open corresponding tool window 快速切换打开界面模块</p></li><li><p>Ctrl + Alt + F11&nbsp;<br>Toggle full screen mode 切换全屏模式</p></li><li><p>Ctrl + Shift + F12&nbsp;<br>Toggle maximizing editor 切换最大化编辑器</p></li><li><p>Alt + Shift + F&nbsp;<br>Add to Favorites 将当前文件添至收藏夹</p></li><li><p>Alt + Shift + I&nbsp;<br>Inspect current file with current profile 使用当前属性检查当前文件</p></li><li><p>Ctrl + BackQuote( )&nbsp;<br>Quick switch current scheme 快速转换现有组合</p></li><li><p>Ctrl + Alt + S&nbsp;<br>Open setting dialog 打开设置对话框</p></li><li><p>Ctrl + Tab&nbsp;<br>Switch between tabs and tool window 标签和工具窗的转换（与windows快捷键冲突）</p></li></ul><br>发布于 4个月前， 阅读(41) | 评论(0) | 投票(1) | 收藏(1)&nbsp;<a href=\"http://my.oschina.net/jak/blog/354028\">阅读全文...</a><br></li><li><h2>转\t<a href=\"http://my.oschina.net/jak/blog/354027\">Sublime Text3实用功能和常用快捷键</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585667\">Tools</a><br><br><br>092014-12<p>下面是我通过网上视频教程或文本资料学习sublime Text3时收集的一些实用功能和常用快捷键，现在分享出来，如果还有其它的好用的功能可以在下面留言，以便互相学习。</p><p><strong>PS：ST3在Mac OX与Windows不同平台下的快捷键差别很大。下面是针对windows平台的解说。</strong></p><h4>1. 可以直接打开图片</h4><p>版本3有个很好的特性（对于前端来说）：可以直接在ST3中打开图片。<br><br></p><h4>2. Goto Anything功能 — 快速查找（ctrl + P）</h4><ul><li><p>输入@+函数名可以快速找到函数。</p></li><li><p>输入#+文本可以快速进行文件内文本匹配。<br><br></p></li></ul><h4>3. 多行游标功能（ctrl + D，非常实用）</h4><p>如何将文件中的某个单词更改为另一个？<br><strong>方法一</strong>：利用查找替换功能：ctrl + H<br><strong>方法二（推荐）</strong>：多行游标功能，选中一个后，按ctrl+D可以同时选中另一个，<strong>同时多了另一个光标</strong>。</p><p><strong>但多行游标能完成查找替换功能不能完成的工作</strong>。<br>比如在某些符合条件的语句后面添加新行，同时加入一些新的文本，如何快速的达到这一目的？<br>- 可以选中某一个模式，然后ctrl+D选中另一个，如果有某些不想添加新行的模式则按ctrl+K，ctrl+D跳过这个进入下一个符合条件的模式行。<br>- 还可以按Alt + F3快捷键全选所有符合条件的单词，产生多个光标，而不用一个个ctrl+D选中。<br>- 如果要在每行都加入光标，可以先ctrl+A然后ctrl+shift+L即可。<br>- 如果想在某个字符的多行后面加上光标，可以将光标放在这个字符后面，按住shift键，然后右键可以向下拖动产生多个光标。<br><br></p><h4>4. 命令模式（应尽可能使用，而不用浪费脑细胞记忆大量命令的快捷键）</h4><p>比如用ctrl+N新建一个文件后，默认是plain text，没有语法高亮功能，如何设置语法模式？<br>- 可以通过右下角的语法选择区选择希望设置的语法模式。<br>- 还有另一种更好的办法，即使用ctrl + shift + P打开命令模式，然后输入set syntax [language]设置为某种语言的语法模式，比如set syntax java则设置为java语法高亮。<br>- st3支持模糊匹配，你也可以直接输入syntax java或ssjava。<br>- 若当前已经是某种语言的语法模式，则可以直接输入其它语言进行切换（而不用输入set syntax或syntax了），比如当然为java语法模式，那么直接输入js就可以马上切换为javascript语法模式。</p><p>还可以输入minimap隐藏或显示右边的minimap缩影<br><br></p><h4>5. 快速跳转到某一行</h4><p>按下Ctrl + G，输入行号，可以快速跳转到该行。<br><br></p><h4>6. 快速添加新行</h4><ul><li><p>Ctrl + Enter可以在当前行下新建一行。</p></li><li><p>Ctrl + Shift + Enter可以在当前行上面添加一行。<br><br></p></li></ul><h4>7. 多行缩进</h4><p>选中多行后按Ctrl + ]可以增加缩进，按Ctrl + [可以减少缩进。<br>PS：发现用Tab和Shift + Tab也是可以的。<br><br></p><h4>8. 完整拷贝，避免格式错乱</h4><p>我们发现，在从别的文件中拷贝一段代码过来的时候，多半只是第一行缩进，后面都乱了，这时可以使用Ctrl + Shift + V进行粘贴，可以在粘贴的过程中保持缩进，这时格式都是正确的。<br><br></p><h4>9. 重新打开关闭的标签</h4><p>在Chrome里面，如果你不小心关闭了某个标签页并想恢复它，你可以按下Shift + Ctrl + T重新打开它。<br>在ST3中也一样，如果你不小心关闭了某个文件，可以按下Shift + Ctrl + T快速恢复。连续重复该按键，ST将会按照关闭的先后顺序重新打开标签页。<br><br></p><h4>10. 按住shift + ctrl然后按←或→可快速选中一行中的某一部分，连续按扩大选择范围。</h4><p>比如你需要将某一部分进行注释(ctrl+/)或删除，使用这个功能就很方便。<br><br></p><h4>11. 上下移动行</h4><p>定位光标或选中某块区域，然后按shift+ctrl+↑↓可以上下移动该行。<br><br></p><h4>12.&nbsp;shift + ctrl + d可快速复制光标所在的一整行，并复制到该行之前。<br><br></h4><h4>13.&nbsp;Ctrl+Shift+M：选中花括号里面的全部内容不包括{}。<br><br></h4><h4>14.&nbsp;Ctrl+Shift+K：删除整行。<br><br></h4><h4>15. 快速关闭HTML里的标签</h4><p>写html文件时利用快捷键Alt + .可以快速关闭某个标签，如写&lt;html&gt;后按Alt+.可以快速得到&lt;/html&gt;。<br>但这样还是挺繁琐，可以使用前端插件Emmet插件，直接在新建的html文件里（首先得设置语法模式为html）直接输入!（代表html5格式的html文档）然后按下ctrl+E即可。<br><br></p><hr><h4>附：如何安装package control</h4><p>通过快捷键ctrl+\\``或者View &gt; Show Console`菜单打开控制台，输入下面Python执行代码（适用于Python3.x解释器）：</p><pre>import&nbsp;urllib.request,os;&nbsp;pf='Package&nbsp;Control.sublime-package';&nbsp;ipp&nbsp;=&nbsp;sublime.installed_packages_path();&nbsp;os.makedirs(&nbsp;ipp&nbsp;)&nbsp;if&nbsp;not&nbsp;os.path.exists(ipp)&nbsp;else&nbsp;None;&nbsp;urllib.request.install_opener(&nbsp;urllib.request.build_opener(&nbsp;urllib.request.ProxyHandler(&nbsp;)));&nbsp;open(&nbsp;os.path.join(&nbsp;ipp,&nbsp;pf),&nbsp;'wb'&nbsp;).write(&nbsp;urllib.request.urlopen(&nbsp;'http://sublime.wbond.net/'&nbsp;+pf.replace(&nbsp;'&nbsp;','%20'&nbsp;)).read());&nbsp;print(&nbsp;'Please&nbsp;restart&nbsp;Sublime&nbsp;Text&nbsp;to&nbsp;finish&nbsp;installation')</pre><p><br></p><br>发布于 4个月前， 阅读(10) | 评论(0) | 投票(0) | 收藏(0)&nbsp;<a href=\"http://my.oschina.net/jak/blog/354027\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/353969\">Good链接</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585667\">Tools</a><br><br><br>082014-12<p><a href=\"http://lab.hakim.se/scroll-effects/\" target=\"_blank\">scorll.js</a>：美化界面滚动条</p><p><a href=\"http://csswarp.eleqtriq.com/\" target=\"_blank\">csswarp</a>：Css text to path generator</p><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API?menu\" target=\"_blank\">Web API Interface</a>：When writing code for the Web using JavaScript, there are a great many APIs available. Below is a list of all the interfaces (that is, types of objects) that you may be able to use while developing your Web app or site.</p><p><a href=\"http://coolshell.cn/\" target=\"_blank\">酷壳</a>：享受编程和技术带来的快乐</p><p><a href=\"http://www.html5china.com/\" target=\"_blank\">html5china</a>：html5技术网站</p><p><a href=\"http://www.qianduan.net/\" target=\"_blank\">前端观察</a>：网站前端开发与设计</p><p><a href=\"http://www.css88.com/\" target=\"_blank\">Web前端开发</a>：关注前端开发，关注用户体验<br></p><p>……</p><p>待续<br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><br>发布于 4个月前， 阅读(2) | 评论(0) | 投票(0) | 收藏(0)&nbsp;<a href=\"http://my.oschina.net/jak/blog/353969\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/353797\">向jQuery中XMLHttpRequest构造函数中传参，实现跨域请求数据</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585472\">JavaScript</a><br><br><br>082014-12<p>将以下代码应用于ajax方法调用之前</p><pre class=\"\">$.ajaxSettings.xhr&nbsp;=&nbsp;function()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;XMLHttpRequest(&nbsp;{&nbsp;mozSystem:&nbsp;true&nbsp;}&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(e)&nbsp;{}\n};</pre><p>注：此段代码仅仅用于Firefox OS下privileged和certified的应用跨域请求数据！</p><br>发布于 4个月前， 阅读(6) | 评论(0) | 投票(0) | 收藏(0)&nbsp;<a href=\"http://my.oschina.net/jak/blog/353797\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/353793\">Firebug调试</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585472\">JavaScript</a><br><br><br>082014-12<p>编辑/断点/网络：保持（保存上一页面请求信息）<br>日志输出<br></p><pre class=\"\">console.log();\nconsole.warn();\nconsole.error();</pre><p>定时器调试<br></p><pre class=\"\">console.time(\"\");\nconsole.timeEnd(\"\");</pre><p>日志分组<br></p><pre class=\"\">console.group(\"\");\nconsole.groupEnd(\"\");</pre><pre class=\"\">console.dir();&nbsp;//&nbsp;输出对象全部属性及方法\nconsole.dirxml();&nbsp;//&nbsp;显示当前元素的代码结构</pre><pre class=\"\">console.assert();&nbsp;//&nbsp;断言&nbsp;console.assert(20===\"20\");&nbsp;失败\nconsole.trace();&nbsp;//&nbsp;比如函数执行调用情况</pre><p>性能<br></p><pre class=\"\">console.profile();\nconsole.profileEnd();</pre><p>其他浏览器使用firebug<br><a href=\"https://getfirebug.com/firebug-lite.js\" target=\"_blank\">https://getfirebug.com/firebug-lite.js</a><br></p><br>发布于 4个月前， 阅读(7) | 评论(0) | 投票(0) | 收藏(0)&nbsp;<a href=\"http://my.oschina.net/jak/blog/353793\">阅读全文...</a><br></li><li><h2>原\t<a href=\"http://my.oschina.net/jak/blog/353791\">JS面试题</a></h2>分类:&nbsp;<a href=\"http://my.oschina.net/jak/blog?catalog=585472\">JavaScript</a><br><br><br>082014-12<p><strong>14道面试题</strong></p><p>From：<a href=\"http://perfectionkills.com/javascript-quiz\" target=\"_blank\">http://perfectionkills.com/javascript-quiz</a></p><pre class=\"\">//&nbsp;注：js数据类型：string,number,boolean,object,undefined,function\n(function&nbsp;(){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;typeof&nbsp;arguments;&nbsp;//&nbsp;\"object\"\n})&nbsp;();</pre><pre class=\"\">var&nbsp;f&nbsp;=&nbsp;function&nbsp;g()&nbsp;{&nbsp;return&nbsp;23;&nbsp;};&nbsp;//&nbsp;有名函数表达式\ntypeof&nbsp;g();&nbsp;&nbsp;//&nbsp;Error</pre><pre class=\"\">(function()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete&nbsp;x;&nbsp;//&nbsp;只能删除对象属性\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;x;\n})(1);&nbsp;//&nbsp;1</pre><pre class=\"\">var&nbsp;y&nbsp;=&nbsp;1,&nbsp;x&nbsp;=&nbsp;y&nbsp;=&nbsp;typeof&nbsp;x;\nx;&nbsp;//&nbsp;\"undefined\"</pre><pre class=\"\">(function&nbsp;f(f){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;typeof&nbsp;f();&nbsp;//&nbsp;\"number\"\n})(function(){&nbsp;return&nbsp;1;&nbsp;});</pre><pre class=\"\">var&nbsp;foo&nbsp;=&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar:&nbsp;function()&nbsp;{&nbsp;return&nbsp;this.baz;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baz:&nbsp;1\n};\n(function()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;typeof&nbsp;arguments[0]();&nbsp;//&nbsp;\"undefined\"\n})(foo.bar);</pre><pre class=\"\">var&nbsp;foo&nbsp;=&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar:&nbsp;function()&nbsp;{&nbsp;this.baz;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baz:&nbsp;1\n};\ntypeof&nbsp;(f&nbsp;=&nbsp;foo.bar)();&nbsp;//&nbsp;\"undefined\"</pre><pre class=\"\">//&nbsp;分组选择符，选择最后一位\nvar&nbsp;f&nbsp;=&nbsp;(function&nbsp;f()&nbsp;{&nbsp;return&nbsp;\"1\";&nbsp;},&nbsp;function&nbsp;g()&nbsp;{&nbsp;return&nbsp;\"2\"&nbsp;}&nbsp;)();\ntypeof&nbsp;f;&nbsp;//&nbsp;\"number\"</pre><pre class=\"\">var&nbsp;x&nbsp;=&nbsp;1;\nif&nbsp;(function&nbsp;f(){})&nbsp;{&nbsp;//&nbsp;true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;返回假:&nbsp;false.null,\"\",0,undefined\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;+=&nbsp;typeof&nbsp;f;\n}\nx;&nbsp;//&nbsp;\"1undefined\"</pre><pre class=\"\">var&nbsp;x&nbsp;=&nbsp;[typeof&nbsp;x,&nbsp;typeof&nbsp;y][1];\ntypeof&nbsp;typeof&nbsp;x;&nbsp;//&nbsp;\"string\"</pre><pre class=\"\">(function(foo){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;typeof&nbsp;foo.bar;&nbsp;//&nbsp;\"undefined\"\n}({foo:&nbsp;{bar:&nbsp;1}});</pre><pre class=\"\">(function&nbsp;f(){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;f()&nbsp;{&nbsp;return&nbsp;1;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;f();&nbsp;//&nbsp;2\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;f()&nbsp;{&nbsp;return&nbsp;2;&nbsp;}\n})();</pre><pre class=\"\">function&nbsp;f()&nbsp;{&nbsp;return&nbsp;f;&nbsp;}\nnew&nbsp;f()&nbsp;instanceof&nbsp;f;&nbsp;//&nbsp;f&nbsp;instanceof&nbsp;f&nbsp;:&nbsp;false</pre><pre class=\"\">//&nbsp;functionName.length(形参个数)&nbsp;arguments.length(实参个数)\nwith(&nbsp;function(x,&nbsp;undefined)&nbsp;{}&nbsp;)&nbsp;length;&nbsp;&nbsp;//&nbsp;2</pre><p><strong>js运行题</strong></p><pre class=\"\">var&nbsp;a&nbsp;=&nbsp;10;\nfunction&nbsp;aaa()&nbsp;{&nbsp;alert(a);&nbsp;}\nfunction&nbsp;bbb()&nbsp;{&nbsp;var&nbsp;a&nbsp;=&nbsp;20;&nbsp;aaa();&nbsp;}\nbbb();&nbsp;//&nbsp;10;</pre><pre class=\"\">function&nbsp;aaa()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;预解析\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;a;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(a);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;20;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(a);&nbsp;//&nbsp;undefined\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;a&nbsp;=&nbsp;20;\n}</pre><pre class=\"\">//&nbsp;注：当参数跟局部变量重名的时候，优先级是等同的\nvar&nbsp;a&nbsp;=&nbsp;10;\nfunction&nbsp;aaa(a)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(a);&nbsp;//&nbsp;10\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;a&nbsp;=&nbsp;20;\n}\naaa(a);</pre><pre class=\"\">//&nbsp;注：基本数据类型赋值、传参是值传递（拷贝值），对象赋值、传参是引用赋值\nvar&nbsp;a&nbsp;=&nbsp;[1,&nbsp;2,&nbsp;3];\nvar&nbsp;b&nbsp;=&nbsp;a;\nb.push(4);</pre><p><strong>js字符串面试题</strong></p><p>问题：写一个字符串转换成驼峰的方法？</p><pre class=\"\">var&nbsp;str&nbsp;=&nbsp;\"border-bottom-color\";\nfunction&nbsp;test(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;arr&nbsp;=&nbsp;str.split(\"-\");\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;arr.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i]&nbsp;=&nbsp;arr[i].charAt(0).toUpperCase()&nbsp;+&nbsp;arr[i].substring(1);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;arr.join(\"\");\n}\nfunction&nbsp;test(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;re&nbsp;=&nbsp;/-(\\w)/g;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$0正则本身，$1子项\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str.replace(re,&nbsp;function($0,&nbsp;$1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$1.toUpperCase();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n}</pre><p>问题：查找字符串中出现最多的字符和个数？</p><pre class=\"\">var&nbsp;str&nbsp;=&nbsp;\"sdaffdghgsadsafhsgfdkgr\";\nfunction&nbsp;test(str){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;obj&nbsp;=&nbsp;{};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;num&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;str.length;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!obj[&nbsp;str[i]&nbsp;])&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[&nbsp;str[i]&nbsp;]&nbsp;=&nbsp;[];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[&nbsp;str[i]&nbsp;].push(&nbsp;str[i]&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var&nbsp;attr&nbsp;in&nbsp;obj){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;num&nbsp;&lt;&nbsp;obj[attr].length&nbsp;)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;obj[attr].length;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;obj[attr][0];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value&nbsp;+&nbsp;num;\n}\n\nfunction&nbsp;test(str){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;arr&nbsp;=&nbsp;str.split(\"\");\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.sort();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;arr.join(\"\");\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;re&nbsp;=&nbsp;/(\\w)\\1+/g;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;num&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;value&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str.replace(re,&nbsp;function($0,&nbsp;$1){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;$0.length;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;$1;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value&nbsp;+&nbsp;num;\n}</pre><p>问题：如何给字符串加千分符？</p><pre class=\"\">var&nbsp;str&nbsp;=&nbsp;\"24354365465765776\";\nfunction&nbsp;test(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;iNum&nbsp;=&nbsp;str.length&nbsp;%&nbsp;3;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;prev&nbsp;=&nbsp;'';\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;iNow&nbsp;=&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tmp&nbsp;=&nbsp;\"\";\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(iNum&nbsp;!=0)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prev&nbsp;=&nbsp;str.substring(0,&nbsp;iNum);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.push(&nbsp;prev&nbsp;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;str.substring(iNum);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;str.length;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iNow++;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(iNow==3&nbsp;&amp;&amp;&nbsp;tmp)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.push(tmp);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmp&nbsp;=&nbsp;\"\";\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iNow&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n//&nbsp;前向声明&nbsp;(?=)\n//&nbsp;反前向声明&nbsp;(?!)\nvar&nbsp;str&nbsp;=&nbsp;\"abacad\";\nvar&nbsp;re&nbsp;=&nbsp;/a(?!b)/g;\nstr&nbsp;=&nbsp;str.replace(re,&nbsp;\"*\");&nbsp;//&nbsp;\"aba*a*\"\nvar&nbsp;str&nbsp;=&nbsp;\"abacad\";\nvar&nbsp;re&nbsp;=&nbsp;/a(?=)/g;\nstr&nbsp;=&nbsp;str.replace(re,&nbsp;\"*\");&nbsp;//&nbsp;\"*bacad\"\nfunction&nbsp;test(str)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;re&nbsp;=&nbsp;/(?=(?!\\b)(\\d{3})+$)/;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str.replace(re,&nbsp;\",\");\n}</pre><p><strong>js限制条件补全题</strong></p><p>问题：a,b两个变量不用第三个变量来交换两个变量的值</p><pre class=\"\">var&nbsp;a&nbsp;=&nbsp;5;\nvar&nbsp;b&nbsp;=&nbsp;6;\na&nbsp;=&nbsp;[a,&nbsp;b];\nb&nbsp;=&nbsp;a[0];\na&nbsp;=&nbsp;a[1];</pre><p>问题：有一个数n=5，不用循环，怎么返回[1,2,3,4,5]这样一个数组递归、replace</p><pre class=\"\">//&nbsp;#</pre><p>问题：一个数n，当n小于100就返回n，否则返回100，不让用if三目运算、switch、Math.min(n, 100),数组sort,循环-&gt;转字符串length、for~in、&amp;&amp; ||</p><pre class=\"\">var&nbsp;m&nbsp;=&nbsp;n&nbsp;&gt;=&nbsp;100&nbsp;&amp;&amp;&nbsp;100;\nreturn&nbsp;m&nbsp;=&nbsp;m&nbsp;||&nbsp;n;</pre><br></li></ul>", "title" : "JackyCoder'blog", "__v" : 0, "favor" : 12, "delete" : 0 }
{ "_id" : { "$oid" : "552b7e47662a29d414c27a14" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T16:28:55.507+0800" }, "content" : "<h1>JavaScript splice() 方法</h1><p><a href=\"http://www.w3school.com.cn/jsref/jsref_obj_array.asp\">JavaScript Array 对象</a></p><h2>定义和用法</h2><p>splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p><p>注释：该方法会改变原始数组。</p><h3>语法</h3><pre>arrayObject.splice(index,howmany,item1,.....,itemX)</pre><p>参数描述<br>index必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。<br>howmany必需。要删除的项目数量。如果设置为 0，则不会删除项目。<br>item1, ..., itemX可选。向数组添加的新项目。<br></p><h3>返回值</h3><p>类型描述<br>Array包含被删除项目的新数组，如果有的话。<br></p><h3>说明</h3><p>splice() 方法可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。</p><p>如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组。</p><h3>技术细节</h3><p>JavaScript 版本：1.2<br></p><h2>浏览器支持</h2><p>所有主流浏览器都支持 splice() 方法。</p><h2>提示和注释</h2><p>注释：请注意，splice() 方法与 slice() 方法的作用是不同的，splice() 方法会直接对数组进行修改。</p><h2>实例</h2><h3>例子 1</h3><p>在本例中，我们将创建一个新数组，并向其添加一个元素：</p><pre>&lt;script type=\"text/javascript\"&gt;\n\nvar arr = new Array(6)\narr[0] = \"George\"\narr[1] = \"John\"\narr[2] = \"Thomas\"\narr[3] = \"James\"\narr[4] = \"Adrew\"\narr[5] = \"Martin\"\n\ndocument.write(arr + \"&lt;br /&gt;\")\n<code style=\"margin: 0px; border: 0px; font-family: 'Courier New', Courier, monospace; color: rgb(0, 0, 221);\">arr.splice(2,0,\"William\")</code>\ndocument.write(arr + \"&lt;br /&gt;\")\n\n&lt;/script&gt;</pre><p>输出：</p><pre>George,John,Thomas,James,Adrew,Martin\nGeorge,John,William,Thomas,James,Adrew,Martin</pre><h3>例子 2</h3><p>在本例中我们将删除位于 index 2 的元素，并添加一个新元素来替代被删除的元素：</p><pre>&lt;script type=\"text/javascript\"&gt;\n\nvar arr = new Array(6)\narr[0] = \"George\"\narr[1] = \"John\"\narr[2] = \"Thomas\"\narr[3] = \"James\"\narr[4] = \"Adrew\"\narr[5] = \"Martin\"\n\ndocument.write(arr + \"&lt;br /&gt;\")\n<code style=\"margin: 0px; border: 0px; font-family: 'Courier New', Courier, monospace; color: rgb(0, 0, 221);\">arr.splice(2,1,\"William\")</code>\ndocument.write(arr)\n\n&lt;/script&gt;</pre><p>输出：</p><pre>George,John,Thomas,James,Adrew,Martin<br style=\"margin: 0px; padding: 0px; border: 0px;\">George,John,William,James,Adrew,Martin</pre><h3>例子 3</h3><p>在本例中我们将删除从 index 2 (\"Thomas\") 开始的三个元素，并添加一个新元素 (\"William\") 来替代被删除的元素：</p><pre>&lt;script type=\"text/javascript\"&gt;\n\nvar arr = new Array(6)\narr[0] = \"George\"\narr[1] = \"John\"\narr[2] = \"Thomas\"\narr[3] = \"James\"\narr[4] = \"Adrew\"\narr[5] = \"Martin\"\n\ndocument.write(arr + \"&lt;br /&gt;\")\n<code style=\"margin: 0px; border: 0px; font-family: 'Courier New', Courier, monospace; color: rgb(0, 0, 221);\">arr.splice(2,3,\"William\")</code>\ndocument.write(arr)\n\n&lt;/script&gt;</pre><p>输出：</p><pre>George,John,Thomas,James,Adrew,Martin<br style=\"margin: 0px; padding: 0px; border: 0px;\">George,John,William,Martin</pre>", "title" : "js splice", "__v" : 0, "favor" : 4, "delete" : 0 }
{ "_id" : { "$oid" : "552b7f23662a29d414c27a15" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-13T16:32:35.621+0800" }, "content" : "<h1>Bootstrap&nbsp;字体图标(Glyphicons)</h1><p>本章将讲解字体图标(Glyphicons)，并通过一些实例了解它的使用。Bootstrap 捆绑了 200 多种字体格式的字形。首先让我们先来理解一下什么是字体图标。</p><hr><h2>什么是字体图标？</h2><p>字体图标是在 Web 项目中使用的图标字体。虽然，<a target=\"_blank\" href=\"http://glyphicons.com/\">Glyphicons Halflings</a>&nbsp;需要商业许可，但是您可以通过基于项目的 Bootstrap 来免费使用这些图标。</p><p>为了表示对图标作者的感谢，希望您在使用时加上 GLYPHICONS 网站的链接。</p><hr><h2>获取字体图标</h2><p>我们已经在&nbsp;<a target=\"_blank\" href=\"http://www.w3cschool.cc/bootstrap/bootstrap-environment-setup.html\">环境安装</a>&nbsp;章节下载了 Bootstrap 3.x 版本，并理解了它的目录结构。在&nbsp;<i>fonts</i>&nbsp;文件夹内可以找到字体图标，它包含了下列这些文件：</p><ul><li>glyphicons-halflings-regular.eot</li><li>glyphicons-halflings-regular.svg</li><li>glyphicons-halflings-regular.ttf</li><li>glyphicons-halflings-regular.woff</li></ul><p>相关的 CSS 规则写在&nbsp;<i>dist</i>&nbsp;文件夹内的 css 文件夹内的&nbsp;<i>bootstrap.css</i>&nbsp;和&nbsp;<i>bootstrap-min.css</i>&nbsp;文件上。</p><h3>字体图标列表</h3><p><a target=\"_blank\" href=\"http://www.w3cschool.cc/try/demo_source/bootstrap3-glyph-icons.htm\">点击这里，查看可用的字体图标列表。</a></p><hr><h2>CSS 规则解释</h2><p>下面的 CSS 规则构成 glyphicon class。</p><pre class=\"\">@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url('../fonts/glyphicons-halflings-regular.eot');\n  src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');\n}\n\n.glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  -webkit-font-smoothing: antialiased;\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -moz-osx-font-smoothing: grayscale;\n}\n</pre><p>所以 font-face 规则实际上是在找到 glyphicons 地方声明 font-family 和位置。</p><p>.glyphicon&nbsp;class 声明一个从顶部偏移 1px 的相对位置，呈现为 inline-block，声明字体，规定 font-style 和 font-weight 为 normal，设置行高为 1。除此之外，使用&nbsp;-webkit-font-smoothing: antialiased&nbsp;和&nbsp;-moz-osx-font-smoothing: grayscale;&nbsp;获得跨浏览器的一致性。</p><p>然后，这里的</p><pre class=\"\">.glyphicon:empty {\n  width: 1em;\n}\n</pre><p>是空的 glyphicon。</p><p>这里有 200 个 class，每个 class 针对一个图标。这些 class 的常见格式如下：</p><pre class=\"\">.glyphicon-keyword:before {\n  content: \"hexvalue\";\n}\n</pre><p>比如，使用的 user 图标，它的 class 如下：</p><pre class=\"\">.glyphicon-user:before {\n  content: \"\\e008\";\n}\n</pre><hr><h2>用法</h2><p>如需使用图标，只需要简单地使用下面的代码即可。请在图标和文本之间保留适当的空间。</p><pre class=\"\">&lt;span class=\"glyphicon glyphicon-search\"&gt;&lt;/span&gt;\n</pre><p>下面的实例演示了如何使用字体图标：</p><pre class=\"\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;Bootstrap 实例 - 如何使用字体图标&lt;/title&gt;\n   &lt;link href=\"/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n   &lt;script src=\"/scripts/jquery.min.js\"&gt;&lt;/script&gt;\n   &lt;script src=\"/bootstrap/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;p&gt;\n   &lt;button type=\"button\" class=\"btn btn-default\"&gt;\n      &lt;span class=\"glyphicon glyphicon-sort-by-attributes\"&gt;&lt;/span&gt;\n   &lt;/button&gt;\n   &lt;button type=\"button\" class=\"btn btn-default\"&gt;\n      &lt;span class=\"glyphicon glyphicon-sort-by-attributes-alt\"&gt;&lt;/span&gt;\n   &lt;/button&gt;\n   &lt;button type=\"button\" class=\"btn btn-default\"&gt;\n      &lt;span class=\"glyphicon glyphicon-sort-by-order\"&gt;&lt;/span&gt;\n   &lt;/button&gt;\n   &lt;button type=\"button\" class=\"btn btn-default\"&gt;\n      &lt;span class=\"glyphicon glyphicon-sort-by-order-alt\"&gt;&lt;/span&gt;\n   &lt;/button&gt;\n&lt;/p&gt;\n&lt;button type=\"button\" class=\"btn btn-default btn-lg\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n&lt;button type=\"button\" class=\"btn btn-default btn-sm\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n&lt;button type=\"button\" class=\"btn btn-default btn-xs\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</pre><p><a href=\"http://www.w3cschool.cc/try/try2.php?filename=bootstrap3-glyphicons\" target=\"_blank\">尝试一下 »</a></p><p>结果如下所示：</p><p><img src=\"http://www.w3cschool.cc/wp-content/uploads/2014/06/glyphicon_demo.jpg\" alt=\"如何使用字体图标\"></p><hr><h2>带有导航栏的字体图标</h2><pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;导航栏的字体图标&lt;/title&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;!-- Bootstrap --&gt;\n    &lt;link href=\"http://apps.bdimg.com/libs/bootstrap/3.2.0/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n    &lt;style&gt;\n    body {\n    padding-top: 50px;\n    padding-left: 50px;\n    }\n    &lt;/style&gt;\n    &lt;!--[if lt IE 9]&gt;\n      &lt;script src=\"http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js\"&gt;&lt;/script&gt;\n    &lt;![endif]--&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"navbar navbar-fixed-top navbar-inverse\" role=\"navigation\"&gt;\n      &lt;div class=\"container\"&gt;\n        &lt;div class=\"navbar-header\"&gt;\n          &lt;button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt;\n            &lt;span class=\"sr-only\"&gt;Toggle navigation&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n            &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n          &lt;/button&gt;\n          &lt;a class=\"navbar-brand\" href=\"#\"&gt;Project name&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"collapse navbar-collapse\"&gt;\n          &lt;ul class=\"nav navbar-nav\"&gt;\n            &lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;&lt;span class=\"glyphicon glyphicon-home\"&gt;Home&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#shop\"&gt;&lt;span class=\"glyphicon glyphicon-shopping-cart\"&gt;Shop&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#support\"&gt;&lt;span class=\"glyphicon glyphicon-headphones\"&gt;Support&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;&lt;!-- /.nav-collapse --&gt;\n      &lt;/div&gt;&lt;!-- /.container --&gt;\n    &lt;/div&gt;\n    &lt;!-- jQuery (Bootstrap 插件需要引入) --&gt;\n    &lt;script src=\"http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;!-- 包含了所有编译插件 --&gt;\n    &lt;script src=\"http://apps.bdimg.com/libs/bootstrap/3.2.0/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\t\t\n</pre><p><a href=\"http://www.w3cschool.cc/try/try2.php?filename=bootstrap-using-glyphicons-navbar\" target=\"_blank\">尝试一下 »</a></p><hr><h2>定制字体图标</h2><p>我们已经看到如何使用字体图标，接下来我们看看如何定制字体图标。</p><p>我们将以上面的实例开始，并通过改变字体尺寸、颜色和应用文本阴影来进行定制图标。</p><p>下面是开始的代码：</p><pre class=\"\">&lt;button type=\"button\" class=\"btn btn-primary btn-lg\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n</pre><p>效果如下所示：</p><h3>定制字体尺寸</h3><p>通过增加或减少图标的字体尺寸，您可以让图标看起来更大或更小。</p><pre class=\"\">&lt;button type=\"button\" class=\"btn btn-primary btn-lg\" style=\"font-size: 60px\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n</pre><h3>定制字体颜色</h3><pre class=\"\">&lt;button type=\"button\" class=\"btn btn-primary btn-lg\" style=\"color: rgb(212, 106, 64);\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n</pre><h3>应用文本阴影</h3><pre>&lt;button type=\"button\" class=\"btn btn-primary btn-lg\" style=\"text-shadow: black 5px 3px 3px;\"&gt;\n  &lt;span class=\"glyphicon glyphicon-user\"&gt;&lt;/span&gt; User\n&lt;/button&gt;\n</pre><h3>在线定制字体图标</h3><p><a href=\"http://www.w3cschool.cc/try/demo_source/bootstrap-glyph-customization.htm\" target=\"_blank\">点击这里，定制字体图标 »</a></p><hr><h2>图标列表</h2><p>图标类名实例<br>glyphicon glyphicon-asterisk尝试一下<br>glyphicon glyphicon-plus尝试一下<br>glyphicon glyphicon-minus尝试一下<br>glyphicon glyphicon-euro尝试一下<br>glyphicon glyphicon-cloud尝试一下<br>glyphicon glyphicon-envelope尝试一下<br>glyphicon glyphicon-pencil尝试一下<br>glyphicon glyphicon-glass尝试一下<br>glyphicon glyphicon-music尝试一下<br>glyphicon glyphicon-search尝试一下<br>glyphicon glyphicon-heart尝试一下<br>glyphicon glyphicon-star尝试一下<br>glyphicon glyphicon-star-empty尝试一下<br>glyphicon glyphicon-user尝试一下<br>glyphicon glyphicon-film尝试一下<br>glyphicon glyphicon-th-large尝试一下<br>glyphicon glyphicon-th尝试一下<br>glyphicon glyphicon-th-list尝试一下<br>glyphicon glyphicon-ok尝试一下<br>glyphicon glyphicon-remove尝试一下<br>glyphicon glyphicon-zoom-in尝试一下<br>glyphicon glyphicon-zoom-out尝试一下<br>glyphicon glyphicon-off尝试一下<br>glyphicon glyphicon-signal尝试一下<br>glyphicon glyphicon-cog尝试一下<br>glyphicon glyphicon-trash尝试一下<br>glyphicon glyphicon-home尝试一下<br>glyphicon glyphicon-file尝试一下<br>glyphicon glyphicon-time尝试一下<br>glyphicon glyphicon-road尝试一下<br>glyphicon glyphicon-download-alt尝试一下<br>glyphicon glyphicon-download尝试一下<br>glyphicon glyphicon-upload尝试一下<br>glyphicon glyphicon-inbox尝试一下<br>glyphicon glyphicon-play-circle尝试一下<br>glyphicon glyphicon-repeat尝试一下<br>glyphicon glyphicon-refresh尝试一下<br>glyphicon glyphicon-list-alt尝试一下<br>glyphicon glyphicon-lock尝试一下<br>glyphicon glyphicon-flag尝试一下<br>glyphicon glyphicon-headphones尝试一下<br>glyphicon glyphicon-volume-off尝试一下<br>glyphicon glyphicon-volume-down尝试一下<br>glyphicon glyphicon-volume-up尝试一下<br>glyphicon glyphicon-qrcode尝试一下<br>glyphicon glyphicon-barcode尝试一下<br>glyphicon glyphicon-tag尝试一下<br>glyphicon glyphicon-tags尝试一下<br>glyphicon glyphicon-book尝试一下<br>glyphicon glyphicon-bookmark尝试一下<br>glyphicon glyphicon-print尝试一下<br>glyphicon glyphicon-camera尝试一下<br>glyphicon glyphicon-font尝试一下<br>glyphicon glyphicon-bold尝试一下<br>glyphicon glyphicon-italic尝试一下<br>glyphicon glyphicon-text-height尝试一下<br>glyphicon glyphicon-text-width尝试一下<br>glyphicon glyphicon-align-left尝试一下<br>glyphicon glyphicon-align-center尝试一下<br>glyphicon glyphicon-align-right尝试一下<br>glyphicon glyphicon-align-justify尝试一下<br>glyphicon glyphicon-list尝试一下<br>glyphicon glyphicon-indent-left尝试一下<br>glyphicon glyphicon-indent-right尝试一下<br>glyphicon glyphicon-facetime-video尝试一下<br>glyphicon glyphicon-picture尝试一下<br>glyphicon glyphicon-map-marker尝试一下<br>glyphicon glyphicon-adjust尝试一下<br>glyphicon glyphicon-tint尝试一下<br>glyphicon glyphicon-edit尝试一下<br>glyphicon glyphicon-share尝试一下<br>glyphicon glyphicon-check尝试一下<br>glyphicon glyphicon-move尝试一下<br>glyphicon glyphicon-step-backward尝试一下<br>glyphicon glyphicon-fast-backward尝试一下<br>glyphicon glyphicon-backward尝试一下<br>glyphicon glyphicon-play尝试一下<br>glyphicon glyphicon-pause尝试一下<br>glyphicon glyphicon-stop尝试一下<br>glyphicon glyphicon-forward尝试一下<br>glyphicon glyphicon-fast-forward尝试一下<br>glyphicon glyphicon-step-forward尝试一下<br>glyphicon glyphicon-eject尝试一下<br>glyphicon glyphicon-chevron-left尝试一下<br>glyphicon glyphicon-chevron-right尝试一下<br>glyphicon glyphicon-plus-sign尝试一下<br>glyphicon glyphicon-minus-sign尝试一下<br>glyphicon glyphicon-remove-sign尝试一下<br>glyphicon glyphicon-ok-sign尝试一下<br>glyphicon glyphicon-question-sign尝试一下<br>glyphicon glyphicon-info-sign尝试一下<br>glyphicon glyphicon-screenshot尝试一下<br>glyphicon glyphicon-remove-circle尝试一下<br>glyphicon glyphicon-ok-circle尝试一下<br>glyphicon glyphicon-ban-circle尝试一下<br>glyphicon glyphicon-arrow-left尝试一下<br>glyphicon glyphicon-arrow-right尝试一下<br>glyphicon glyphicon-arrow-up尝试一下<br>glyphicon glyphicon-arrow-down尝试一下<br>glyphicon glyphicon-share-alt尝试一下<br>glyphicon glyphicon-resize-full尝试一下<br>glyphicon glyphicon-resize-small尝试一下<br>glyphicon glyphicon-exclamation-sign尝试一下<br>glyphicon glyphicon-gift尝试一下<br>glyphicon glyphicon-leaf尝试一下<br>glyphicon glyphicon-fire尝试一下<br>glyphicon glyphicon-eye-open尝试一下<br>glyphicon glyphicon-eye-close尝试一下<br>glyphicon glyphicon-warning-sign尝试一下<br>glyphicon glyphicon-plane尝试一下<br>glyphicon glyphicon-calendar尝试一下<br>glyphicon glyphicon-random尝试一下<br>glyphicon glyphicon-comment尝试一下<br>glyphicon glyphicon-magnet尝试一下<br>glyphicon glyphicon-chevron-up尝试一下<br>glyphicon glyphicon-chevron-down尝试一下<br>glyphicon glyphicon-retweet尝试一下<br>glyphicon glyphicon-shopping-cart尝试一下<br>glyphicon glyphicon-folder-close尝试一下<br>glyphicon glyphicon-folder-open尝试一下<br>glyphicon glyphicon-resize-vertical尝试一下<br>glyphicon glyphicon-resize-horizontal尝试一下<br>glyphicon glyphicon-hdd尝试一下<br>glyphicon glyphicon-bullhorn尝试一下<br>glyphicon glyphicon-bell尝试一下<br>glyphicon glyphicon-certificate尝试一下<br>glyphicon glyphicon-thumbs-up尝试一下<br>glyphicon glyphicon-thumbs-down尝试一下<br>glyphicon glyphicon-hand-right尝试一下<br>glyphicon glyphicon-hand-left尝试一下<br>glyphicon glyphicon-hand-up尝试一下<br>glyphicon glyphicon-hand-down尝试一下<br>glyphicon glyphicon-circle-arrow-right尝试一下<br>glyphicon glyphicon-circle-arrow-left尝试一下<br>glyphicon glyphicon-circle-arrow-up尝试一下<br>glyphicon glyphicon-circle-arrow-down尝试一下<br>glyphicon glyphicon-globe尝试一下<br>glyphicon glyphicon-wrench尝试一下<br>glyphicon glyphicon-tasks尝试一下<br>glyphicon glyphicon-filter尝试一下<br>glyphicon glyphicon-briefcase尝试一下<br>glyphicon glyphicon-fullscreen尝试一下<br>glyphicon glyphicon-dashboard尝试一下<br>glyphicon glyphicon-paperclip尝试一下<br>glyphicon glyphicon-heart-empty尝试一下<br>glyphicon glyphicon-link尝试一下<br>glyphicon glyphicon-phone尝试一下<br>glyphicon glyphicon-pushpin尝试一下<br>glyphicon glyphicon-usd尝试一下<br>glyphicon glyphicon-gbp尝试一下<br>glyphicon glyphicon-sort尝试一下<br>glyphicon glyphicon-sort-by-alphabet尝试一下<br>glyphicon glyphicon-sort-by-alphabet-alt尝试一下<br>glyphicon glyphicon-sort-by-order尝试一下<br>glyphicon glyphicon-sort-by-order-alt尝试一下<br>glyphicon glyphicon-sort-by-attributes尝试一下<br>glyphicon glyphicon-sort-by-attributes-alt尝试一下<br>glyphicon glyphicon-unchecked尝试一下<br>glyphicon glyphicon-expand尝试一下<br>glyphicon glyphicon-collapse-down尝试一下<br>glyphicon glyphicon-collapse-up尝试一下<br>glyphicon glyphicon-log-in尝试一下<br>glyphicon glyphicon-flash尝试一下<br>glyphicon glyphicon-log-out尝试一下<br>glyphicon glyphicon-new-window尝试一下<br>glyphicon glyphicon-record尝试一下<br>glyphicon glyphicon-save尝试一下<br>glyphicon glyphicon-open尝试一下<br>glyphicon glyphicon-saved尝试一下<br>glyphicon glyphicon-import尝试一下<br>glyphicon glyphicon-export尝试一下<br>glyphicon glyphicon-send尝试一下<br>glyphicon glyphicon-floppy-disk尝试一下<br>glyphicon glyphicon-floppy-saved尝试一下<br>glyphicon glyphicon-floppy-remove尝试一下<br>glyphicon glyphicon-floppy-save尝试一下<br>glyphicon glyphicon-floppy-open尝试一下<br>glyphicon glyphicon-credit-card尝试一下<br>glyphicon glyphicon-transfer尝试一下<br>glyphicon glyphicon-cutlery尝试一下<br>glyphicon glyphicon-header尝试一下<br>glyphicon glyphicon-compressed尝试一下<br>glyphicon glyphicon-earphone尝试一下<br>glyphicon glyphicon-phone-alt尝试一下<br>glyphicon glyphicon-tower尝试一下<br>glyphicon glyphicon-stats尝试一下<br>glyphicon glyphicon-sd-video尝试一下<br>glyphicon glyphicon-hd-video尝试一下<br>glyphicon glyphicon-subtitles尝试一下<br>glyphicon glyphicon-sound-stereo尝试一下<br>glyphicon glyphicon-sound-dolby尝试一下<br>glyphicon glyphicon-sound-5-1尝试一下<br>glyphicon glyphicon-sound-6-1尝试一下<br>glyphicon glyphicon-sound-7-1尝试一下<br>glyphicon glyphicon-copyright-mark尝试一下<br>glyphicon glyphicon-registration-mark尝试一下<br>glyphicon glyphicon-cloud-download尝试一下<br>glyphicon glyphicon-cloud-upload尝试一下<br>glyphicon glyphicon-tree-conifer尝试一下<br>glyphicon glyphicon-tree-deciduous尝试一下<br></p>", "title" : "bootstrap icon", "__v" : 0, "favor" : 10, "delete" : 0 }
{ "_id" : { "$oid" : "552b7fa4662a29d414c27a17" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-13T16:34:44.909+0800" }, "content" : "<h3><a href=\"http://www.baidu.com/link?url=7lKzWSmlxFohizEMc2vPnP0BR1npG3aMsNTQjvtEuzQeP4wI_uubZP7DuxT6kzOXcKJ4_uLcDY1_wALk-spFw_\" target=\"_blank\">css3动画属性系列之transform细讲scale缩放 - Focus-Fe - ITeye...</a></h3><p>2012年3月6日&nbsp;-&nbsp;博客分类:&nbsp;css3&nbsp;scale&nbsp;上一篇讲了translate,这一次我们再细讲一下scale. &nbsp; 下面我们从3个方面开始介绍: &nbsp; 1、scale(x,y) 对元素进行缩放 &nbsp; X表示...</p><p>zhangyaochun.iteye.com...&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105e8d354501cb3061868a5223c3933fc8220c0a1071e3cc767f4f19839b21321cac4f5ae8f2377223467df7cdc7d90b9cac92596ed9746a27&amp;p=8939c215d9c340af42be9b7c5f428b&amp;newp=8b2a970c9d9f57f940bd9b7e0c168f231610db2151ddd111369fcf5ec57c&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=1\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3D7lKzWSmlxFohizEMc2vPnP0BR1npG3aMsNTQjvtEuzQeP4wI_uubZP7DuxT6kzOXcKJ4_uLcDY1_wALk-spFw_&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%02css%033%01%E5%8A%A8%E7%94%BB%01%E5%B1%9E%E6%80%A7%01%E7%B3%BB%E5%88%97%01%E4%B9%8B%01trans%01form%01%E7%BB%86%01%E8%AE%B2%02scale%03%E7%BC%A9%E6%94%BE%01%20%01-%01%20%01Focus%01-%01Fe%01%20%01-%01%20%01IT%01eye%01...%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">67%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=gzMFNepoK-LyzQlF7YLlwW8nXFga2vfZCnh_vDCRVnnW-5dW4MqEgXLScJkPb01PS3FdKmSzMFhugDHhnPGHpK\" target=\"_blank\">CSS3 transform 属性</a></h3><p>版本:&nbsp;CSS3 JavaScript 语法: object.style.transform=\"rotate(7deg)\"语法...scale(x,y) 定义2D 缩放转换。 测试 scale3d(x,y,z) 定义3D 缩放转换。 ...</p><p><a href=\"http://www.w3school.com.cn/\" rel=\"nofollow\">www.w3school.com.cn/</a><b>cs</b>...&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f7263d96814f2289cd5f93130a1c1871e3cc767e0d5592843c3055b20b1cfdf7423477507cf6cf95c815cabbe57b6eca33712d5cd04e439258b8cb37649073ce0d&amp;p=b478c64ad4df57c308e2947e0c5386&amp;newp=882a9545d79152fc57efd534474c9e231610db2151d0d1476c&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=2\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DgzMFNepoK-LyzQlF7YLlwW8nXFga2vfZCnh_vDCRVnnW-5dW4MqEgXLScJkPb01PS3FdKmSzMFhugDHhnPGHpK&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%02CSS%033%01%20%01transform%01%20%01%E5%B1%9E%E6%80%A7%01%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">92%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=qQzZP6fRa9nVx-bQG238QUbg6MJr-5_kDXZiI4ZSFRJwj7ZQafBTSrfBLiNJ8HpujjBsyGCcvpxYTXQvCG2fuq\" target=\"_blank\">CSS中zoom和scale的区别 - Web技术研究所</a></h3><p><img src=\"https://ss0.baidu.com/73F1bjeh1BF3odCf/it/u=3405271137,3539713862&amp;fm=96&amp;s=9C085C325B1F544D4A7DC0DA0300A0B2\"></p><p>CSS中zoom和scale的区别zoom和scale这两个东西都是用于对元素的缩放,但两者除了兼容性之外还有一些不同的地方。zoom缩放会将元素保持在左上角,而scale默认是中间...</p><p><a href=\"http://www.web-tinker.com/art...\" rel=\"nofollow\">www.web-tinker.com/art...</a>&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f7266b87c7150992c814ca331b564711b2e6783f4344959e2d3956b2495eeef3346537747af1c4969c0f80fbc4277ec96623706dc710418d4e&amp;p=9e759a45d5c900e94bbbc7710f5dcb&amp;newp=8b2a9715d9c342a517b3c36d174181231610db2151ddd015&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=3\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DqQzZP6fRa9nVx-bQG238QUbg6MJr-5_kDXZiI4ZSFRJwj7ZQafBTSrfBLiNJ8HpujjBsyGCcvpxYTXQvCG2fuq&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%02CSS%03%E4%B8%AD%01zoom%01%E5%92%8C%02scale%03%E7%9A%84%01%E5%8C%BA%E5%88%AB%01%20%01-%01%20%01Web%01%E6%8A%80%E6%9C%AF%01%E7%A0%94%E7%A9%B6%01%E6%89%80%01%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">评价</a></p><h3><a href=\"http://www.baidu.com/link?url=KirN8EEtbM0jQHOlKDr42n0kHHtnNdn_REUnaekV-CkdAz8ZX03bET0WdFBFyrTO\" target=\"_blank\">css3通过scale()、rotate()实现放大、旋转_css3_CSS_网..._脚本之家</a></h3><p>css3通过scale()实现放大功能、通过rotate()实现旋转功能,下面有个示例,大家可以参考下&nbsp;css3通过scale()实现放大功能 通过rotate()实现旋转功能 而transition则可...</p><p><a href=\"http://www.jb51.net/\" rel=\"nofollow\">www.jb51.net/</a><b>css</b>/1569....&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9d78d513d99200ee4fede53f5c4589310d13c03d338d96533dc3923b8e791e040271e3cc7f721707c4c50b3b56e9540dabb12b7130072bb79cdf883d87fdcd76&amp;p=9a769a4787934eaf5eefd3644e0094&amp;newp=993de7188f904ead08e294780f55cb231610db2151d0d413&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=4\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DKirN8EEtbM0jQHOlKDr42n0kHHtnNdn_REUnaekV-CkdAz8ZX03bET0WdFBFyrTO&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%01css3%01%E9%80%9A%E8%BF%87%02scale%03%28%01%29%01%E3%80%81%01rotate%01%28%01%29%01%E5%AE%9E%E7%8E%B0%01%E6%94%BE%E5%A4%A7%01%E3%80%81%01%E6%97%8B%E8%BD%AC%01_%02css%033%01_%02CSS%03_%01%E7%BD%91%01...%01_%01%E8%84%9A%E6%9C%AC%E4%B9%8B%E5%AE%B6%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">76%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=dIj7u1lfjg-MTjIwjp1onK__J-nsKEc9MSwoSxHPMyDEvJ2UzU2i85AfA6YHE80LeuGqk8fPeEja_vh09PvXNb5F7_qmqi7UFA4Ag2t1mgK\" target=\"_blank\">关于一个.css中的代码scale-x,location-y,c1-selector..._百度知道</a></h3><p>2个回答 - 提问时间: 2014年06月30日</p><p>最佳答案:&nbsp;scale(x,y) 对元素进行缩放,X表示水平方向缩放的倍数 | Y表示垂直方向的缩放倍数 location位置的意思 这些可能比较高级我等真的不怎么清楚</p><p>zhidao.baidu.com/link?...&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9d78d513d99200ee4fede53f5c4589310d13c03d338d96533dc3923b8e79131b1c30b0e630226754809e2a2016af3e0db7af2b31705461f1c095d457debf992a2a8b2434771a834315d71caac9422fd620e700aff047&amp;p=8374c64ad4981ebe1cbd9b7e0d11c4&amp;newp=9e6ac64ad48905ff57ed9479524ccc23161cda386a848d0a3b8fd12590631105&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=5\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DdIj7u1lfjg-MTjIwjp1onK__J-nsKEc9MSwoSxHPMyDEvJ2UzU2i85AfA6YHE80LeuGqk8fPeEja_vh09PvXNb5F7_qmqi7UFA4Ag2t1mgK&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%01%E5%85%B3%E4%BA%8E%01%E4%B8%80%01%E4%B8%AA%01.%02css%03%E4%B8%AD%01%E7%9A%84%01%E4%BB%A3%E7%A0%81%02scale%03-%01x%01%2C%01location%01-%01y%01%2C%01c%011%01-%01select%01or%01...%01_%01%E7%99%BE%E5%BA%A6%01%E7%9F%A5%E9%81%93%01%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">80%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=_ntSxlFMrwmdshK-34VbE6whbH9RFbyTVCYweUhd9JdhQ9_wfCafcapv4uSKhK0x8xVYyttKfrOR4LzO5HayLmhTI9m-h6100hbgSqERHm7\" target=\"_blank\">CSS3新增样式大解析：[5]scale之元素缩放_百度经验</a></h3><p><img src=\"https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3540631148,1709557947&amp;fm=58\">1</p><p><img src=\"https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=472462759,3929197943&amp;fm=58\">2</p><p><img src=\"https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=190662922,4042138011&amp;fm=58\">3</p><p><img src=\"https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=2752640306,1393733977&amp;fm=58\">4</p><p>显示全部&nbsp;</p><p>jingyan.baidu.com&nbsp;</p><h3><a href=\"http://www.baidu.com/link?url=FVEiC9Uy1GvnXGvAYE_ae6VzQGXCcw6OjMCxvYsPvHlubIIYYjeGZfYIrRNcF92fwSoP-fTDS_ORhKbCHh1TVq\" target=\"_blank\">CSS&nbsp;实现图片灰度效果 兼容各种浏览器 - lostyu - 博客园</a></h3><p>2014年1月21日&nbsp;-&nbsp;grayscale( el ); }; 兼容所有浏览器,执行后会在元素上加入很多行内样式,如果你对兼容性要求不高的话建议使用CSS实现灰度效果。posted @ 2014...</p><p><a href=\"http://www.cnblogs.com/lostyu...\" rel=\"nofollow\">www.cnblogs.com/lostyu...</a>&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9d78d513d99200ee4fede53f5c4589310d13c03d338d96533dc3923b8e791e040271e3cc767e405a8e903d7001d81801b5ed682f76456bf0868a954bdabb982d258f30340746c01e4c&amp;p=8b2a973786cc41af5eb2f8351c4983&amp;newp=c265c54ad6c347fe0af3c7710f419c231610db2151d2d21f2e868d&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=7\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DFVEiC9Uy1GvnXGvAYE_ae6VzQGXCcw6OjMCxvYsPvHlubIIYYjeGZfYIrRNcF92fwSoP-fTDS_ORhKbCHh1TVq&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%02CSS%03%20%01%E5%AE%9E%E7%8E%B0%01%E5%9B%BE%E7%89%87%01%E7%81%B0%E5%BA%A6%01%E6%95%88%E6%9E%9C%01%20%01%E5%85%BC%E5%AE%B9%01%E5%90%84%E7%A7%8D%01%E6%B5%8F%E8%A7%88%01%E5%99%A8%01%20%01-%01%20%01lostyu%01%20%01-%01%20%01%E5%8D%9A%E5%AE%A2%01%E5%9B%AD%01%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">91%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=j170NGf8kS7LaDx0Ay3dExygaBshVv-CuwwNFD4oaji5NENPbLwTj72ZKbdhE0f0p1KlCGWNhMz_diEM7MvOBq\" target=\"_blank\">使用CSS3的scale实现网页整体缩放 - 百科教程网_经验分享..._上学吧</a></h3><p>2014年7月22日&nbsp;-&nbsp;$(document.body).css(\"-webkit-transform\",\"scale(\" + r + \")\"); }); 改变窗口大小试试,你会发现什么? 您可能感兴趣的文章:&nbsp;CSS3+Js实现响应式导航条...</p><p><a href=\"http://www.shangxueba.com/jin...\" rel=\"nofollow\">www.shangxueba.com/jin...</a>&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f72266848c403593c418c0735b36163bbca67f794c519896207a02a44b5ee9f1336537747af1c4969c0f80fbc4277ec96623706dc710418d4e&amp;p=9f769a4786cc41a958add26f135581&amp;newp=c2759a45d0c31af00aa6d62d021481231610db2151d3da11248bc103d1&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=8\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3Dj170NGf8kS7LaDx0Ay3dExygaBshVv-CuwwNFD4oaji5NENPbLwTj72ZKbdhE0f0p1KlCGWNhMz_diEM7MvOBq&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%01%E4%BD%BF%E7%94%A8%02CSS%033%01%E7%9A%84%02scale%03%E5%AE%9E%E7%8E%B0%01%E7%BD%91%E9%A1%B5%01%E6%95%B4%E4%BD%93%01%E7%BC%A9%E6%94%BE%01%20%01-%01%20%01%E7%99%BE%E7%A7%91%01%E6%95%99%E7%A8%8B%01%E7%BD%91%01_%01%E7%BB%8F%E9%AA%8C%01%E5%88%86%E4%BA%AB%01...%01_%01%E4%B8%8A%E5%AD%A6%E5%90%A7%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">81%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=27EoxD2fJeLXrtok0vlSpn_w-OWbE7pMVNehyQhrlxKgmT13Yl-W-E90tV_BsjgXCyyn4lJAvRtkIU1r1JqslUmifqHjyQKl0b5wm1X1mrO4OzVcA0lCH6GcrPJG9lcUz2lWzZzHtNHGUHy0nA0LxoIL7QlVMWZETJS8hJ0haRzPjmB7ZiutNRq5Tf9XhRX-EBSsKybiT7ppQLA-ub0CaQAzVO-D7Tlw88nU_89FFSe\" target=\"_blank\">小tip: 使用CSS将图片转换成黑白(灰色、置灰) « 张鑫旭-鑫空间...</a></h3><p><img src=\"https://ss0.baidu.com/73t1bjeh1BF3odCf/it/u=1760497757,2490187877&amp;fm=96&amp;s=EED020D3DA468E1BCCB4ED58030070F3\"></p><p>如果你手上的浏览器是Chrome18+, 您可以狠狠地点击这里:CSS3 greyscale&nbsp;滤镜与照片黑白可以看到类似文章一开始展示的黑白对比效果图。其他些浏览器,如FireFox很快...</p><p><a href=\"http://www.zhangxinxu.com/wor...\" rel=\"nofollow\">www.zhangxinxu.com/wor...</a>&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f72b66848c40358fcf02d4735b36163bbca6627f505291852b2640b2495ee9f02b703d1e37c09cdff848cab1e66e74ca3034060bf14705a36fb8bb3232b6258751efb86aedebb17384d9d5c4af5644c057120d87e7802a1764bd78871126e9ad8e42104867b0fa4013e82a063ee82757bc31ee9332797085e1d7565bc828c7161a80df45a73511a264a108102f53d03aa67f54313b93582df9592941cfab0be87b380134b639f2e892e8bc&amp;p=8970c21a86cc41ae58a6c7710f4a88&amp;newp=87769a47969c11a058ec943d4c549d231610db2151d1d0153f8b&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=9\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3D27EoxD2fJeLXrtok0vlSpn_w-OWbE7pMVNehyQhrlxKgmT13Yl-W-E90tV_BsjgXCyyn4lJAvRtkIU1r1JqslUmifqHjyQKl0b5wm1X1mrO4OzVcA0lCH6GcrPJG9lcUz2lWzZzHtNHGUHy0nA0LxoIL7QlVMWZETJS8hJ0haRzPjmB7ZiutNRq5Tf9XhRX-EBSsKybiT7ppQLA-ub0CaQAzVO-D7Tlw88nU_89FFSe&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%01%E5%B0%8F%01tip%01%3A%01%20%01%E4%BD%BF%E7%94%A8%02CSS%03%E5%B0%86%01%E5%9B%BE%E7%89%87%01%E8%BD%AC%E6%8D%A2%01%E6%88%90%01%E9%BB%91%E7%99%BD%01%28%01%E7%81%B0%E8%89%B2%01%E3%80%81%01%E7%BD%AE%01%E7%81%B0%01%29%01%20%01%C2%AB%01%20%01%E5%BC%A0%01%E9%91%AB%E6%97%AD%01-%01%E9%91%AB%01%E7%A9%BA%E9%97%B4%01...%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">90%好评</a></p><h3><a href=\"http://www.baidu.com/link?url=Veb86ur83Qa_54zEbX1G6R-TcmGpVlJGLFLcigc7mzlNd7fkfYqbcpca-c32uvkFIJZdiphuOziLk6Xk9hxUn_\" target=\"_blank\">CSS3 Transform——transform-origin | css3教程-css3实例-css3...</a></h3><p>2013年11月8日&nbsp;-&nbsp;CSS3的2D transform函数包括了translate()、scale()、rotate()和skew()。 translate()函数接受CSS的标准度量单位;scale()函数接受一个0和1之间的十进...</p><p><a href=\"http://www.w3cplus.com/\" rel=\"nofollow\">www.w3cplus.com/</a><b>css</b>3/t...&nbsp;</p><p>&nbsp;-&nbsp;<a href=\"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f7263d86924b38958448e435061e5a37a2fa263f564480993d335cef164bea866b326c567beb8cc8ff109be4cc3c6ad567627f4dc70005d368ee9a157b96&amp;p=c233ce16d9c110ff57ed927e530c96&amp;newp=80648615d9c347af0eb4c82d021485231610db2151d7d115298dcf&amp;user=baidu&amp;fm=sc&amp;query=css+scale&amp;qid=8e65ff4b000377bc&amp;p1=10\" target=\"_blank\">百度快照</a>&nbsp;-&nbsp;<a href=\"http://www.baidu.com/tools?url=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DVeb86ur83Qa_54zEbX1G6R-TcmGpVlJGLFLcigc7mzlNd7fkfYqbcpca-c32uvkFIJZdiphuOziLk6Xk9hxUn_&amp;jump=http%3A%2F%2Fkoubei.baidu.com%2Fwomc%2Fp%2Fsentry%3Ftitle%3D%02CSS%033%01%20%01Transform%01%E2%80%94%E2%80%94%01trans%01form%01-%01origin%01%20%01%7C%01%20%01css3%01%E6%95%99%E7%A8%8B%01-%01css3%01%E5%AE%9E%E4%BE%8B%01-%01css3%01...%26q%3Dcss%20scale&amp;key=surl\" target=\"_blank\">99%好评</a></p>", "title" : "baidu", "__v" : 0, "favor" : 5, "delete" : 0 }
{ "_id" : { "$oid" : "552cb03a3c12de2c165dae3e" }, "category" : "NodeJS", "create_time" : { "$date" : "2015-04-14T14:14:18.783+0800" }, "content" : "<p><img src=\"http://ww4.sinaimg.cn/large/69c1d4acgw1ebfly5kjlij208202oglr.jpg\"></p><h1>cnpmjs.org: Private npm registry and web for Company</h1><p>So&nbsp;cnpm&nbsp;is meaning:&nbsp;Company npm.</p><h2>Registry</h2><ul><li>Our public registry:&nbsp;<a href=\"http://r.cnpmjs.org/\">r.cnpmjs.org</a>, syncing from&nbsp;<a href=\"http://registry.npmjs.org/\">registry.npmjs.org</a></li><li><a href=\"http://cnpmjs.org/\">cnpmjs.org</a>&nbsp;version:&nbsp;2.0.0-rc.15</li><li><a href=\"https://nodejs.org/\">Node.js</a>&nbsp;version:&nbsp;v1.6.1</li><li>For developers behind the GFW, please visit&nbsp;<a href=\"https://npm.taobao.org/\">the Chinese mirror</a>. 中国用户请访问<a href=\"https://npm.taobao.org/\">国内镜像站点</a>。</li></ul><p>146,506total packages821,679total package versions20total delete packages<br>5,867downloads today63,199downloads in this week437,866downloads in this month<br>40,122downloads in the last day238,388downloads in the last week810,942downloads in the last month<br></p><h3>Sync Status</h3><p>This registry will sync all packages from official registry.</p><p>Last sync time is&nbsp;Tue Apr 14 2015 09:39:02 GMT+0800 (中国标准时间).</p><p>9&nbsp;packages need to be sync100% progress<br>9&nbsp;packages and dependencies sync successed0&nbsp;packages and dependencies sync failedlast success:&nbsp;transduce<br></p><h2>Version Badge</h2><p>Default style is&nbsp;flat-square.</p><p>Badge URL:&nbsp;<a href=\"https://cnpmjs.org/badge/v/cnpmjs.org.svg\" rel=\"nofollow\">https://cnpmjs.org/badge/v/cnpmjs.org.svg</a>&nbsp;<img src=\"http://cnpmjs.org/badge/v/cnpmjs.org.svg\" alt=\"cnpmjs.org-badge\"></p><ul><li>&lt;0.1.0 &amp; &gt;=0.0.0:&nbsp;<img src=\"https://img.shields.io/badge/cnpm-0.0.1-red.svg?style=flat-square\" alt=\"red-badge\"></li><li>&lt;1.0.0 &amp; &gt;=0.1.0:&nbsp;<img src=\"https://img.shields.io/badge/cnpm-0.1.0-green.svg?style=flat-square\" alt=\"red-badge\"></li><li>&gt;=1.0.0:&nbsp;<img src=\"https://img.shields.io/badge/cnpm-1.0.0-blue.svg?style=flat-square\" alt=\"red-badge\"></li></ul><h2>Usage</h2><p>use our npm client&nbsp;<a href=\"https://github.com/cnpm/cnpm\">cnpm</a>(More suitable with cnpmjs.org and gzip support), you can get our client through npm:</p><pre class=\"\"><code class=\"language-bash\"><span class=\"pln\">$ npm install </span><span class=\"pun\">-</span><span class=\"pln\">g cnpm </span><span class=\"pun\">--</span><span class=\"pln\">registry</span><span class=\"pun\">=</span><span class=\"pln\">https</span><span class=\"pun\">://</span><span class=\"pln\">r</span><span class=\"pun\">.</span><span class=\"pln\">cnpmjs</span><span class=\"pun\">.</span><span class=\"pln\">org</span></code></pre><p>Or you can alias NPM to use it:</p><pre class=\"\"><code class=\"language-bash\"><span class=\"pln\">alias cnpm</span><span class=\"pun\">=</span><span class=\"str\" style=\"color: rgb(221, 17, 68);\">\"npm --registry=https://r.cnpmjs.org \\\n--cache=$HOME/.npm/.cache/cnpm \\\n--disturl=https://cnpmjs.org/mirrors/node \\\n--userconfig=$HOME/.cnpmrc\"</span><span class=\"pln\">\n\n</span><span class=\"com\" style=\"color: rgb(153, 153, 136);\">#Or alias it in .bashrc or .zshrc</span><span class=\"pln\">\n$ echo </span><span class=\"str\" style=\"color: rgb(221, 17, 68);\">'\\n#alias for cnpm\\nalias cnpm=\"npm --registry=https://r.cnpmjs.org \\\n  --cache=$HOME/.npm/.cache/cnpm \\\n  --disturl=https://cnpmjs.org/mirrors/node \\\n  --userconfig=$HOME/.cnpmrc\"'</span><span class=\"pln\"> </span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> </span><span class=\"pun\">~/.</span><span class=\"pln\">zshrc </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> source </span><span class=\"pun\">~/.</span><span class=\"pln\">zshrc</span></code></pre><h3>install</h3><p>Install package from&nbsp;<a href=\"http://r.cnpmjs.org/\">r.cnpmjs.org</a>. When installing a package or version does not exist, it will try to install from the official registry(<a href=\"http://registry.npmjs.org/\">registry.npmjs.org</a>), and sync this package to cnpm in the backend.</p><pre class=\"\"><code class=\"language-bash\"><span class=\"pln\">$ cnpm install </span><span class=\"pun\">[</span><span class=\"pln\">name</span><span class=\"pun\">]</span></code></pre><h3>sync</h3><p>Only&nbsp;cnpm&nbsp;cli has this command. Meaning sync package from source npm.</p><pre class=\"\"><code class=\"language-bash\">$ cnpm sync connect</code></pre><p>sync package on web:&nbsp;<a href=\"http://cnpmjs.org/sync/connect\">sync/connect</a></p><pre class=\"\"><code class=\"language-bash\"><span class=\"pln\">$ open https</span><span class=\"pun\">://</span><span class=\"pln\">cnpmjs</span><span class=\"pun\">.</span><span class=\"pln\">org</span><span class=\"pun\">/</span><span class=\"pln\">sync</span><span class=\"pun\">/</span><span class=\"pln\">connect</span></code></pre><h3>publish / unpublish</h3><p>Only&nbsp;admin&nbsp;user can publish / unpublish package to private registry.</p><pre class=\"\"><code class=\"language-bash\"><span class=\"pln\">$ cnpm publish </span><span class=\"pun\">[</span><span class=\"pln\">name</span><span class=\"pun\">]</span><span class=\"pln\">\n$ cnpm unpublish </span><span class=\"pun\">[</span><span class=\"pln\">name</span><span class=\"pun\">]</span></code></pre><h3>Other commands</h3><p>Support all the other npm commands. e.g.:</p><pre class=\"\"><code class=\"language-bash\">$ cnpm info cnpm</code></pre><h2>TODO list</h2><p>@see Github&nbsp;<a href=\"https://github.com/cnpm/cnpmjs.org/issues\">Issues</a></p><h2>Histories</h2><p>Release&nbsp;<a href=\"http://cnpmjs.org/history\">History</a>.</p><h2>npm and cnpm relation</h2><p><img src=\"https://dn-cnpm.qbox.me/cnpm-npm-relation.png\" alt=\"npm&amp;cnpm\"></p><h2>Sponsors</h2><ul><li><img src=\"https://www.ucloud.cn/www/img/www/logo.png\" alt=\"UCloud云计算\"></li></ul>", "title" : "cnpm", "__v" : 0, "favor" : 17, "delete" : 0 }
{ "_id" : { "$oid" : "552f57f273c0256814992aa6" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-16T14:34:26.854+0800" }, "content" : "<h1>angularjs系列之轻松使用$q进行异步编程</h1><p>来源：网络 &nbsp;&nbsp; 编辑：admin</p><p><strong>&nbsp;</strong><strong>第一部分</strong><strong>关于</strong><strong>js</strong><strong>中的异步编程</strong></p><p><strong>　　异步编程</strong>简单的说就是你写了一段代码，但他不会按照你书写代码的顺序立即执行，而是等到程序中发生了某个事件（如用户点击了某个按钮，某个ajax请求得到了响应）才去执行这段代码，而且这段代码可能执行一次（如一个ajax请求得到了响应）、也可能执行很多次或者不执行（一个按钮被点击了许多次或者0次）这就是所谓的异步编程。</p><p>　　有两种异步程序模式<strong>单次执行模式</strong>和<strong>监听执行模式</strong>。像ajax请求这样的就是属于单次执行模式，请求、回调只会进行一次。像事件绑定就属于监听执行模式，只要事件发生回调就可以不断的执行。但是不管是单次执行模式还是监听执行模式在js程序中的共同点都是保存着一个函数引用（这个引用的表现形式就回调函数），在某个事件发生后开始执行这个函数引用中的代码。</p><p>　　下面给出这两种模式的整体模型图：</p><p><img src=\"http://images.cnitblog.com/i/485543/201406/020212363339471.png\" alt=\"\" width=\"716\" height=\"424\"></p><p><strong>　　异步执行体</strong>：包含异步执行代码（或者异步动作）和状态，状态不可逆。</p><p><strong>　　回调执行体</strong>：包含回调执行代码和状态，状态不可逆。</p><p>　　两种执行体是依靠异步执行体发送信号通信。</p><p>　　监听执行模式和单次执行模式的区别：监听模式中会有多个异步执行体和回调执行体副本，且每个异步执行体副本关联一个回调执行体副本。多个副本的这两种执行体的执行代码是一样的，唯一区别的就是每个副本的状态不同。</p><p>　　代码举例：</p><pre class=\"\">//单次执行模式：<br>funtion a(b) {<br>       console.log(“a process”);<br>       b();<br>};<br>function b() {<br>       console.log(“b process”);<br>};<br>a(b); //发送信号<br>//监听执行模式（这里直接使用jquery）：<br>$(“#button”).bind(“click”, function() {<br>       console.log(“click callback”);<br>});<br>$(“#button”).trigger(“click”); //发送信号</pre><p><strong>第二部分</strong><strong>关于</strong><strong>promise</strong><strong>模式的异步编程</strong></p><p>　　上面就是异步编程的两种形式，由于我们的$q是解决第一种模式中存在的问题的，所以这里就讨论讨论单次执行模式中存在的问题。你可以设想这么一种场景，当你要在很多个ajax请求响应完成后做一件事情，你用现有的js的回调方式，会不会发现回调的层次很深、代码十分混乱。而然我们<strong>promise</strong><strong>模式</strong>的异步编程方式就能很好的管理这些单次执行模式下的代码，使你的代码书写起来更加优雅，说白了promise不产生新的东西只是一个语法糖使你编写出更加优雅的异步程序代码。</p><p>　　那promise模式到底是什么样的呢，说白了就是把把我上面的单次执行模式图抽象化了，用一个defer对象（延期对象）代表异步执行体，用一个promise对象（承诺对象）代表回调执行体，这个defer对象可以发送消息，promise接受消息，然后执行相应的回调函数。Promise就是异步执行体和回调执行体之间的桥梁，这样的好处是异步执行体和回调执行体这种模型很好的对异步动作和回调动作进行了解耦。你可以在promise上面好好的操纵你的回调执行体，而只是接受一个来自defer发送的参数。</p><p>　　这里还不能很好的体现出promise模式的优势，而她真正的优势是在这种模型下扩充的api使其发挥了真正的强大作用。比如说promise对象的then方法，这个方法就是支持异步链式编程最重要的方法，他也是使代码更加优雅最重要的方法。还有比如说all接收一个promise数组返回一个新的promise，当前面的所有promise状态都完成之后这个新的promise才能完成，这个很适合多个ajax后处理某些事情。不过可能你还不能明白，下面在介绍$qAPI的时候有详细的介绍。</p><p><strong>第三部分</strong><strong>&nbsp;$q</strong><strong>服务的</strong><strong>API</strong><strong>详解</strong></p><p>　　下面我们通过讲解$q的API让你更多的了解promise异步编程模式。$q是做为angularjs的一个服务而存在的，只是对promise异步编程模式的一个简化实现版，源码中剔除注释实现代码也就二百多行，下面开始介绍$q的API。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>defer</strong>对象(延迟对象)可以通$q.defer()获取，下面是defer对象的api：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp;</strong><strong>方法：</strong></p><p>&nbsp;&nbsp;&nbsp; &nbsp;<strong>resolve(value):</strong>向promise对象异步执行体发送消息告诉他我已经成功完成任务，value即为发送的消息。</p><p>&nbsp; &nbsp; &nbsp;<strong>reject(value):</strong>&nbsp;向promise对象异步执行体发送消息告诉他我已经不可能完成这个任务了，value即为发送的消息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>notify(value):</strong>&nbsp;向promise对象异步执行体发送消息告诉他我现在任务完成的情况，value即为发送的消息。</p><p>　　这些消息发送完promise会调用现有的回调函数。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>属性：</strong></p><p>&nbsp; &nbsp; &nbsp;promise即与这个defer对象的承诺对象。</p><p>　　从上可以看出defer主要是用来发送消息的。</p><p><strong>　　promise</strong><strong>对象</strong>可以通过defer.promise获取,下面是promise对象的api:</p><p><strong>　　方法：</strong></p><p><strong>　　then(successCallback,errorCallback,notifyCallback):</strong>参数为不同消息下的不同回调函数，defer发送不同的消息执行不同的回调函数，消息作为这些回调函数的参数传递。返回值为回一个promise对象为支持链式调用而存在。当第一个defer对象发送消息后，后面的promise对应的defer对象也会发送消息，但是发送的消息不一样，不管第一个defer对象发送的是reject还是resolve，第二个及其以后的都是发送的resolve，消息是可传递的。</p><p><strong>　　catch(errorCallback):</strong>then(null,errorCallback)的缩写。</p><p><strong>　　finally(callback):</strong>相当于then(callback,callback)的缩写，这个finally中的方法不接受参数，却可以将defer发送的消息和消息类型成功传递到下一个then中。</p><p>　　代码举例：</p><pre class=\"\">function f1(num) {<br>       document.write(\"success:\" + (num++) + \"&lt;br/&gt;\");<br>       return num;<br>}<br>function f2(num) {<br>       document.write(\"errror:\" + (num++) + \"&lt;br/&gt;\");<br>       return num;<br>}<br>var defer = $q.defer();<br>var promise = defer.promise;<br>//方式1<br>// promise.then(f1,f2).then(f1,f2);<br>// 方式2<br>// promise.then(f1,f2);<br>// promise.then(f1,f2);<br>// 方式3<br>// promise.then(f1,f2).then(f1,f2);<br>// promise.catch(f2);<br>// promise.finally(f2);<br>//方式4<br>// promise.finally(f2).then(f1,f2);<br>defer.reject(1);<br>方式1的结果：<br>errror: 1<br>success: 2<br>方式2的结果：<br>errror: 1<br>errror: 1<br>方式3的结果：<br>errror: 1<br>errror: 1<br>error: NaN<br>success: 2<br>方式4的结果：<br>Error: NaN<br>Error: 1　　</pre><p>　　现在继续<strong>$q</strong>的api：</p><p><strong>　　方法：</strong></p><p><strong>　　defer():</strong>用来生成一个延迟对象 var defer =$q.defer();</p><p><strong>　　reject():</strong>参数接收错误消息，相当于在回调函数中抛出一个异常，然后在下一个then中调用错误的回调函数。</p><p>　　代码举例：</p><pre class=\"\">var defer = $q.defer();<br>var promise = defer.promise;<br>promise.then(function() {<br>       return $q.reject(\"success error\");<br>}, function() {<br>       return $q.reject(\"error error\");<br>}).then(function(info) {<br>       document.write(\"s:\" + info + \"&lt;br/&gt;\");<br>}, function(info) {<br>       document.write(\"e:\" + info + \"&lt;br/&gt;\");<br>});<br>//方式1<br>// defer.reject(1);<br>//方式2<br>// defer.resolve(1);<br>方式1运行结果<br>e: error error<br>方式2运行结果<br>e: success error<br></pre><p>　　</p><p><strong>　　all()</strong><strong>：</strong>参数接收为一个promise数组，返回一个新的单一promise对象，当这些promise对象对应defer对象全部解决这个单一promise对象才会解决，当这些promise对象中有一个被reject了，这个单一promise同样的被reject了。</p><p>　　代码举例：</p><pre class=\"\">var defer1 = $q.defer();<br>var promise1 = defer1.promise;<br>promise1.then(function(num) {<br>              console.log(\"success\" + num);<br>       },<br>       function(num) {<br>              console.log(\"error\" + num);<br>       });<br>var defer2 = $q.defer();<br>var promise2 = defer2.promise;<br>promise1.then(function(num) {<br>              console.log(\"success\" + num);<br>       },<br>       function(num) {<br>              console.log(\"error\" + num);<br>       });<br>var promise3 = $q.all([promise1, promise1]);<br>promise3.then(function(num) {<br>       console.log(\"s:\" + num);<br>}, function(num) {<br>       console.log(\"e:\" + num);<br>});<br>//方式1<br>// defer1.resolve(1);<br>// defer2.resolve(1);<br>//方式2 <br>//defer1.reject(1);<br>方式1的结果:<br>success1<br>success2: 1<br>s: 1,<br>1<br>方式2的结果:<br>error1<br>e: 1<br></pre><p>　　</p><p><strong>　　when():</strong>接收第一个参数为一个任意值或者是一个promise对象，其他3个同promise的then方法,返回值为一个promise对象。第一个参数若不是promise对象则直接运行success回调且消息为这个对象，若为promise那么返回的promise其实就是对这个promise类型的参数的一个包装而已，被传入的这个promise对应的defer发送的消息，会被我们when函数返回的promise对象所接收到。</p><p>　　代码举例：</p><pre class=\"\">var promise = $q.when(1, function(num) {<br>       console.log(\"s\" + num);<br>}, function() {<br>       console.log(\"e\");<br>});<br>var defer1 = $q.defer();<br>var promise1 = defer1.promise;<br>var promise2 = $q.when(promise1, function(num) {<br>       console.log(\"s\" + num);<br>}, function() {<br>       console.log(\"e\");<br>});<br>defer1.reject(1);<br>运行结果：<br>s1<br>e</pre><p>　　对上面还有一个注意事项就是defer对象发送消息不会立即执行的，而是把要执行的代码放到了rootScope的evalAsync队列当中，当时scope.$apply的时候才会被promise接收到这个消息。</p><p>　　到这里$q服务全部介绍完了，对于angular中的then的链式调用中如果defer发送的reject的那么只有第一个promise是reject的回调，其他的都是resolve的回调这里多少觉得是不合适的，不知道是个bug还是就是这样设计？$q只适合单次执行模式，不知道是否适合扩展成监听执行模式？这都是大家值得思考的问题。</p><p><br></p>", "title" : "angularjs系列之轻松使用$q进行异步编程", "favor" : 0, "__v" : 0, "delete" : 0 }
{ "_id" : { "$oid" : "552f68e51a66d4201ac4cf66" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-16T15:46:45.399+0800" }, "content" : "<h1>阿里巴巴集团B2B子公司技术专家李锟：没有万能的银弹式架构</h1><p>时间：2010-12-10 16:37&nbsp;作者：李智</p><p>【CSDN现场报道】2010年12月9日，年度收官技术盛宴SD2.0大会在上海光大会展中心国际大酒店隆重开幕。这是自2007年成功举办首届以来，由CSDN和《程序员》杂志主办的连续第四届SD2.0（软件开发2.0）大会。来自IBM、微软、盛大、FaceBook、阿里巴巴等众多企业的技术领袖全部汇聚，共同剖析当前IT技术发展大势，分享在各自领域的技术成就与成功秘诀。</p><p>阿里巴巴集团B2B子公司技术专家李锟，在大会现场做题为《REST与面向资源的Web开发》的主题演讲。</p><p><img alt=\"\" src=\"http://articles.csdn.net/uploads/allimg/101210/79_101210181758_1.jpg\"></p><p>阿里巴巴集团B2B子公司技术专家李锟做大会演讲</p><p><strong>以下是演讲实录：</strong></p><p><strong>李锟：</strong>今天我跟大家分享的话题是REST与面向资源的Web开发，副标题是深入理解Web的架构风格，今天的演讲是最后一位的演讲，现在下面基本是满座的状态，大家的精神很好，所以我感觉非常欣慰。今天这个话题对大家来说可能是比较抽象的，但是这个话题对做Web开发来说非常重要，前面听到了有很多老师讲云计算，讲虚拟化，还有讲淘宝开放平台，这些都是非常大的话题，我今天讲REST，相对来说是一个比较小的话题，REST大家觉得这个东西跟大家关系不大，但是其实跟阳光和空气一样就存在于大家身边，有的时候突然感觉到你身边有一些人，有你的亲人你的父母他们一直对你非常好，但是你给他们的付出很少，很多你身边的跟你密切的人你并不真正了解他，对于REST也是这样，今天讲座主要有这些内容，在开讲座之前首先自我介绍。</p><p>大家需要记住的第一个我是一本书的翻译作者，大家可以加入我们的讨论组进行深入讨论，大家可能对REST开发有很多期望，有些话说在前头，在演讲里面你们会听到，这个演讲并不是实战性的，看不到源代码，我讲REST是什么，不会讲为什么采用REST架构风格？如何采用REST架构作开发？REST是内涵非常丰富的架构概念，如果有足够时间讲清楚REST是什么？对大家来说已经足够大了，如果大家感兴趣到明年或者后年也许我可以做后续讲座，比如大家对REST安全性，REST与AJAX的关系，REST与MOBILEAPP的关系，我仍然可以跟大家分享。在演讲过程中保持一个轻松开放的心态，提高抽象思维的能力，展开丰富的想象力，重要的是保持大局观，首先掌握全貌而不是深入细节。通过这个演讲您可以期待的是正本清源，从根本上理解Web架构风格，开阔思路提高分布式应用架构设计水平。</p><p>下面首先我提一个问题，什么是Web？在座的有没有人可以清晰地给出一个Web的定义？</p><p><strong>主持人：</strong>我解释一下，Web本身三W缩写，基于STTB协议的和传输协议的，然后是STML呈现的，基于浏览器来浏览的。</p><p><strong>李锟：</strong>这些都是Web，但是它们只是Web的一部分，今天大家听了我的演讲之后，大家对究竟什么是Web会更加清晰。首先是万维网，有人想到浏览器，HTML，AJAX，FLASH，Web2.0，这些属于Web，我们做技术出身，所以从技术角度来考虑一下究竟什么是Web？从技术角度理解Web有三大基石，第一是URI，标识资源，第二个HTTP操作资源，第三个HYPERTEXT抄文本，描述资源的状态，抄文本也可以有XML JSON或者纯文本。下面我们给Web应用下一个定义，究竟什么是Web应用？首先要使用三大技术，其次是运行在英特耐特环境中，而不是运行在局域网、内网环境，Web应用名词与企业应用相对应。Web应用有两种广义和狭义的两种定义，广义Web应用包括了所有使用上述三大技术的应用，狭义的Web应用仅仅包括在浏览器中应用，狭义的应用和桌面名词相对应。下面我介绍一下什么是架构风格？REST其实是一种架构风格，这个概念来自于建筑学，比架构更加抽象的概念，架构风格和架构之间的关系可以做类别，接口实现或者类实例关系一样，架构风格是一种研究和评价软件架构设计的方法，架构风格这种研究方法建立在两个前提之上，第一个前提就是软件的架构设计，必须要考虑其运行的环境，软件架构并不是纸面上源代码结构，大家可以画一个图，大家认为漂亮的图认为是软件架构，在运行时的架构才是源代码架构。</p><p>第二个是脱离开运行环境的上下文，无法评价架构的优劣，不考虑两种环境具体上下文没有办法对两种架构比较，所以不存在包治百病的银弹式架构，向你推荐包治百病的银弹架构，这些架构不存在的。下面看一些建筑中的架构风格，这个是拜占廷风格，这个叫罗曼风格，这个叫做哥特风格，这个叫做巴罗克风格，这四种风格在意大利最常见的建筑风格，在中国也有建筑风格，比如这种老北京四合院的风格，现在北京人已经很难见到了，下面风格是江南民居的风格，在江南水乡里面经常可以看到。我们同建筑风格能够得到哪些教育？这些建筑架构风格都是不同的，而且如果某一个地方因为历史原因，还有地理原因，已经形成了某种风格的建筑群落，你在这个地方修建另外一种完全不同的架构风格的建筑，肯定会破坏这个地方整体外观，比如你在苏州的拙政园旁边修建一座哥特式风格的建筑，肯定是对苏州的拙政园的整体风格造成很大损害，如果在苏州修了很多哥特式的，还有罗曼的拜占庭风格，那么有一天大家不想去苏州看园林，因为已经搞了一塌糊涂。</p><p>我们再看软件的架构风格，一种架构风格由一种相互协作架构约束来定义，架构约束指的是运行环境施加在架构设计之上的约束，刚才举的例子在苏州架构风格里面不可能再建其他建筑，因为运行环境对架构的风格提出了很多约束，如果建其他很多架构会破坏这个地方整体风貌。然后有一些常见分布式应用架构风格，主要有三大类，第一类是分布式对象，包括CORBA、DCOM，REMOTING，还有一种远程过程调用，简称RPC，比如SOAP、JSON等。第三种表述性状态转移，简称REST，这是我们详细探讨的一种新的架构风格。首先REST是一个缩写，中文翻译成为表述性状态转移，REST来自ROY FIELDING博士论文，中文名字叫架构风格与基于网络的软件架构设计，作者是DAY Software公司的首席科学家，是APACHE软件基金会的合作创始人，在美国加州大学欧文分校获得博士学位，他和一些人创建了Web的体系架构，在我们REST讨论组里面有这篇论文的导读，REST是Web自身的架构风格，Web这样一种世界上最大分布式应用，它的架构风格是REST，REST还是Web之所以取得成功架构因素的总结，这些设计Web标准的人取得了很大成功以后，有什么因素取得成功，有哪些因素取得成功？如果破坏因素之后可能Web不会取得成功，他们经过一段时间以后，把这些研究总结出来加入风格就是REST。所以REST是世界上最成功的架构风格，主要的成功案例就是Web。</p><p>REST在英特耐特环境超媒体系统量身定制，需要注意三个部分，第一在英特耐特环境里面，第二部分在分布式系统，第三部分使用了超媒体，首先我们看一下英特耐特环境，有很多特点，其中有重要的两个特点，第一个特点可伸缩性无法控制，可能建造一个网站第一月访问量非常小，经过了一番推广之后，它的访问流量突然爆增，但是爆增之后仍然有可能会突然减少，明天它的访问量到底多大？是设计者无法控制，安全性也是设计者也是无法控制，不能控制数据包是什么格式？也可能有漏洞，被人发现，发过来一个不安全包导致网站无法工作。对于面向英特耐特环境Web应用，架构设计考虑两个方面，一个是可伸缩性，另外一方面是安全性。REST还是HTTP1.1等Web标准设计指导原理。HTTP1.1为实现REST风格架构而设计，新的Web标准的设计必须符合REST的要求，否则整个Web的架构会因为引入严重的内矛盾而崩溃，比如苏州建筑风格旁边再修建其他建筑设计，这样导致苏州原来的架构风格不复存在。所有的Web应用都应该遵守的架构设计原理，不是必须要遵守的法律条文，是诱导而不是强迫，甚至在某种程度上可能还运行更好，但是如果遵守Web架构风格可以得到很多好处。</p><p>下面看看REST架构风格有哪些架构约束？第一个架构约束是客户服务器，通信只能由客户端单方面发起，表现为请求响应的形式。第二个架构约束是无状态，通信的会话状态全部由客户端负责维护，服务器端负责维护会话状态之外的其他状态，第三个缓存，响应内容可以在通信链条某处被缓冲，以改善效率。第四个统一接口，通信组件之间要有统一接口，以提高交互的可见性，这样的话中间组件对请求语义非常清楚，很方便做一些缓存或者实施安全策略。第五个架构约束是分层系统，通过限制组件行为，将架构分解为若干等级的层，每一个组件看到与其交互的相邻层，这个大家如果熟悉，在通信链条当中插入很多中间的组件，每个组件能够看到和它直接交互的相连的层。最后一个架构约束是按需代码，通过下载并执行APPLET或者脚本形式的代码，允许对客户端功能进行扩展。这是我们每天遇到的，APPLET形式或者脚本形式代码扩充客户端功能，但是在理解了REST的6个架构约束之后，仍然并不能够完全理解REST究竟代表的是什么？要深入理解REST，还需要REST五个关键词，第一个关键词叫做资源，第二个关键词是资源的表述，第三个关键词是状态转移，第四个关键词是统一接口，第五个关键词最难理解的叫做超文本驱动，将超媒体作为应用状态的引擎，超媒体相当于超文本加上媒体内容，作为一个整体叫超媒体。</p><p>下面看一下究竟什么是资源？资源是一种看待服务器的方式，将服务器看作由很多的离散的资源组成，这种看待服务器的方式和分布式对象有很明显的分别，分布式对象看作一个对象，每个对象里面有调用的方法，REST看作是很多离散的资源，资源是服务器一个可以命名的抽象的概念，资源是一个抽象的概念，大家可能原来理解的资源仅仅是服务器的文件或者仅仅是一张表，但是资源是抽象的，资源以名词为核心的特征，首先关注的是名词，资源面向对象编程中的接口，暴露给外界的接口，资源由一个或者多个URI标识，URI是资源的名词，也是资源在Web上的地址，允许使用多个URI标识同一资源，对资源感兴趣的客户通过URI与资源交互。下面看一下什么是资源表述？它是一段对于资源在某一个特定时刻的状态描述，资源表述可以在客户和服务器之间转移，资源表述有多种格式，最常见的是HTML/XML/JSON纯文本，资源表述格式可以通过协商机制来确定。通常来说不同方向表述使用的是不同的格式，服务器到客户端，客户端到服务器端表述不一样。</p><p>下面看一下什么是状态转移？状态转移与状态迁移的含义不同，我分析了很长时间，把状态转移和状态迁移是同样的含义，但是实际上不一样，状态转移是讲在客户端和服务器之间转移代表资源状态的表述，通过转移和操作资源的表述来间接实现操作资源的目的，在REST架构风格里面操作资源是一种间接方式进行，是通过操作资源表述间接实现操作资源的目的，但是在分布式对象和IPC里面对于服务器里面暴露出来的对象或者方法是直接的操作。下面看一下什么是统一接口？统一接口是对资源执行各种操作，对每一个资源只能执行一组有限的操作，这个和分布式对象不一样，HTTP定义了操作资源统一接口，包括以下内容，首先是8个标准方法，GET、POST、PUT、DELETE五、HEAD等，后面的四个方法很少用到，基本用前面四个方法。HTTP头信息里面做开发的时候可以自定义新的信息。还有一部分HTTP响应状态代码，在协议里面有很多代码，在开发当中也可以自定义新的代码。统一接口操作的语义必须由HTTP消息体之前的部分完全表达，如果做操作或者消息体之内，不符合统一接口要求，统一要求必须在HTTP消息体之前的部分完全表达。</p><p>下面看一下什么是超文本驱动？是理解REST最困难最关键的一个方面，如果不理解超文本驱动，就相当于完全没有理解REST。超文本驱动首先是将Web应用看作是一个由很多状态所组成的有限状态机，这些状态既包括客户端负责维护，也包括资源状态，整个状态合在一起应用状态，资源之间通过超链接相互关联，超链接既代表资源之间的相互关系，也代表可执行的状态迁移。超媒体不仅仅包含数据，还包含了状态迁移语义。以超媒体作为引擎驱动Web应用的状态迁移，超媒体通过超媒体暴露出服务器所提供的资源，服务器提供哪些资源是客户端通过解析超媒体发现的，而不是实现定义的？这种方式和HTTP有巨大差别，REST提供资源是事后发起，而不是事先定义。从面向对象角度看，超媒体定义服务器所提供的服务协议，REST这种风格也可以暴露SUI的服务，客户端应该依赖的是超媒体的状态迁移语义，而不应该对于是否存在某个URI的某种特殊构造方式作出假设，一切都有可能变化，只有超媒体的状态迁移语义长期保持稳定，这些都是超媒体驱动含义，大家要理解需要思维的跨越，这种风格和IPC风格差距非常巨大，现在流行的EPI绝大多数都没有实现超媒体驱动，可能到08年的时候逐渐被大家理解，因为2008年的时候，有一篇文章REST必须是超软驱动。</p><p>理解了REST6个架构约束还有5个关键词之后，总结一下REST架构有哪些主要特征？第一个特征是可寻址性，REST有很多资源组成，每个资源至少有一个URI，代表了一个地址，所以RESTWeb应用架构可寻址的，第二个特征是无状态性，规划的状态完全由客户端维护，第三个特征是连通性，这种REST风格的架构必须要保证资源之间连通性，通过超链接相互连接，设计REST架构，其中存在大量孤立资源，彼此之间完全不连通，这种架构设计是非常失败，一定要通过超链接连接起来。下面主要特征是统一接口，无论是任何资源都是由统一接口操作。还有一个主要特征面向资源，REST架构风格以资源为核心进行设计，首先重要的是如何实现这些资源？还有一个主要特征就是超文本驱动，通过超文本来驱动Web应用的迁移，以上的特征合在一起最后达到效果，就是松耦合，REST架构风格总松的，分布式架构是紧的。</p><p>关于HTTP的一些误解，首先认为浏览器只支持GET/POST方法，HTML表单仅仅支持GET/PO四T方法，但是可以通过附加参数的方式模拟PUT请求，发送到服务器之后，把这个请求理解为PUT的请求，对于XMLHTTPREQUEST五对象支持POST等4种方法。还有一个误用HTTP方法。GET方法是安全的，不会对资源造成任何改变，幂等的，服务器端可以做一些日志，但是客户端不能观察到，对于观察到改变来说，不管发送多少资源请求得到结果一样，POST请求不安全的，但是不幂等的，服务器资源改变采用累计的方式完成，举个例子，在服务器端有一个总金额资源，当天值是10，我想改变它的值30，我发POST请求，直接设为10，这种做法是幂等的，不管什么请求得到的服务器结果是一样的，另外一种方法，在原来基础上10再加上两次，最后也得到30，这是PUT方法，但是不幂等，发送一个、两个，十个得到方法不一样，在浏览器刷新POST方法，浏览器提示你是不是需要真的刷新页面，因为刷新页面可能对服务器造成负作用。还有一种误解就是过度使用GET方法，在后面加上问号，把任何操作都使用GET方法发送，主要有两个缺点，第一个缺点敏感信息位于URL里面不够安全。第二个缺点很容易受到爬虫的伤害，做一个网站爬虫来网站做一个链接。比如做得事情删除服务器端，数据库里面一个用户的数据，这个时候你的网站被爬虫爬过之后，会发现你的数据库里面有很多用户数据没有了。还有一种是过度使用POST方法，最典型的是SOAP等RPC风格的调用协议，没有用到其他方法，一个缺点承担了过多职责，没有充分利用HTTP的优点，没有使用HTTP状态代码，根本没有充分利用HTTP的优点。</p><p>还有一种误解认为HTTP是RPC风格，因为HTTP调用协议和远程协议非常相似，其实HTTP是REST风格调用协议，主要区别有没有使用统一接口？在REST架构风格里面使用统一接口使用资源，因为采用统一接口，所以在HTTP链条之中插入很多HTTP缓存，插入大量HTTP缓存之后，有效提高Web应用可伸缩性，大家做分布式应用很难理解，为什么基于文本可伸缩性有些比HTTP风格更好？主要因为REST使用了统一接口，这样得到缓存支持，但是对于HTTP很难以统一的方式实现缓存。REST风格架构更容易实现大粒度的交互，不要涉及到非常细的调用，对于基于网络应用系统损害非常大。HTTP风格协议因为跟本地调用非常相似，所以一些架构经常涉及系统里面远程调用，但是REST采用间接方式，所以更容易实现大粒度交互。还有一种误解认为HTTP是传输协议，之所以有这种误解，是因为HTTP协议很长时间错误翻译为超文本传输协议，但是事实上HTTP是转移协议，HTTP之下TCP是传输协议，它工作做得很好，没有HTTP做传输事情。传输协议做的是底层搬运比特之类的苦力活，不包含操作语义，所以HTTP都是转移协议，不是传输协议。</p><p>还有一个常见误解认为HTTP过于简陋，不具有操作性，可以支持异构系统之间互相操作，这是因为有很多专家认为HTTP不具备操作性，所以他们设计了SOAP协议，这个协议里面S代表的是简单，但是实际上SOAP是复杂的协议，而且本身不能单独使用，必须要结合WS协议和复杂的协议结合在一起才能使用，所以SOAP是非常复杂协议，大家能够充分利用好HTTP已经足够得到可行性，如果大家做过SOAP开发，客户端和服务器端两边版本必须是一样的，这样才能互操作，但是使用HTTP使用任意语言，只要支持HTTP，两边很容易实现操作。</p><p>下面澄清关于REST的误解，第一个误解认为REST只适用于面向机器的Web应用，不适用面向人类的Web应用。但是事实上REST在Web上面普遍适用，只要开发广义的Web应用可以采用REST的架构风格。第二个误解认为直接使用HTTP的API就是REST API，这是大家看到混淆，就算没有SOAP，在SOAP和REST之间有广大的中间地带，要成为严格意义上的STFUL API很困难，是混合物，另外一种认为REST是更加漂亮的设计，大家听了我的演讲大家会理解，这个仅仅是REST一个特征而已，并不是REST的本质特征。</p><p>还有一些常见的问题认为统一接口和超文本驱动都不重要，但是事实上这两个方面是REST风格的核心特征，如果没有这两个特征可以确定肯定不是REST API。大家听了之后可以识别一下现在互联网上流行的REST API。最后一个问题认为统一接口只能使用HTTP实现。但是事实上HTTP仅仅是实现REST的一种方式，REST其实是分布式应用架构设计的一个思想，这种思想很一致的，并不一定非要使用HTTP实现，还有符合统一接口要求的例子，常见的例子有一个扩展HTTP的WebDAV协议，如果大家访问服务器，通过WebDAV访问代码库，也是符合访问要求，也不一定要基于HTTP协议访问，现在涉及下一代协议，肯定符合REST风格，可能与HTTP不同的另外一个协议。</p><p>最后我们看一下在互联网上有哪些可以称之为REST风格的Web应用？在互联网上有很多REST的Web应用，但是绝大多数是国外应用，国内应用并不多，大家看一下这里面的图（PPT），这是里面最有名的几个REST的Web风格应用，随着大家对REST风格深入，我们会看到越来越的Web架构应用，最后面是REST相关的资料，重要的是FIELDING的博士论文，这篇博士论文对于作分布式应用架构设计是非常有帮助的，还有Web标准的协议，比如HTTP1.1协议，还有HTTP身份认证协议，JSS是基于Web开发，这里有很多文章大家看一下。REST开发图书有10几本，我给大家推荐三本书，第一本有中文版，第二本、第三本现在中文版正在翻译，这里隆重推荐的是RESTFUL IN PRACTICE。</p><p>下面是提问环节，大家对REST有什么问题可以提出。</p><p><strong>提问者：</strong>我问一下你提到REST提到无状态性，是不是我理解为没有做一个概念？</p><p><strong>李锟：</strong>购物车有很多方法，定义为资源，然后把状态定义为是一个保存资源状态，保存在服务器资源库里面。</p><p><strong>提问者：</strong>我只要在客户端里面，假设类似ID可以了？</p><p><strong>李锟：</strong>ID仍然是对服务器端状态类似与指针东西，应该把这个状态本身也保存在客户端，就算你在客户端服务器端也不符合要求。一种做法把这种状态的数据全部保存在客户端里面，如果你觉得不安全，比如购物车定义为资源，然后把它的状态保存在服务器端数据库里面，这两种做法都是符合REST的要求。</p><p><strong>提问者：</strong>我听了以后启发很大，您频繁说到超文本驱动？能不能举个例子。</p><p><strong>李锟：</strong>可以想象平常用浏览器访问如淘宝网，你用浏览器首先打开淘宝网首页，在淘宝网里面搜索东西，输入一段你要的东西，点击其中某个结果，这种做法并没有办法实现预知淘宝网上面的URL，给你一个超文本，有很多链接，有很多语义，人类可以理解，你明白这个链接，点了一个链接，触发了一个迁移，到下一个状态，这种就是超文本驱动，对于人类用户来说是有效的，同样对于Web服务，对于机器客户端应用也可以是有效的。</p><p><strong>提问者：</strong>你列了一个图国外符合REST风格应用，为什么要符合REST风格？为什么国内新浪网没有？哪里看出？</p><p><strong>李锟：</strong>充分利用了REST机制，正确使用了四种方法，利用了HTTP内容上的机制，利用了HTTP同情心，正确使用了HTTP的代码，这个符合REST的要求。</p><p><strong>提问者：</strong>请问一下采用从投资角度来说，让我的团队技术方面采用REST，需要多大投资成本？第二个问题我就算下了这样的成本做了这样的事情，效果从商业角度来说有多大？</p><p><strong>李锟：</strong>如果采用REST的风格来建造Web应用，或者是建造Web服务，你的这个网站或者Web服务，它的能够得到很多好处，一个是可伸缩性更好，第二个好处就是这样一种Web应用或者Web服务非常容易建造，别人很容易把你的应用和其他网站结合在一起，第三个好处对于客户端来说有更好的可融性，编程模型非常简单，至于能不能收回商业上面的投入，REST这个思想非常直接的，也不需要它的学习曲线并不高，根据我的经验一般一个Web开发人员，如果熟悉Web开发框架，他在学习REST开发框架，通常来说两三天一般可以学会，现在一些主流语言很好支持REST开发。</p><p><strong>主持人：</strong>REST更多说ERP设计方面，如果不考虑对Web内部的架构有用吗？</p><p><strong>李锟：</strong>在企业内部比如SOA场景，国外已经有很多人在SOA场景里面抛弃基于SOAP很笨重协议，在国外采用SOA方式，最典型的例子是ABM，有很多产品，以前因为历史原因全部暴露出来协议，现在大多数通过两种方式，一种产品方式，一种暴露方式协议，大多数人员采用REST方式。</p><p>最后大家直接想到浏览器是最符合要求的Web应用，大家以后在设计分布式应用架构的时候，想想浏览器是如何工作的？无论开发的是Web应用还是Web服务，模仿浏览器的工作方式都是值得推荐的做法，最后希望大家向我一样拥抱Web架构风格，融入Web，成为Web的一部分，谢谢大家！</p><p><br></p>", "title" : "阿里巴巴集团B2B子公司技术专家李锟：没有万能的银弹式架构", "favor" : 9, "__v" : 0, "delete" : 0 }
{ "_id" : { "$oid" : "5530b8a01b4266dc10422b81" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-17T15:39:12.303+0800" }, "content" : "<h1>$state</h1><h1>service in module&nbsp;ui.router.state<br></h1><h2>Description</h2><p>$state&nbsp;service is responsible for representing states as well as transitioning between them. It also provides interfaces to ask for current state or even states you're coming from.</p><h2>Dependencies</h2><ul><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ng.$rootScope\">$rootScope</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ng.$q\">$q</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$view\">$view</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ng.$injector\">$injector</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.util.$resolve\">$resolve</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateParams\">$stateParams</a></li><li><a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.router.$urlRouter\">$urlRouter</a></li></ul><h2>Methods</h2><ul><li><h3>get(stateOrName, context)</h3><p>Returns the state configuration object for any specific state or all states.</p><br>Parameters<p>ParamTypeDetails<br>stateOrName(optional)stringobject(absolute or relative) If provided, will only get the config for the requested state. If not provided, returns an array of ALL state configs.<br>context(optional)stringobjectWhen stateOrName is a relative state reference, the state will be retrieved relative to context.<br></p>Returns<p>Object|ArrayState configuration object or array of all objects.<br></p><br></li><li><h3>go(to, params, options)</h3><p>Convenience method for transitioning to a new state.&nbsp;$state.go&nbsp;calls&nbsp;$state.transitionTo&nbsp;internally but automatically sets options to{ location: true, inherit: true, relative: $state.$current, notify: true }. This allows you to easily use an absolute or relative to path and specify only the parameters you'd like to update (while letting unspecified parameters inherit from the currently active ancestor states).</p><br>Parameters<p>ParamTypeDetails<br>tostringAbsolute state name or relative state path. Some examples:$state.go('contact.detail')&nbsp;- will go to the&nbsp;contact.detail&nbsp;state$state.go('^')&nbsp;- will go to a parent state$state.go('^.sibling')&nbsp;- will go to a sibling state$state.go('.child.grandchild')&nbsp;- will go to grandchild state<br>params(optional)objectA map of the parameters that will be sent to the state, will populate $stateParams. Any parameters that are not specified will be inherited from currently defined parameters. This allows, for example, going to a sibling state that shares parameters specified in a parent state. Parameter inheritance only works between common ancestor states, I.e. transitioning to a sibling will get you the parameters for all parents, transitioning to a child will get you all current parameters, etc.<br>options(optional)objectOptions object. The options are:location&nbsp;- {boolean=true|string=} - If&nbsp;true&nbsp;will update the url in the location bar, if&nbsp;false&nbsp;will not. If string, must be\"replace\", which will update url and also replace last history record.inherit&nbsp;- {boolean=true}, If&nbsp;true&nbsp;will inherit url parameters from current url.relative&nbsp;- {object=$state.$current}, When transitioning with relative path (e.g '^'), defines which state to be relative from.notify&nbsp;- {boolean=true}, If&nbsp;true&nbsp;will broadcast $stateChangeStart and $stateChangeSuccess events.reload&nbsp;(v0.2.5) - {boolean=false}, If&nbsp;true&nbsp;will force transition even if the state or params have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd use this when you want to force a reload when&nbsp;everything&nbsp;is the same, including search params.<br></p>Returns<p>promiseA promise representing the state of the new transition.Possible success values:$state.currentPossible rejection values:'transition superseded' - when a newer transition has been started after this one'transition prevented' - when&nbsp;event.preventDefault()&nbsp;has been called in a&nbsp;$stateChangeStart&nbsp;listener'transition aborted' - when&nbsp;event.preventDefault()&nbsp;has been called in a&nbsp;$stateNotFound&nbsp;listener or when a&nbsp;$stateNotFoundevent.retry&nbsp;promise errors.'transition failed' - when a state has been unsuccessfully found after 2 tries.resolve error&nbsp;- when an error has occurred with a&nbsp;resolve<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> angular</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">module</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'app'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ui.router'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]);</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">controller</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ctrl'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  $scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">changeState </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">go</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contact.detail'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">};</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></li></ol></pre><img src=\"http://angular-ui.github.io/ui-router/ngdoc_assets/StateGoExamples.png\" class=\"\"><br><br><br></li><li><h3>href(stateOrName, params, options)</h3><p>A url generation method that returns the compiled url for the given state populated with the given params.</p><br>Parameters<p>ParamTypeDetails<br>stateOrNamestringobjectThe state name or state object you'd like to generate a url from.<br>params(optional)objectAn object of parameter values to fill the state's required parameters.<br>options(optional)objectOptions object. The options are:lossy&nbsp;- {boolean=true} - If true, and if there is no url associated with the state provided in the first parameter, then the constructed href url will be built from the first navigable ancestor (aka ancestor with a valid url).inherit&nbsp;- {boolean=true}, If&nbsp;true&nbsp;will inherit url parameters from current url.relative&nbsp;- {object=$state.$current}, When transitioning with relative path (e.g '^'), defines which state to be relative from.absolute&nbsp;- {boolean=false}, If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".<br></p>Returns<p>stringcompiled state url<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">expect</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">href</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"about.person\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> person</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"bob\"</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})).</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">toEqual</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"/about/bob\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li></ol></pre><br><br><br></li><li><h3>includes(stateOrName, params, options)</h3><p>A method to determine if the current active state is equal to or is the child of the state stateName. If any params are passed then they will be tested for a match as well. Not all the parameters need to be passed, just the ones you'd like to test for equality.</p><br>Parameters<p>ParamTypeDetails<br>stateOrNamestringA partial name, relative name, or glob pattern to be searched for within the current state name.<br>params(optional)objectA param object, e.g.&nbsp;{sectionId: section.id}, that you'd like to test against the current active state.<br>options(optional)objectAn options object. The options are:relative&nbsp;- {string|object=} - If&nbsp;stateOrName&nbsp;is a relative state reference and&nbsp;options.relative&nbsp;is set, .includes will test relative to&nbsp;options.relative&nbsp;state (or name).<br></p>Returns<p>booleanReturns true if it does include the state<br></p><h4>Example</h4><p>Partial and relative names</p><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$current</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">name </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contacts.details.item'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Using partial names</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"contacts\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"contacts.details\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"contacts.details.item\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"contacts.list\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns false</span></li><li class=\"L7\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"about\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns false</span></li><li class=\"L8\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L9\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// Using relative names (. and ^), typically from a template</span></li><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// E.g. from the 'contacts.details' template</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">div ng</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"{highlighted: $state.includes('.item')}\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Item</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">div</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span></li></ol></pre><p>Basic globbing patterns</p><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$current</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">name </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contacts.details.item.url'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"*.details.*.*\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"*.details.**\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"**.item.**\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"*.details.item.url\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"*.details.*.url\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L7\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"*.details.*\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns false</span></li><li class=\"L8\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">includes</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"item.**\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns false</span></li></ol></pre><br><br><br></li><li><h3>is(stateOrName, params, options)</h3><p>Similar to&nbsp;<a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state#methods_includes\">$state.includes</a>, but only checks for the full state name. If params is supplied then it will be tested for strict equality against the current active params object, so all params must match with none missing and no extras.</p><br>Parameters<p>ParamTypeDetails<br>stateOrNamestringobjectThe state name (absolute or relative) or state object you'd like to check.<br>params(optional)objectA param object, e.g.&nbsp;{sectionId: section.id}, that you'd like to test against the current active state.<br>options(optional)objectAn options object. The options are:relative&nbsp;- {string|object} - If&nbsp;stateOrName&nbsp;is a relative state name and&nbsp;options.relative&nbsp;is set, .is will test relative tooptions.relative&nbsp;state (or name).<br></p>Returns<p>booleanReturns true if it is the state.<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$current</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">name </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contacts.details.item'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// absolute name</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">is</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contact.details.item'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">is</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">contactDetailItemStateObject</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// returns true</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// relative name (. and ^), typically from a template</span></li><li class=\"L7\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// E.g. from the 'contacts.details' template</span></li><li class=\"L8\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">div ng</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">class</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"{highlighted: $state.is('.item')}\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Item</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">div</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span></li></ol></pre><br><br><br></li><li><h3>reload()</h3><p>A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).</p><br>Returns<p>promiseA promise representing the state of the new transition. See&nbsp;$state.go.<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app angular</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">module</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'app'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ui.router'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]);</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">controller</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ctrl'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  $scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">reload </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(){</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">reload</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></li></ol></pre><p>reload()&nbsp;is just an alias for:</p><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transitionTo</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">current</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> $stateParams</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  reload</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> inherit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">false</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> notify</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></li></ol></pre><br><br><br></li><li><h3>transitionTo(to, toParams, options)</h3><p>Low-level method for transitioning to a new state.&nbsp;<a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state#methods_go\">$state.go</a>&nbsp;uses&nbsp;transitionTo&nbsp;internally.&nbsp;$state.go&nbsp;is recommended in most situations.</p><br>Parameters<p>ParamTypeDetails<br>tostringState name.<br>toParams(optional)objectA map of the parameters that will be sent to the state, will populate $stateParams.<br>options(optional)objectOptions object. The options are:location&nbsp;- {boolean=true|string=} - If&nbsp;true&nbsp;will update the url in the location bar, if&nbsp;false&nbsp;will not. If string, must be\"replace\", which will update url and also replace last history record.inherit&nbsp;- {boolean=false}, If&nbsp;true&nbsp;will inherit url parameters from current url.relative&nbsp;- {object=}, When transitioning with relative path (e.g '^'), defines which state to be relative from.notify&nbsp;- {boolean=true}, If&nbsp;true&nbsp;will broadcast $stateChangeStart and $stateChangeSuccess events.reload&nbsp;(v0.2.5) - {boolean=false}, If&nbsp;true&nbsp;will force transition even if the state or params have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd use this when you want to force a reload when&nbsp;everything&nbsp;is the same, including search params.<br></p>Returns<p>promiseA promise representing the state of the new transition. See&nbsp;$state.go.<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> app </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> angular</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">module</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'app'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">[</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ui.router'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">]);</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">app</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">controller</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'ctrl'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  $scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">changeState </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    $state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">transitionTo</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'contact.detail'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">};</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></li></ol></pre><br><br><br></li></ul><h2>Properties</h2><ul><li><h3>params</h3><p>A param object, e.g. {sectionId: section.id)}, that you'd like to test against the current active state.</p><br><br></li><li><h3>current</h3><p>A reference to the state's config object. However you passed it in. Useful for accessing custom data.</p><br><br></li><li><h3>transition</h3><p>Currently pending transition. A promise that'll resolve or reject.</p><br><br></li></ul><h2>Events</h2><ul><li><h3>$stateChangeError</h3><p>Fired when an&nbsp;<strong>error occurs</strong>&nbsp;during transition. It's important to note that if you have any errors in your resolve functions (javascript errors, non-existent services, etc) they will not throw traditionally. You must listen for this $stateChangeError event to catch&nbsp;<strong>ALL</strong>&nbsp;errors.</p><br><h4>Type:</h4>broadcast<br><br><h4>Target:</h4>root scope<br><br>Parameters<p>ParamTypeDetails<br>eventObjectEvent object.<br>toStateStateThe state being transitioned to.<br>toParamsObjectThe params supplied to the&nbsp;toState.<br>fromStateStateThe current state, pre-transition.<br>fromParamsObjectThe params supplied to the&nbsp;fromState.<br>errorErrorThe resolve error object.<br></p><br></li><li><h3>$stateChangeStart</h3><p>Fired when the state transition&nbsp;<strong>begins</strong>. You can use&nbsp;event.preventDefault()&nbsp;to prevent the transition from happening and then the transition promise will be rejected with a&nbsp;'transition prevented'&nbsp;value.</p><br><h4>Type:</h4>broadcast<br><br><h4>Target:</h4>root scope<br><br>Parameters<p>ParamTypeDetails<br>eventObjectEvent object.<br>toStateStateThe state being transitioned to.<br>toParamsObjectThe params supplied to the&nbsp;toState.<br>fromStateStateThe current state, pre-transition.<br>fromParamsObjectThe params supplied to the&nbsp;fromState.<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$rootScope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$on</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'$stateChangeStart'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">event</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> toState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> toParams</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fromState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fromParams</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">){</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">event</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">preventDefault</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">();</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// transitionTo() promise will be rejected with</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// a 'transition prevented' error</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></li></ol></pre><br><br><br></li><li><h3>$stateChangeSuccess</h3><p>Fired once the state transition is&nbsp;<strong>complete</strong>.</p><br><h4>Type:</h4>broadcast<br><br><h4>Target:</h4>root scope<br><br>Parameters<p>ParamTypeDetails<br>eventObjectEvent object.<br>toStateStateThe state being transitioned to.<br>toParamsObjectThe params supplied to the&nbsp;toState.<br>fromStateStateThe current state, pre-transition.<br>fromParamsObjectThe params supplied to the&nbsp;fromState.<br></p><br></li><li><h3>$stateNotFound</h3><p>Fired when a requested state&nbsp;<strong>cannot be found</strong>&nbsp;using the provided state name during transition. The event is broadcast allowing any handlers a single chance to deal with the error (usually by lazy-loading the unfound state). A special&nbsp;unfoundState&nbsp;object is passed to the listener handler, you can see its three properties in the example. You can use&nbsp;event.preventDefault()&nbsp;to abort the transition and the promise returned from&nbsp;go&nbsp;will be rejected with a'transition aborted'&nbsp;value.</p><br><h4>Type:</h4>broadcast<br><br><h4>Target:</h4>root scope<br><br>Parameters<p>ParamTypeDetails<br>eventObjectEvent object.<br>unfoundStateObjectUnfound State information. Contains:&nbsp;to, toParams, options&nbsp;properties.<br>fromStateStateCurrent state object.<br>fromParamsObjectCurrent state params.<br></p><h4>Example</h4><pre class=\"\"><ol class=\"linenums\" style=\"padding: 0px; margin-right: 0px; margin-left: 33px;\"><li class=\"L0\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// somewhere, assume lazy.state has not been defined</span></li><li class=\"L1\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$state</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">go</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">\"lazy.state\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">a</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> b</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">inherit</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">false</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></li><li class=\"L2\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">&nbsp;</span></li><li class=\"L3\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// somewhere else</span></li><li class=\"L4\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$scope</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">$on</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'$stateNotFound'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span></li><li class=\"L5\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">event</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> unfoundState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fromState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> fromParams</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">){</span></li><li class=\"L6\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">unfoundState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">to</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// \"lazy.state\"</span></li><li class=\"L7\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">unfoundState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">toParams</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// {a:1, b:2}</span></li><li class=\"L8\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">unfoundState</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">options</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"com\" style=\"color: rgb(136, 0, 0);\">// {inherit:false} + default options</span></li><li class=\"L9\" style=\"line-height: 18px; padding-left: 12px; font-size: 12px; color: rgb(190, 190, 197); text-shadow: rgb(255, 255, 255) 0px 1px 0px; list-style-type: decimal !important;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">})</span></li></ol></pre><br><br><br></li></ul><p><br></p>", "title" : "$state", "page_number" : 0, "delete" : 0, "favor" : 4, "__v" : 0 }
{ "_id" : { "$oid" : "5530d5e760810e5414812666" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-17T17:44:07.341+0800" }, "content" : "<h2>Queries</h2><p>Documents can be retrieved through several static helper methods of&nbsp;<a href=\"http://mongoosejs.com/docs/models.html\">models</a>.</p><p>Any&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model\">model</a>&nbsp;method which&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.find\">involves</a>&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.findById\">specifying</a>&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.count\">query</a>&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.update\">conditions</a>&nbsp;can be executed two ways:</p><p>When a&nbsp;callback&nbsp;function:</p><ul><li>is passed, the operation will be executed immediately with the results passed to the callback.</li><li>is not passed, an instance of&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#query-js\">Query</a>&nbsp;is returned, which provides a special&nbsp;QueryBuilder&nbsp;interface for you.</li></ul><p>Let's take a look at what happens when passing a&nbsp;callback:</p><pre><code class=\"javascript\" style=\"color: black; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 13px; font-family: Consolas, 'Liberation Mono', Courier, monospace; display: block; padding: 1.2em; border: 0px none; overflow-x: auto; background: rgb(240, 240, 240);\"><span class=\"keyword\" style=\"font-weight: bold;\">var</span> Person = mongoose.model(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'Person'</span>, yourSchema);\n\n<span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// find each person with a last name matching 'Ghost', selecting the `name` and `occupation` fields</span>\nPerson.findOne({ <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name.last'</span>: <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'Ghost'</span> }, <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name occupation'</span>, <span class=\"function\"><span class=\"keyword\" style=\"font-weight: bold;\">function</span> <span class=\"params\">(err, person)</span> {</span>\n  <span class=\"keyword\" style=\"font-weight: bold;\">if</span> (err) <span class=\"keyword\" style=\"font-weight: bold;\">return</span> handleError(err);\n  console.log(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'%s %s is a %s.'</span>, person.name.first, person.name.last, person.occupation) <span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// Space Ghost is a talk show host.</span>\n})</code></pre><p>Here we see that the query was executed immediately and the results passed to our callback. All callbacks in Mongoose use the pattern:&nbsp;callback(error, result). If an error occurs executing the query, the&nbsp;errorparameter will contain an error document, and&nbsp;result&nbsp;will be null. If the query is successful, the&nbsp;errorparameter will be null, and the&nbsp;result&nbsp;will be populated with the results of the query.</p><p>Anywhere a callback is passed to a query in Mongoose, the callback follows the patterncallback(error, results). What&nbsp;results&nbsp;is depends on the operation: For&nbsp;findOne()&nbsp;it is a&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.findOne\">potentially-null single document</a>,&nbsp;find()&nbsp;a&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.find\">list of documents</a>,&nbsp;count()&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model_Model.count\">the number of documents</a>,&nbsp;update()&nbsp;the<a href=\"http://mongoosejs.com/docs/api.html#model_Model.update\">number of documents affected</a>, etc. The&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#model-js\">API docs for Models</a>&nbsp;provide more detail on what is passed to the callbacks.</p><p>Now let's look at what happens when no&nbsp;callback&nbsp;is passed:</p><pre class=\"selected\"><code class=\"javascript\" style=\"color: black; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 13px; font-family: Consolas, 'Liberation Mono', Courier, monospace; display: block; padding: 1.2em; border: 0px none; overflow-x: auto; background: rgb(240, 240, 240);\"><span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// find each person with a last name matching 'Ghost'</span>\n<span class=\"keyword\" style=\"font-weight: bold;\">var</span> query = Person.findOne({ <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name.last'</span>: <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'Ghost'</span> });\n\n<span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// selecting the `name` and `occupation` fields</span>\nquery.select(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name occupation'</span>);\n\n<span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// execute the query at a later time</span>\nquery.exec(<span class=\"function\"><span class=\"keyword\" style=\"font-weight: bold;\">function</span> <span class=\"params\">(err, person)</span> {</span>\n  <span class=\"keyword\" style=\"font-weight: bold;\">if</span> (err) <span class=\"keyword\" style=\"font-weight: bold;\">return</span> handleError(err);\n  console.log(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'%s %s is a %s.'</span>, person.name.first, person.name.last, person.occupation) <span class=\"comment\" style=\"color: rgb(136, 136, 136);\">// Space Ghost is a talk show host.</span>\n})</code></pre><p>An instance of&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#query-js\">Query</a>&nbsp;was returned which allows us to build up our query. Taking this example further:</p><pre><code class=\"javascript\" style=\"color: black; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 13px; font-family: Consolas, 'Liberation Mono', Courier, monospace; display: block; padding: 1.2em; border: 0px none; overflow-x: auto; background: rgb(240, 240, 240);\">Person\n.find({ occupation: <span class=\"regexp\" style=\"color: rgb(0, 136, 0);\">/host/</span> })\n.where(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name.last'</span>).equals(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'Ghost'</span>)\n.where(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'age'</span>).gt(<span class=\"number\" style=\"color: rgb(0, 136, 0);\">17</span>).lt(<span class=\"number\" style=\"color: rgb(0, 136, 0);\">66</span>)\n.where(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'likes'</span>).<span class=\"keyword\" style=\"font-weight: bold;\">in</span>([<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'vaporizing'</span>, <span class=\"string\" style=\"color: rgb(136, 0, 0);\">'talking'</span>])\n.limit(<span class=\"number\" style=\"color: rgb(0, 136, 0);\">10</span>)\n.sort(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'-occupation'</span>)\n.select(<span class=\"string\" style=\"color: rgb(136, 0, 0);\">'name occupation'</span>)\n.exec(callback);\n</code></pre><h3>References to other documents</h3><p>There are no joins in MongoDB but sometimes we still want references to documents in other collections. This is where&nbsp;<a href=\"http://mongoosejs.com/docs/populate.html\">population</a>&nbsp;comes in. Read more about how to include documents from other collections in your query results&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#query_Query-populate\">here</a>.</p><h3>Streaming</h3><p>Queries can be&nbsp;<a href=\"http://nodejs.org/api/stream.html\">streamed</a>&nbsp;from MongoDB to your application as well. Simply call the query's&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#query_Query-stream\">stream</a>&nbsp;method instead of&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#query_Query-exec\">exec</a>&nbsp;to return an instance of&nbsp;<a href=\"http://mongoosejs.com/docs/api.html#querystream_QueryStream\">QueryStream</a>. Note: QueryStreams are Node.js 0.8 style read streams not Node.js 0.10 style.</p><h3>Next Up</h3><p>Now that we've covered&nbsp;Queries, let's take a look at&nbsp;<a href=\"http://mongoosejs.com/docs/validation.html\">validation</a>.</p><p><br></p>", "title" : "Queries", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "5530d7ca8175f8340f088e8c" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-17T17:52:10.860+0800" }, "content" : "<p>用mongoose取回的对象是否能增加属性？</p><p>发布于 9个月前&nbsp;&nbsp;作者&nbsp;<a href=\"https://cnodejs.org/user/iburning\">iburning</a>&nbsp;&nbsp;463 次浏览</p><pre class=\"\"><code style=\"font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; border: 0px;\"><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Comment</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">findOne</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">({</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> _id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> id </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">err</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> comment</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    comment</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">test </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"str\" style=\"color: rgb(0, 136, 0);\">'test'</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    console</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">log</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">err</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> comment</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">});</span></code></pre><p>console的结果中是不会有test字段的请问用mongoose取回的对象是否能增加属性？</p><p>2 回复</p><p><img src=\"https://cnodejs.org/agent?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F1468716%3Fv%3D3%26s%3D120\"><a href=\"https://cnodejs.org/user/jiangzhuo\">jiangzhuo&nbsp;</a><a href=\"https://cnodejs.org/topic/53bb742127173ad073350b17#53bb7c25a3ccaece73373e5a\">1楼•9个月前</a></p><p>看是個什麼對象了 MongoDB的特性是Schemaless的Mongoose是個ODM 所以如果你的存取使用Mongoose而且是定義了MongooseSchema那樣的話是添加不了的~但是你可以定義成Mixin 然後 再到代碼里動態修改這個Minxi類型的 然後還要通知Mongoose你把什麼改了 &lt;–這種方法不是特別常用，建議樓主還是在設計上把字段都預留好之類的===========這裏講個笑話==================傳說某東的B2C網站的數據庫這樣的 字段A 字段B 字段C 字段D 字段F每個字段什麼用法文檔里規定，所以隨便用============以上只是傳說聽說的一個笑話而已。。。。。===========</p><p><img src=\"https://cnodejs.org/agent?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F3444295%3Fv%3D3%26s%3D120\"><a href=\"https://cnodejs.org/user/iburning\">iburning&nbsp;</a><a href=\"https://cnodejs.org/topic/53bb742127173ad073350b17#53bb888327173ad0733901ea\">2楼•9个月前</a></p><p>非常感谢</p><p>测试了几次发现只有在定义Schema时有的字段才可以被修改，而不能事后添加。</p><p>我也想在定义的时候是不是先把这些字段定义成默认值为NULL放在那里，如</p><pre class=\"\"><code style=\"font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; border: 0px;\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">category_id</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">type </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">ObjectId</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\ncategory</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">type </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Object</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">default</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\ntitle</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> type</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">String</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">...</span></code></pre><p>但是好像也很丑，就像很多冗余数据在那里似的，虽然他们是空的…</p><p><br></p>", "title" : "用mongoose取回的对象是否能增加属性？", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55349b45c8ff277416cf7dac" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-20T14:23:01.656+0800" }, "content" : "<h1>Bootstrap&nbsp;教程</h1><p><img src=\"http://www.w3cschool.cc/wp-content/uploads/2013/10/bs.png\" alt=\"Bootstrap 教程\" width=\"128\" height=\"128\"></p><p>Bootstrap，来自 Twitter，是目前最受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。</p><p>本教程将向您讲解 Bootstrap 框架的基础，通过学习这些内容，您将可以轻松地创建 Web 项目。教程被分为 Bootstrap 基本结构、Bootstrap CSS、Bootstrap 布局组件和 Bootstrap 插件几个部分。每个部分都包含了与该主题相关的简单有用的实例。</p><p><b><a href=\"http://www.w3cschool.cc/bootstrap/bootstrap-intro.html\">现在开始学习 Bootstrap！</a></b></p><p><b><a href=\"http://www.w3cschool.cc/try/bootstrap/layoutit/\" target=\"_blank\">Bootstrap 可视化布局系统！</a></b></p><h2>谁适合阅读本教程？</h2><p>只要您具备 HTML 和 CSS 的基础知识，您就可以阅读本教程，进而开发出自己的网站。在您学习完本教程后，您即可达到使用 Bootstrap 开发 Web 项目的中等水平。</p><h2>阅读本教程前，您需要了解的知识：</h2><p>在您开始阅读本教程之前，您必须具备 HTML 、 CSS 和 JavaScript 的基础知识。如果您还不了解这些概念，那么建议您先阅读我们的这些教程:</p><ul><li><a href=\"http://www.w3cschool.cc/html/html-tutorial.html\">HTML 教程</a></li><li><a href=\"http://www.w3cschool.cc/css/css-tutorial.html\">CSS 教程</a></li><li><a href=\"http://www.w3cschool.cc/js/js-tutorial.html\">JavaScript 教程</a></li></ul><h2>Bootstrap 有用的资源</h2><ul><li><a target=\"_blank\" href=\"http://getbootstrap.com/\">Twitter Bootstrap</a>&nbsp;- Bootstrap 的官方网站，可以在该站点上找到所有可用的文档和下载。</li><li><a target=\"_blank\" href=\"http://www.w3cschool.cc/manual/lessguide/\">Less</a>&nbsp;- Less 快速入门。</li></ul><p><br></p>", "title" : "Bootstrap 教程", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "5534be7cb0146d501327dc93" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-20T16:53:16.760+0800" }, "content" : "<h1>angularjs系列之轻松使用$q进行异步编程</h1><p>来源：网络 &nbsp;&nbsp; 编辑：admin</p><p><strong>&nbsp;</strong><strong>第一部分</strong><strong>关于</strong><strong>js</strong><strong>中的异步编程</strong></p><p><strong>　　异步编程</strong>简单的说就是你写了一段代码，但他不会按照你书写代码的顺序立即执行，而是等到程序中发生了某个事件（如用户点击了某个按钮，某个ajax请求得到了响应）才去执行这段代码，而且这段代码可能执行一次（如一个ajax请求得到了响应）、也可能执行很多次或者不执行（一个按钮被点击了许多次或者0次）这就是所谓的异步编程。</p><p>　　有两种异步程序模式<strong>单次执行模式</strong>和<strong>监听执行模式</strong>。像ajax请求这样的就是属于单次执行模式，请求、回调只会进行一次。像事件绑定就属于监听执行模式，只要事件发生回调就可以不断的执行。但是不管是单次执行模式还是监听执行模式在js程序中的共同点都是保存着一个函数引用（这个引用的表现形式就回调函数），在某个事件发生后开始执行这个函数引用中的代码。</p><p>　　下面给出这两种模式的整体模型图：</p><p><img src=\"http://images.cnitblog.com/i/485543/201406/020212363339471.png\" alt=\"\" width=\"716\" height=\"424\"></p><p><strong>　　异步执行体</strong>：包含异步执行代码（或者异步动作）和状态，状态不可逆。</p><p><strong>　　回调执行体</strong>：包含回调执行代码和状态，状态不可逆。</p><p>　　两种执行体是依靠异步执行体发送信号通信。</p><p>　　监听执行模式和单次执行模式的区别：监听模式中会有多个异步执行体和回调执行体副本，且每个异步执行体副本关联一个回调执行体副本。多个副本的这两种执行体的执行代码是一样的，唯一区别的就是每个副本的状态不同。</p><p>　　代码举例：</p><pre class=\"\">//单次执行模式：<br>funtion a(b) {<br>       console.log(“a process”);<br>       b();<br>};<br>function b() {<br>       console.log(“b process”);<br>};<br>a(b); //发送信号<br>//监听执行模式（这里直接使用jquery）：<br>$(“#button”).bind(“click”, function() {<br>       console.log(“click callback”);<br>});<br>$(“#button”).trigger(“click”); //发送信号</pre><p><strong>第二部分</strong><strong>关于</strong><strong>promise</strong><strong>模式的异步编程</strong></p><p>　　上面就是异步编程的两种形式，由于我们的$q是解决第一种模式中存在的问题的，所以这里就讨论讨论单次执行模式中存在的问题。你可以设想这么一种场景，当你要在很多个ajax请求响应完成后做一件事情，你用现有的js的回调方式，会不会发现回调的层次很深、代码十分混乱。而然我们<strong>promise</strong><strong>模式</strong>的异步编程方式就能很好的管理这些单次执行模式下的代码，使你的代码书写起来更加优雅，说白了promise不产生新的东西只是一个语法糖使你编写出更加优雅的异步程序代码。</p><p>　　那promise模式到底是什么样的呢，说白了就是把把我上面的单次执行模式图抽象化了，用一个defer对象（延期对象）代表异步执行体，用一个promise对象（承诺对象）代表回调执行体，这个defer对象可以发送消息，promise接受消息，然后执行相应的回调函数。Promise就是异步执行体和回调执行体之间的桥梁，这样的好处是异步执行体和回调执行体这种模型很好的对异步动作和回调动作进行了解耦。你可以在promise上面好好的操纵你的回调执行体，而只是接受一个来自defer发送的参数。</p><p>　　这里还不能很好的体现出promise模式的优势，而她真正的优势是在这种模型下扩充的api使其发挥了真正的强大作用。比如说promise对象的then方法，这个方法就是支持异步链式编程最重要的方法，他也是使代码更加优雅最重要的方法。还有比如说all接收一个promise数组返回一个新的promise，当前面的所有promise状态都完成之后这个新的promise才能完成，这个很适合多个ajax后处理某些事情。不过可能你还不能明白，下面在介绍$qAPI的时候有详细的介绍。</p><p><strong>第三部分</strong><strong>&nbsp;$q</strong><strong>服务的</strong><strong>API</strong><strong>详解</strong></p><p>　　下面我们通过讲解$q的API让你更多的了解promise异步编程模式。$q是做为angularjs的一个服务而存在的，只是对promise异步编程模式的一个简化实现版，源码中剔除注释实现代码也就二百多行，下面开始介绍$q的API。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>defer</strong>对象(延迟对象)可以通$q.defer()获取，下面是defer对象的api：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp;</strong><strong>方法：</strong></p><p>&nbsp;&nbsp;&nbsp; &nbsp;<strong>resolve(value):</strong>向promise对象异步执行体发送消息告诉他我已经成功完成任务，value即为发送的消息。</p><p>&nbsp; &nbsp; &nbsp;<strong>reject(value):</strong>&nbsp;向promise对象异步执行体发送消息告诉他我已经不可能完成这个任务了，value即为发送的消息。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>notify(value):</strong>&nbsp;向promise对象异步执行体发送消息告诉他我现在任务完成的情况，value即为发送的消息。</p><p>　　这些消息发送完promise会调用现有的回调函数。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>属性：</strong></p><p>&nbsp; &nbsp; &nbsp;promise即与这个defer对象的承诺对象。</p><p>　　从上可以看出defer主要是用来发送消息的。</p><p><strong>　　promise</strong><strong>对象</strong>可以通过defer.promise获取,下面是promise对象的api:</p><p><strong>　　方法：</strong></p><p><strong>　　then(successCallback,errorCallback,notifyCallback):</strong>参数为不同消息下的不同回调函数，defer发送不同的消息执行不同的回调函数，消息作为这些回调函数的参数传递。返回值为回一个promise对象为支持链式调用而存在。当第一个defer对象发送消息后，后面的promise对应的defer对象也会发送消息，但是发送的消息不一样，不管第一个defer对象发送的是reject还是resolve，第二个及其以后的都是发送的resolve，消息是可传递的。</p><p><strong>　　catch(errorCallback):</strong>then(null,errorCallback)的缩写。</p><p><strong>　　finally(callback):</strong>相当于then(callback,callback)的缩写，这个finally中的方法不接受参数，却可以将defer发送的消息和消息类型成功传递到下一个then中。</p><p>　　代码举例：</p><pre class=\"\">function f1(num) {<br>       document.write(\"success:\" + (num++) + \"&lt;br/&gt;\");<br>       return num;<br>}<br>function f2(num) {<br>       document.write(\"errror:\" + (num++) + \"&lt;br/&gt;\");<br>       return num;<br>}<br>var defer = $q.defer();<br>var promise = defer.promise;<br>//方式1<br>// promise.then(f1,f2).then(f1,f2);<br>// 方式2<br>// promise.then(f1,f2);<br>// promise.then(f1,f2);<br>// 方式3<br>// promise.then(f1,f2).then(f1,f2);<br>// promise.catch(f2);<br>// promise.finally(f2);<br>//方式4<br>// promise.finally(f2).then(f1,f2);<br>defer.reject(1);<br>方式1的结果：<br>errror: 1<br>success: 2<br>方式2的结果：<br>errror: 1<br>errror: 1<br>方式3的结果：<br>errror: 1<br>errror: 1<br>error: NaN<br>success: 2<br>方式4的结果：<br>Error: NaN<br>Error: 1　　</pre><p>　　现在继续<strong>$q</strong>的api：</p><p><strong>　　方法：</strong></p><p><strong>　　defer():</strong>用来生成一个延迟对象 var defer =$q.defer();</p><p><strong>　　reject():</strong>参数接收错误消息，相当于在回调函数中抛出一个异常，然后在下一个then中调用错误的回调函数。</p><p>　　代码举例：</p><pre class=\"\">var defer = $q.defer();<br>var promise = defer.promise;<br>promise.then(function() {<br>       return $q.reject(\"success error\");<br>}, function() {<br>       return $q.reject(\"error error\");<br>}).then(function(info) {<br>       document.write(\"s:\" + info + \"&lt;br/&gt;\");<br>}, function(info) {<br>       document.write(\"e:\" + info + \"&lt;br/&gt;\");<br>});<br>//方式1<br>// defer.reject(1);<br>//方式2<br>// defer.resolve(1);<br>方式1运行结果<br>e: error error<br>方式2运行结果<br>e: success error<br></pre><p>　　</p><p><strong>　　all()</strong><strong>：</strong>参数接收为一个promise数组，返回一个新的单一promise对象，当这些promise对象对应defer对象全部解决这个单一promise对象才会解决，当这些promise对象中有一个被reject了，这个单一promise同样的被reject了。</p><p>　　代码举例：</p><pre class=\"\">var defer1 = $q.defer();<br>var promise1 = defer1.promise;<br>promise1.then(function(num) {<br>              console.log(\"success\" + num);<br>       },<br>       function(num) {<br>              console.log(\"error\" + num);<br>       });<br>var defer2 = $q.defer();<br>var promise2 = defer2.promise;<br>promise1.then(function(num) {<br>              console.log(\"success\" + num);<br>       },<br>       function(num) {<br>              console.log(\"error\" + num);<br>       });<br>var promise3 = $q.all([promise1, promise1]);<br>promise3.then(function(num) {<br>       console.log(\"s:\" + num);<br>}, function(num) {<br>       console.log(\"e:\" + num);<br>});<br>//方式1<br>// defer1.resolve(1);<br>// defer2.resolve(1);<br>//方式2 <br>//defer1.reject(1);<br>方式1的结果:<br>success1<br>success2: 1<br>s: 1,<br>1<br>方式2的结果:<br>error1<br>e: 1<br></pre><p>　　</p><p><strong>　　when():</strong>接收第一个参数为一个任意值或者是一个promise对象，其他3个同promise的then方法,返回值为一个promise对象。第一个参数若不是promise对象则直接运行success回调且消息为这个对象，若为promise那么返回的promise其实就是对这个promise类型的参数的一个包装而已，被传入的这个promise对应的defer发送的消息，会被我们when函数返回的promise对象所接收到。</p><p>　　代码举例：</p><pre class=\"\">var promise = $q.when(1, function(num) {<br>       console.log(\"s\" + num);<br>}, function() {<br>       console.log(\"e\");<br>});<br>var defer1 = $q.defer();<br>var promise1 = defer1.promise;<br>var promise2 = $q.when(promise1, function(num) {<br>       console.log(\"s\" + num);<br>}, function() {<br>       console.log(\"e\");<br>});<br>defer1.reject(1);<br>运行结果：<br>s1<br>e</pre><p>　　对上面还有一个注意事项就是defer对象发送消息不会立即执行的，而是把要执行的代码放到了rootScope的evalAsync队列当中，当时scope.$apply的时候才会被promise接收到这个消息。</p><p>　　到这里$q服务全部介绍完了，对于angular中的then的链式调用中如果defer发送的reject的那么只有第一个promise是reject的回调，其他的都是resolve的回调这里多少觉得是不合适的，不知道是个bug还是就是这样设计？$q只适合单次执行模式，不知道是否适合扩展成监听执行模式？这都是大家值得思考的问题。</p><p><br></p>", "title" : "angularjs系列之轻松使用$q进行异步编程", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "5536fef7facd6eb81344f792" }, "category" : "NodeJS", "create_time" : { "$date" : "2015-04-22T09:52:55.749+0800" }, "content" : "<h1>模态框&nbsp;modal.js</h1><p>模态框经过了优化，更加灵活，以弹出对话框的形式出现，具有最小和最实用的功能集。</p><h4>不支持模态框重叠</h4><p>千万不要在一个模态框上重叠另一个模态框。要想同时支持多个模态框，需要自己写额外的代码来实现。</p><h4>模态框的 HTML 代码放置的位置</h4><p>务必将模态框的 HTML 代码放在文档的最高层级内（也就是说，尽量作为 body 标签的直接子元素），以避免其他组件影响模态框的展现和/或功能。</p><h4>对于移动设备的附加说明</h4><p>这里提供了在移动设备上使用模态框有一些附加说明。请参考<a href=\"http://v3.bootcss.com/getting-started/#support-fixed-position-keyboards\">浏览器支持</a>章节。</p><p>Due to how HTML5 defines its semantics, the&nbsp;autofocus&nbsp;HTML attribute has no effect in Bootstrap modals.&nbsp;To achieve the same effect, use some custom JavaScript:</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'shown.bs.modal'</span><span class=\"p\">,</span> <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myInput'</span><span class=\"p\">).</span><span class=\"nx\">focus</span><span class=\"p\">()</span>\n<span class=\"p\">})</span></code></pre><h2>实例</h2><h3>静态实例</h3><p>以下模态框包含了模态框的头、体和一组放置于底部的按钮。</p><p>×Close</p><h4>Modal title</h4><p>One fine body…</p><p>Close&nbsp;Save changes</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-header\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"close\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-label=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"Close\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;&lt;span</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span><span class=\"ni\" style=\"color: rgb(153, 153, 153);\">&amp;times;</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/span&gt;&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;h4</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-title\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Modal title<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/h4&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-body\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;p&gt;</span>One fine body<span class=\"ni\" style=\"color: rgb(153, 153, 153);\">&amp;hellip;</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/p&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-footer\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-default\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Close<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Save changes<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal-content --&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal-dialog --&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal --&gt;</span></code></pre><h3>动态实例</h3><p>点击下面的按钮即可通过 JavaScript 启动一个模态框。此模态框将从上到下、逐渐浮现到页面前。</p><p>Launch demo modal</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- Button trigger modal --&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary btn-lg\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#myModal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  Launch demo modal\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n\n<span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- Modal --&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"myModal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">tabindex=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"-1\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"myModalLabel\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-header\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"close\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-label=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"Close\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;&lt;span</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span><span class=\"ni\" style=\"color: rgb(153, 153, 153);\">&amp;times;</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/span&gt;&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;h4</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-title\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"myModalLabel\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Modal title<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/h4&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-body\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        ...\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-footer\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-default\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Close<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Save changes<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span></code></pre><h4>增强模态框的可访问性</h4><p>务必为&nbsp;.modal&nbsp;添加&nbsp;role=\"dialog\"&nbsp;属性，aria-labelledby=\"myModalLabel\"&nbsp;属性用于只想模态框的标题栏，aria-hidden=\"true\"&nbsp;用于通知辅助性工具略过模态框的 DOM元素。</p><p>另外，你还应该通过&nbsp;aria-describedby&nbsp;属性为模态框&nbsp;.modal&nbsp;添加描述性信息。</p><h4>嵌入 YouTube 视频（天朝无用）</h4><p>在模态框中嵌入 YouTube 视频需要增加一些额外的 JavaScript 代码，用于自动停止重放等功能，这些代码并没有在 Bootstrap 中提供。请参考这份<a href=\"http://stackoverflow.com/questions/18622508/bootstrap-3-and-youtube-in-modal\">发布在 Stack Overflow 上的文章</a>。</p><h2>可选尺寸</h2><p>模态框提供了两个可选尺寸，通过为&nbsp;.modal-dialog&nbsp;增加一个样式调整类实现。</p><p>大模态框&nbsp;小模态框</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- Large modal --&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\".bs-example-modal-lg\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Large modal<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade bs-example-modal-lg\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">tabindex=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"-1\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"myLargeModalLabel\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog modal-lg\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      ...\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n\n<span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- Small modal --&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\".bs-example-modal-sm\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Small modal<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade bs-example-modal-sm\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">tabindex=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"-1\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"mySmallModalLabel\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog modal-sm\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      ...\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span></code></pre><h2>禁止动画效果</h2><p>如果你不需要模态框弹出时的动画效果（淡入淡出效果），删掉&nbsp;.fade&nbsp;类即可。</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">tabindex=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"-1\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  ...\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span></code></pre><h2>Using the grid system</h2><p>To take advantage of the Bootstrap grid system within a modal, just nest&nbsp;.container-fluid&nbsp;within the&nbsp;.modal-bodyand then use the normal grid system classes within this container.</p><p>Launch demo modal</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"gridSystemModalLabel\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-header\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"close\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-label=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"Close\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;&lt;span</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span><span class=\"ni\" style=\"color: rgb(153, 153, 153);\">&amp;times;</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/span&gt;&lt;/button&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;h4</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-title\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"gridSystemModalLabel\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Modal title<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/h4&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-body\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"container-fluid\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"row\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-md-4\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>.col-md-4<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-md-4 col-md-offset-4\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>.col-md-4 .col-md-offset-4<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"row\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-md-3 col-md-offset-3\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>.col-md-3 .col-md-offset-3<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-md-2 col-md-offset-4\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>.col-md-2 .col-md-offset-4<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"row\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-md-6 col-md-offset-3\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>.col-md-6 .col-md-offset-3<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"row\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-sm-9\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n                Level 1: .col-sm-9\n                <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"row\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n                  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-xs-8 col-sm-6\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n                    Level 2: .col-xs-8 .col-sm-6\n                  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n                  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"col-xs-4 col-sm-6\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n                    Level 2: .col-xs-4 .col-sm-6\n                  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n                <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n              <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-footer\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-default\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Close<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Save changes<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal-content --&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal-dialog --&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span><span class=\"c\" style=\"color: rgb(153, 153, 153);\">&lt;!-- /.modal --&gt;</span></code></pre><h2>Varying modal content based on trigger button</h2><p>Have a bunch of buttons that all trigger the same modal, just with slightly different contents? Use&nbsp;event.relatedTargetand&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes\">HTML&nbsp;data-*&nbsp;attributes</a>&nbsp;(possibly&nbsp;<a href=\"http://api.jquery.com/data/\">via jQuery</a>) to vary the contents of the modal depending on which button was clicked. See the Modal Events docs for details on&nbsp;relatedTarget,</p><p>Open modal for @mdo&nbsp;Open modal for @fat&nbsp;Open modal for @getbootstrap&nbsp;...more buttons...</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#exampleModal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-whatever=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"@mdo\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Open modal for @mdo<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#exampleModal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-whatever=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"@fat\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Open modal for @fat<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#exampleModal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-whatever=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"@getbootstrap\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Open modal for @getbootstrap<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n...more buttons...\n\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal fade\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"exampleModal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">tabindex=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"-1\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">role=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"dialog\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-labelledby=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"exampleModalLabel\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-dialog\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-content\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-header\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"close\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-label=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"Close\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;&lt;span</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">aria-hidden=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"true\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span><span class=\"ni\" style=\"color: rgb(153, 153, 153);\">&amp;times;</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/span&gt;&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;h4</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-title\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"exampleModalLabel\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>New message<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/h4&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-body\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;form&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"form-group\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;label</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">for=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"recipient-name\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"control-label\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Recipient:<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/label&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;input</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"text\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"form-control\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"recipient-name\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"form-group\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;label</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">for=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"message-text\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"control-label\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Message:<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/label&gt;</span>\n            <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;textarea</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"form-control\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">id=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"message-text\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;&lt;/textarea&gt;</span>\n          <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/form&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;div</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal-footer\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-default\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-dismiss=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Close<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n        <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">class=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"btn btn-primary\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Send message<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span>\n      <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n    <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n  <span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span>\n<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/div&gt;</span></code></pre><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#exampleModal'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'show.bs.modal'</span><span class=\"p\">,</span> <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">function</span> <span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">var</span> <span class=\"nx\">button</span> <span class=\"o\" style=\"color: rgb(85, 85, 85);\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">relatedTarget</span><span class=\"p\">)</span> <span class=\"c1\" style=\"color: rgb(153, 153, 153);\">// Button that triggered the modal</span>\n  <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">var</span> <span class=\"nx\">recipient</span> <span class=\"o\" style=\"color: rgb(85, 85, 85);\">=</span> <span class=\"nx\">button</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'whatever'</span><span class=\"p\">)</span> <span class=\"c1\" style=\"color: rgb(153, 153, 153);\">// Extract info from data-* attributes</span>\n  <span class=\"c1\" style=\"color: rgb(153, 153, 153);\">// If necessary, you could initiate an AJAX request here (and then do the updating in a callback).</span>\n  <span class=\"c1\" style=\"color: rgb(153, 153, 153);\">// Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.</span>\n  <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">var</span> <span class=\"nx\">modal</span> <span class=\"o\" style=\"color: rgb(85, 85, 85);\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\" style=\"color: rgb(0, 102, 153);\">this</span><span class=\"p\">)</span>\n  <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'.modal-title'</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'New message to '</span> <span class=\"o\" style=\"color: rgb(85, 85, 85);\">+</span> <span class=\"nx\">recipient</span><span class=\"p\">)</span>\n  <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'.modal-body input'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">recipient</span><span class=\"p\">)</span>\n<span class=\"p\">})</span></code></pre><h2>用法</h2><p>通过 data 属性或 JavaScript 调用模态框插件，可以根据需要动态展示隐藏的内容。模态框弹出时还会为&nbsp;&lt;body&gt;&nbsp;元素添加&nbsp;.modal-open&nbsp;类，从而覆盖页面默认的滚动行为，并且还会自动生成一个&nbsp;.modal-backdrop&nbsp;元素用于提供一个可点击的区域，点击此区域就即可关闭模态框。</p><h3>通过 data 属性</h3><p>不需写 JavaScript 代码也可激活模态框。通过在一个起控制器作用的元素（例如：按钮）上添加&nbsp;data-toggle=\"modal\"属性，或者&nbsp;data-target=\"#foo\"&nbsp;属性，再或者&nbsp;href=\"#foo\"&nbsp;属性，用于指向被控制的模态框。</p><p>复制</p><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;button</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">type=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"button\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#myModal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Launch modal<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/button&gt;</span></code></pre><h3>通过 JavaScript 调用</h3><p>只需一行 JavaScript 代码，即可通过元素的 id&nbsp;myModal&nbsp;调用模态框：</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">)</span></code></pre><h3>参数</h3><p>可以将选项通过 data 属性或 JavaScript 代码传递。对于 data 属性，需要将参数名称放到&nbsp;data-&nbsp;之后，例如&nbsp;data-backdrop=\"\"。</p><div class=\"simditor-table\"><table><colgroup><col width=\"13.622754491017963%\"><col width=\"28.592814371257486%\"><col width=\"8.532934131736528%\"><col width=\"49.40119760479042%\"></colgroup><tbody><tr><td>backdrop</td><td class=\"\">boolean 或 字符串'static'</td><td>true</td><td>Includes a modal-backdrop element. Alternatively, specify&nbsp;static&nbsp;for a backdrop which doesn't close the modal on click.</td></tr><tr><td>keyboard</td><td>boolean</td><td>true</td><td>键盘上的 esc 键被按下时关闭模态框。</td></tr><tr><td>show</td><td>boolean</td><td>true</td><td>模态框初始化之后就立即显示出来。</td></tr><tr><td>remote</td><td>path</td><td>false</td><td><p>This option is deprecated since v3.3.0 and will be removed in v4.&nbsp;We recommend instead using client-side templating or a data binding framework, or calling&nbsp;<a href=\"http://api.jquery.com/load/\">jQuery.load</a>yourself.</p><p>如果提供的是 URL，将利用 jQuery 的&nbsp;load&nbsp;方法从此 URL 地址加载要展示的内容（只加载一次）并插入&nbsp;.modal-content&nbsp;内。如果使用的是 data 属性 API，还可以利用&nbsp;href&nbsp;属性指定内容来源地址。下面是一个实例：</p>复制<br><pre><code class=\"language-html\" data-lang=\"html\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;a</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-toggle=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"modal\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">href=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"remote.html\"</span> <span class=\"na\" style=\"color: rgb(79, 159, 207);\">data-target=</span><span class=\"s\" style=\"color: rgb(212, 73, 80);\">\"#modal\"</span><span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&gt;</span>Click me<span class=\"nt\" style=\"color: rgb(47, 111, 159);\">&lt;/a&gt;</span></code></pre><br></td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 332px; display: none;\"></div></div><h3>方法</h3><h4>.modal(options)</h4><p>将页面中的某块内容作为模态框激活。接受可选参数&nbsp;object。</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">({</span>\n  <span class=\"na\" style=\"color: rgb(79, 159, 207);\">keyboard</span><span class=\"p\">:</span> <span class=\"kc\" style=\"color: rgb(0, 102, 153);\">false</span>\n<span class=\"p\">})</span></code></pre><h4>.modal('toggle')</h4><p>手动打开或关闭模态框。在模态框显示或隐藏之前返回到主调函数中（也就是，在触发&nbsp;shown.bs.modal&nbsp;或hidden.bs.modal&nbsp;事件之前）。</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'toggle'</span><span class=\"p\">)</span></code></pre><h4>.modal('show')</h4><p>手动打开模态框。在模态框显示之前返回到主调函数中&nbsp;（也就是，在触发&nbsp;shown.bs.modal&nbsp;事件之前）。</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'show'</span><span class=\"p\">)</span></code></pre><h4>.modal('hide')</h4><p>手动隐藏模态框。在模态框隐藏之前返回到主调函数中&nbsp;（也就是，在触发&nbsp;hidden.bs.modal&nbsp;事件之前）。</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'hide'</span><span class=\"p\">)</span></code></pre><h4>.modal('handleUpdate')</h4><p>Readjusts the modal's positioning to counter a scrollbar in case one should appear, which would make the modal jump to the left.</p><p>Only needed when the height of the modal changes while it is open.</p><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'handleUpdate'</span><span class=\"p\">)</span></code></pre><h3>事件</h3><p>Bootstrap 的模态框类提供了一些事件用于监听并执行你自己的代码。</p><p>All modal events are fired at the modal itself (i.e. at the&nbsp;&lt;div class=\"modal\"&gt;).</p><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>show.bs.modal</td><td>show&nbsp;方法调用之后立即触发该事件。如果是通过点击某个作为触发器的元素，则此元素可以通过事件的relatedTarget&nbsp;属性进行访问。</td></tr><tr><td>shown.bs.modal</td><td>此事件在模态框已经显示出来（并且同时在 CSS 过渡效果完成）之后被触发。如果是通过点击某个作为触发器的元素，则此元素可以通过事件的&nbsp;relatedTarget&nbsp;属性进行访问。</td></tr><tr><td>hide.bs.modal</td><td>hide&nbsp;方法调用之后立即触发该事件。</td></tr><tr><td>hidden.bs.modal</td><td>此事件在模态框被隐藏（并且同时在 CSS 过渡效果完成）之后被触发。</td></tr><tr><td>loaded.bs.modal</td><td>从远端的数据源加载完数据之后触发该事件。</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 328px; display: none;\"></div></div><p>复制</p><pre><code class=\"language-js\" data-lang=\"js\" style=\"padding-right: 45px; color: rgb(51, 51, 51); display: inline-block;\"><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'#myModal'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\" style=\"color: rgb(204, 51, 0);\">'hidden.bs.modal'</span><span class=\"p\">,</span> <span class=\"kd\" style=\"color: rgb(0, 102, 153);\">function</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\" style=\"color: rgb(153, 153, 153);\">// do something...</span>\n<span class=\"p\">})</span></code></pre><p><br></p>", "title" : "模态框 modal.js", "page_number" : 0, "delete" : 0, "favor" : 45, "__v" : 0 }
{ "_id" : { "$oid" : "553ef19bf827363c1bb5f9a8" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-28T10:34:03.794+0800" }, "content" : "<h1>Modify Documents</h1><p>MongoDB provides the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;method to update the documents of a collection. The method accepts as its parameters:</p><ul><li>an update conditions document to match the documents to update,</li><li>an update operations document to specify the modification to perform, and</li><li>an options document.</li></ul><p>To specify the update condition, use the same structure and syntax as the query conditions.</p><p>By default,&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;updates a single document. To update multiple documents, use the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#multi-parameter\">multi</a>&nbsp;option.</p><h2>Update Specific Fields in a Document</h2><p>To change a field value, MongoDB provides&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/operator/update\">update operators</a>, such as&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/operator/update/set/#up._S_set\">$set</a>&nbsp;to modify values.</p><p>Some update operators, such as&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/operator/update/set/#up._S_set\">$set</a>, will create the field if the field does not exist. See the individual<a href=\"http://docs.mongodb.org/manual/reference/operator/update\">update operator</a>&nbsp;reference.</p><p>1</p><h3>Use update operators to change field values.</h3><p>For the document with&nbsp;item&nbsp;equal to&nbsp;\"MNO2\", use the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/operator/update/set/#up._S_set\">$set</a>&nbsp;operator to update the&nbsp;categoryfield and the&nbsp;details&nbsp;field to the specified values and the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/operator/update/currentDate/#up._S_currentDate\">$currentDate</a>&nbsp;operator to update the field&nbsp;lastModified&nbsp;with the current date.</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span> <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"MNO2\"</span> <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nx\">$set</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"apparel\"</span><span class=\"p\">,</span>\n        <span class=\"nx\">details</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"nx\">model</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"14Q3\"</span><span class=\"p\">,</span> <span class=\"nx\">manufacturer</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"XYZ Company\"</span> <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n      <span class=\"nx\">$currentDate</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"nx\">lastModified</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"kc\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span> <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation. A successful update of the document returns the following object:</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span> <span class=\"p\">})</span>\n</pre><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nMatched\">nMatched</a>&nbsp;field specifies the number of existing documents matched for the update, and<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nModified\">nModified</a>&nbsp;specifies the number of existing documents modified.</p><p>2</p><h3>Update an embedded field.</h3><p>To update a field within an embedded document, use the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/glossary/#term-dot-notation\">dot notation</a>. When using the dot notation, enclose the whole dotted field name in quotes.</p><p>The following updates the&nbsp;model&nbsp;field within the embedded&nbsp;details&nbsp;document.</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n  <span class=\"p\">{</span> <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"ABC1\"</span> <span class=\"p\">},</span>\n  <span class=\"p\">{</span> <span class=\"nx\">$set</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"details.model\"</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"14Q2\"</span> <span class=\"p\">}</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation. A successful update of the document returns the following object:</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span> <span class=\"p\">})</span>\n</pre><p>3</p><h3>Update multiple documents.</h3><p>By default, the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;method updates a single document. To update multiple documents, use the&nbsp;multi&nbsp;option in the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;method.</p><p>Update the&nbsp;category&nbsp;field to&nbsp;\"apparel\"&nbsp;and update the&nbsp;lastModified&nbsp;field to the current date for&nbsp;all&nbsp;documents that have&nbsp;category&nbsp;field equal to&nbsp;\"clothing\".</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n   <span class=\"p\">{</span> <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"clothing\"</span> <span class=\"p\">},</span>\n   <span class=\"p\">{</span>\n     <span class=\"nx\">$set</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"apparel\"</span> <span class=\"p\">},</span>\n     <span class=\"nx\">$currentDate</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"nx\">lastModified</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"kc\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span> <span class=\"p\">}</span>\n   <span class=\"p\">},</span>\n   <span class=\"p\">{</span> <span class=\"nx\">multi</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"kc\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation. A successful update of the document returns the following object:</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">3</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">3</span> <span class=\"p\">})</span>\n</pre><h2>Replace the Document</h2><p>To replace the entire content of a document except for the&nbsp;_id&nbsp;field, pass an entirely new document as the second argument to&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>.</p><p>The replacement document can have different fields from the original document. In the replacement document, you can omit the&nbsp;_id&nbsp;field since the&nbsp;_id&nbsp;field is immutable. If you do include the&nbsp;_id&nbsp;field, it must be the same value as the existing value.</p><p>1</p><h3>Replace a document.</h3><p>The following operation replaces the document with&nbsp;item&nbsp;equal to&nbsp;\"BE10\". The newly replaced document will only contain the the&nbsp;_id&nbsp;field and the fields in the replacement document.</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n   <span class=\"p\">{</span> <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"BE10\"</span> <span class=\"p\">},</span>\n   <span class=\"p\">{</span>\n     <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"BE05\"</span><span class=\"p\">,</span>\n     <span class=\"nx\">stock</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"nx\">size</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"S\"</span><span class=\"p\">,</span> <span class=\"nx\">qty</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">20</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"nx\">size</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"M\"</span><span class=\"p\">,</span> <span class=\"nx\">qty</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">5</span> <span class=\"p\">}</span> <span class=\"p\">],</span>\n     <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"apparel\"</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation. A successful update of the document returns the following object:</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span> <span class=\"p\">})</span>\n</pre><h2>upsert&nbsp;Option</h2><p>By default, if no document matches the update query, the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;method does nothing.</p><p>However, by specifying&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#upsert-parameter\">upsert: true</a>, the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">update()</a>&nbsp;method either updates matching document or documents, or inserts a new document using the update specification if no matching document exists.</p><p>1</p><h3>Specify&nbsp;upsert:&nbsp;true&nbsp;for the update replacement operation.</h3><p>When you specify&nbsp;upsert:&nbsp;true&nbsp;for an update operation to replace a document and no matching documents are found, MongoDB creates a new document using the equality conditions in the update conditions document, and replaces this document, except for the&nbsp;_id&nbsp;field if specified, with the update document.</p><p>The following operation either updates a matching document by replacing it with a new document or adds a new document if no matching document exists.</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n   <span class=\"p\">{</span> <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"TBD1\"</span> <span class=\"p\">},</span>\n   <span class=\"p\">{</span>\n     <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"TBD1\"</span><span class=\"p\">,</span>\n     <span class=\"nx\">details</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"model\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"14Q4\"</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"manufacturer\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"ABC Company\"</span> <span class=\"p\">},</span>\n     <span class=\"nx\">stock</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"size\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"S\"</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"qty\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">25</span> <span class=\"p\">}</span> <span class=\"p\">],</span>\n     <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"houseware\"</span>\n   <span class=\"p\">},</span>\n   <span class=\"p\">{</span> <span class=\"nx\">upsert</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"kc\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation, including whether the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">db.collection.update()</a>&nbsp;method modified an existing document or added a new document.</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"_id\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"nx\">ObjectId</span><span class=\"p\">(</span><span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"53dbd684babeaec6342ed6c7\"</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nMatched\">nMatched</a>&nbsp;field shows that the operation matched&nbsp;0&nbsp;documents.</p><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nUpserted\">nUpserted</a>&nbsp;of&nbsp;1&nbsp;shows that the update added a document.</p><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nModified\">nModified</a>&nbsp;of&nbsp;0&nbsp;specifies that no existing documents were updated.</p><p>The&nbsp;_id&nbsp;field shows the generated&nbsp;_id&nbsp;field for the added document.</p><p>2</p><h3>Specify&nbsp;upsert:&nbsp;true&nbsp;for the update specific fields operation.</h3><p>When you specify&nbsp;upsert:&nbsp;true&nbsp;for an update operation that modifies specific fields and no matching documents are found, MongoDB creates a new document using the equality conditions in the update conditions document, and applies the modification as specified in the update document.</p><p>The following update operation either updates specific fields of a matching document or adds a new document if no matching document exists.</p><pre><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">inventory</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">(</span>\n   <span class=\"p\">{</span> <span class=\"nx\">item</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"TBD2\"</span> <span class=\"p\">},</span>\n   <span class=\"p\">{</span>\n     <span class=\"nx\">$set</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">details</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"p\">{</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"model\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"14Q3\"</span><span class=\"p\">,</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"manufacturer\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"IJK Co.\"</span> <span class=\"p\">},</span>\n        <span class=\"nx\">category</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"houseware\"</span>\n     <span class=\"p\">}</span>\n   <span class=\"p\">},</span>\n   <span class=\"p\">{</span> <span class=\"nx\">upsert</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"kc\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre><p>The update operation returns a&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult\">WriteResult</a>&nbsp;object which contains the status of the operation, including whether the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">db.collection.update()</a>&nbsp;method modified an existing document or added a new document.</p><pre><span class=\"nx\">WriteResult</span><span class=\"p\">({</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nMatched\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nUpserted\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"nModified\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"mi\" style=\"color: rgb(32, 128, 80);\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"_id\"</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">:</span> <span class=\"nx\">ObjectId</span><span class=\"p\">(</span><span class=\"s2\" style=\"color: rgb(64, 112, 160);\">\"53dbd7c8babeaec6342ed6c8\"</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nMatched\">nMatched</a>&nbsp;field shows that the operation matched&nbsp;0&nbsp;documents.</p><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nUpserted\">nUpserted</a>&nbsp;of&nbsp;1&nbsp;shows that the update added a document.</p><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/WriteResult/#WriteResult.nModified\">nModified</a>&nbsp;of&nbsp;0&nbsp;specifies that no existing documents were updated.</p><p>The&nbsp;_id&nbsp;field shows the generated&nbsp;_id&nbsp;field for the added document.</p><h2>Additional Examples and Methods</h2><p>For more examples, see&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#update-method-examples\">Update examples</a>&nbsp;in the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.update/#db.collection.update\">db.collection.update()</a>&nbsp;reference page.</p><p>The&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.findAndModify/#db.collection.findAndModify\">db.collection.findAndModify()</a>&nbsp;and the&nbsp;<a href=\"http://docs.mongodb.org/manual/reference/method/db.collection.save/#db.collection.save\">db.collection.save()</a>&nbsp;method can also modify existing documents or insert a new one. See the individual reference pages for the methods for more information and examples.</p><p><br></p>", "title" : "MongoDB CURD Operations -- Modify", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "553f5d374ecffc641cc877fb" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-28T18:13:11.925+0800" }, "content" : "<h2>RegExp 对象</h2><p>RegExp 对象表示正则表达式，它是对字符串执行模式匹配的强大工具。</p><h3>直接量语法</h3><pre>/pattern/attributes</pre><h3>创建 RegExp 对象的语法：</h3><pre>new RegExp(<i style=\"margin: 0px; padding: 0px; border: 0px;\">pattern</i>, <i style=\"margin: 0px; padding: 0px; border: 0px;\">attributes</i>);</pre><h3>参数</h3><p>参数&nbsp;<i>pattern</i>&nbsp;是一个字符串，指定了正则表达式的模式或其他正则表达式。</p><p>参数&nbsp;<i>attributes</i>&nbsp;是一个可选的字符串，包含属性 \"g\"、\"i\" 和 \"m\"，分别用于指定全局匹配、区分大小写的匹配和多行匹配。ECMAScript 标准化之前，不支持 m 属性。如果&nbsp;<i>pattern</i>&nbsp;是正则表达式，而不是字符串，则必须省略该参数。</p><h3>返回值</h3><p>一个新的 RegExp 对象，具有指定的模式和标志。如果参数&nbsp;<i>pattern</i>&nbsp;是正则表达式而不是字符串，那么 RegExp() 构造函数将用与指定的 RegExp 相同的模式和标志创建一个新的 RegExp 对象。</p><p>如果不用 new 运算符，而将 RegExp() 作为函数调用，那么它的行为与用 new 运算符调用时一样，只是当&nbsp;<i>pattern</i>&nbsp;是正则表达式时，它只返回&nbsp;<i>pattern</i>，而不再创建一个新的 RegExp 对象。</p><h3>抛出</h3><p>SyntaxError - 如果&nbsp;<i>pattern</i>&nbsp;不是合法的正则表达式，或&nbsp;<i>attributes</i>&nbsp;含有 \"g\"、\"i\" 和 \"m\" 之外的字符，抛出该异常。</p><p>TypeError - 如果&nbsp;<i>pattern</i>&nbsp;是 RegExp 对象，但没有省略&nbsp;<i>attributes</i>&nbsp;参数，抛出该异常。</p><h2>修饰符</h2><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>修饰符</td><td>描述</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_i.asp\">i</a></td><td>执行对大小写不敏感的匹配。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_g.asp\">g</a></td><td>执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td></tr><tr><td>m</td><td>执行多行匹配。</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"></div></div><h2>方括号</h2><p>方括号用于查找某个范围内的字符：</p><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>表达式</td><td>描述</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_charset.asp\">[abc]</a></td><td>查找方括号之间的任何字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_charset_not.asp\">[^abc]</a></td><td>查找任何不在方括号之间的字符。</td></tr><tr><td>[0-9]</td><td>查找任何从 0 至 9 的数字。</td></tr><tr><td>[a-z]</td><td>查找任何从小写 a 到小写 z 的字符。</td></tr><tr><td>[A-Z]</td><td>查找任何从大写 A 到大写 Z 的字符。</td></tr><tr><td>[A-z]</td><td>查找任何从大写 A 到小写 z 的字符。</td></tr><tr><td>[adgk]</td><td>查找给定集合内的任何字符。</td></tr><tr><td>[^adgk]</td><td>查找给定集合外的任何字符。</td></tr><tr><td>(red|blue|green)</td><td>查找任何指定的选项。</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"></div></div><h2>元字符</h2><p>元字符（Metacharacter）是拥有特殊含义的字符：</p><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>元字符</td><td>描述</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_dot.asp\">.</a></td><td>查找单个字符，除了换行和行结束符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_wordchar.asp\">\\w</a></td><td>查找单词字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_wordchar_non.asp\">\\W</a></td><td>查找非单词字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_digit.asp\">\\d</a></td><td>查找数字。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_digit_non.asp\">\\D</a></td><td>查找非数字字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_whitespace.asp\">\\s</a></td><td>查找空白字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_whitespace_non.asp\">\\S</a></td><td>查找非空白字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_begin.asp\">\\b</a></td><td>匹配单词边界。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_begin_not.asp\">\\B</a></td><td>匹配非单词边界。</td></tr><tr><td>\\0</td><td>查找 NUL 字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_newline.asp\">\\n</a></td><td>查找换行符。</td></tr><tr><td>\\f</td><td>查找换页符。</td></tr><tr><td>\\r</td><td>查找回车符。</td></tr><tr><td>\\t</td><td>查找制表符。</td></tr><tr><td>\\v</td><td>查找垂直制表符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_octal.asp\">\\xxx</a></td><td>查找以八进制数 xxx 规定的字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_hex.asp\">\\xdd</a></td><td>查找以十六进制数 dd 规定的字符。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_unicode_hex.asp\">\\uxxxx</a></td><td>查找以十六进制数 xxxx 规定的 Unicode 字符。</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"></div></div><h2>量词</h2><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>量词</td><td>描述</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_onemore.asp\">n+</a></td><td>匹配任何包含至少一个 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_zeromore.asp\">n*</a></td><td>匹配任何包含零个或多个 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_zeroone.asp\">n?</a></td><td>匹配任何包含零个或一个 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_nx.asp\">n{X}</a></td><td>匹配包含 X 个 n 的序列的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_nxy.asp\">n{X,Y}</a></td><td>匹配包含 X 或 Y 个 n 的序列的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_nxcomma.asp\">n{X,}</a></td><td>匹配包含至少 X 个 n 的序列的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_ndollar.asp\">n$</a></td><td>匹配任何结尾为 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_ncaret.asp\">^n</a></td><td>匹配任何开头为 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_nfollow.asp\">?=n</a></td><td>匹配任何其后紧接指定字符串 n 的字符串。</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_nfollow_not.asp\">?!n</a></td><td>匹配任何其后没有紧接指定字符串 n 的字符串。</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"></div></div><h2>RegExp 对象属性</h2><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>属性</td><td>描述</td><td>FF</td><td>IE</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_global.asp\">global</a></td><td>RegExp 对象是否具有标志 g。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_ignorecase.asp\">ignoreCase</a></td><td>RegExp 对象是否具有标志 i。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_lastindex_regexp.asp\">lastIndex</a></td><td>一个整数，标示开始下一次匹配的字符位置。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_multiline_regexp.asp\">multiline</a></td><td>RegExp 对象是否具有标志 m。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_source_regexp.asp\">source</a></td><td>正则表达式的源文本。</td><td>1</td><td>4</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"></div></div><h2>RegExp 对象方法</h2><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>方法</td><td>描述</td><td>FF</td><td>IE</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_regexp_compile.asp\">compile</a></td><td>编译正则表达式。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_exec_regexp.asp\">exec</a></td><td>检索字符串中指定的值。返回找到的值，并确定其位置。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_test_regexp.asp\">test</a></td><td>检索字符串中指定的值。返回 true 或 false。</td><td>1</td><td>4</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\"></div></div><h2>支持正则表达式的 String 对象的方法</h2><div class=\"simditor-table\"><table><colgroup><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"><col width=\"NaN%\"></colgroup><tbody><tr><td>方法</td><td>描述</td><td>FF</td><td>IE</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_search.asp\">search</a></td><td>检索与正则表达式相匹配的值。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_match.asp\">match</a></td><td>找到一个或多个正则表达式的匹配。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_replace.asp\">replace</a></td><td>替换与正则表达式匹配的子串。</td><td>1</td><td>4</td></tr><tr><td><a href=\"http://www.w3school.com.cn/jsref/jsref_split.asp\">split</a></td><td>把字符串分割为字符串数组。</td><td>1</td><td>4</td></tr></tbody></table><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"left: 375px; display: none;\"><br></div></div><p><br></p>", "title" : "JavaScript RegExp 对象", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "5540470597d4471801e54724" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-29T10:50:45.104+0800" }, "content" : "<p><strong><font>第一种是比较常规的方法</font></strong></p><p><strong>思路：</strong></p><p>1.构建一个新的数组存放结果</p><p>2.for循环中每次从原数组中取出一个元素，用这个元素循环与结果数组对比</p><p>3.若结果数组中没有该元素，则存到结果数组中</p><pre class=\"lang-js\" data-lang=\"js\">Array.prototype.unique1 = function(){&nbsp;\n&nbsp;&nbsp;var res = [this[0]];\n&nbsp;&nbsp;for(var i = 1; i &lt; this.length; i++){&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;var repeat = false;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;for(var j = 0; j &lt; res.length; j++){&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this[i] == res[j]){&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;repeat = true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if(!repeat){&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res.push(this[i]);&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;return res;\n}\nvar arr = [1, 'a', 'a', 'b', 'd', 'e', 'e', 1, 0]\nalert(arr.unique1());</pre><p><strong><font>第二种方法比上面的方法效率要高</font></strong></p><p><strong>思路：</strong></p><p>1.先将原数组进行排序</p><p>2.检查原数组中的第i个元素 与 结果数组中的最后一个元素是否相同，因为已经排序，所以重复元素会在相邻位置</p><p>3.如果不相同，则将该元素存入结果数组中</p><pre class=\"lang-js\" data-lang=\"js\">Array.prototype.unique2 = function(){&nbsp;\n&nbsp;&nbsp;this.sort();&nbsp;//先排序&nbsp;\n&nbsp;&nbsp;var res = [this[0]];&nbsp;\n&nbsp;&nbsp;for(var i = 1; i &lt; this.length; i++){&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if(this[i] !== res[res.length - 1]){&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res.push(this[i]);&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;return res;\n}\nvar arr = [1, 'a', 'a', 'b', 'd', 'e', 'e', 1, 0]\nalert(arr.unique2());</pre><p>第二种方法也会有一定的局限性，因为在去重前进行了排序，所以最后返回的去重结果也是排序后的。如果要求不改变数组的顺序去重，那这种方法便不可取了。</p><p><strong><font>第三种方法（推荐使用）</font></strong></p><p><strong>思路：</strong></p><p>1.创建一个新的数组存放结果</p><p>2.创建一个空对象</p><p>3.for循环时，每次取出一个元素与对象进行对比，如果这个元素不重复，则把它存放到结果数组中，同时把这个元素的内容作为对象的一个属性，并赋值为1，存入到第2步建立的对象中。</p><p>说明：至于如何对比，就是每次从原数组中取出一个元素，然后到对象中去访问这个属性，如果能访问到值，则说明重复。</p><pre class=\"lang-js selected\" data-lang=\"js\">Array.prototype.unique3 = function(){&nbsp;\n&nbsp;&nbsp;var res = [];&nbsp;\n&nbsp;&nbsp;var json = {};&nbsp;\n&nbsp;&nbsp;for(var i = 0; i &lt; this.length; i++){&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if(!json[this[i]]){&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res.push(this[i]);&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json[this[i]] = 1;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;return res;\n}\nvar arr = [112,112,34,'你好',112,112,34,'你好','str','str1'];\nalert(arr.unique3());</pre><p><br></p>", "title" : "js数组去重的三种常用方法总结", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55418582d17bf79c0c658bd6" }, "category" : "WebStorm", "create_time" : { "$date" : "2015-04-30T09:29:38.209+0800" }, "content" : "<p>ctrl+/ 单行注释</p><p>ctrl+shift+/ 块注释</p><p>ctrl+shift+ +/- 展开/折叠</p><p>ctrl+alt+L 格式化代码</p><p>ctrl+shift+ up/down 上下移动句子</p><p>Alt+回车 导入包,自动修正</p><p>Ctrl+N 查找类</p><p>Ctrl+Shift+N 查找文件</p><p>Ctrl+Alt+L 格式化代码</p><p>Ctrl+Alt+O 优化导入的类和包</p><p>Alt+Insert 生成代码(如get,set方法,构造函数等)</p><p>Ctrl+E或者Alt+Shift+C 最近更改的代码</p><p>Ctrl+R 替换文本</p><p>Ctrl+F 查找文本</p><p>Ctrl+Shift+Space 自动补全代码</p><p>Ctrl+空格 代码提示</p><p>Ctrl+Alt+Space 类名或接口名提示</p><p>Ctrl+P 方法参数提示</p><p>Ctrl+Shift+Alt+N 查找类中的方法或变量</p><p>Alt+Shift+C 对比最近修改的代码</p><p>Shift+F6 重构-重命名</p><p>Ctrl+Shift+先上键</p><p>Ctrl+X 删除行</p><p>Ctrl+D 复制行</p><p>Ctrl+/ 或 Ctrl+Shift+/ 注释（// 或者/*...*/ ）</p><p>Ctrl+J 自动代码</p><p>Ctrl+E 最近打开的文件</p><p>Ctrl+H 显示类结构图</p><p>Ctrl+Q 显示注释文档</p><p>Alt+F1 查找代码所在位置</p><p>Alt+1 快速打开或隐藏工程面板</p><p>Ctrl+Alt+ left/right 返回至上次浏览的位置</p><p>Alt+ left/right 切换代码视图</p><p>Alt+ Up/Down 在方法间快速移动定位</p><p>Ctrl+Shift+Up/Down 代码向上/下移动。</p><p>F2 或Shift+F2 高亮错误或警告快速定位</p><p>代码标签输入完成后，按Tab，生成代码。</p><p>选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。</p><p>Ctrl+W 选中代码，连续按会有其他效果</p><p>选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。</p><p>Ctrl+Up/Down 光标跳转到第一行或最后一行下</p><p>Ctrl+B 快速打开光标处的类或方法</p><p><br></p>", "title" : " WebStorm 快捷键", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55418c14d17bf79c0c658bd7" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-30T09:57:40.191+0800" }, "content" : "<h2><a href=\"http://www.example.com\" target=\"_blank\" class=\"\">https://github.com/airbnb/javascript</a><br></h2><h2>Types</h2><ul><li><p><strong>Primitives</strong>: When you access a primitive type you work directly on its value.</p><ul><li>string</li><li>number</li><li>boolean</li><li>null</li><li>undefined</li></ul><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> foo <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> bar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> foo;\n\nbar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">9</span>;\n\n<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(foo, bar); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; 1, 9</span></pre><br></li><li><p><strong>Complex</strong>: When you access a complex type you work on a reference to its value.</p><ul><li>object</li><li>array</li><li>function</li></ul><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> foo <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>];\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> bar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> foo;\n\nbar[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">9</span>;\n\n<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(foo[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>], bar[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>]); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; 9, 9</span></pre></li></ul><p><br></p><h2>References</h2><ul><li><p>Use&nbsp;const&nbsp;for all of your references; avoid using&nbsp;var.</p><blockquote><p>Why? This ensures that you can't reassign your references (mutation), which can lead to bugs and difficult to comprehend code.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> a <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> b <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> a <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> b <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>;</pre><br></li><li><p>If you must mutate references, use&nbsp;let&nbsp;instead of&nbsp;var.</p><blockquote><p>Why?&nbsp;let&nbsp;is block-scoped rather than function-scoped like&nbsp;var.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> count <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>) {\n    count <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good, use the let.</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> count <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>) {\n    count <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  }</pre><br></li><li><p>Note that both&nbsp;let&nbsp;and&nbsp;const&nbsp;are block-scoped.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// const and let only exist in the blocks they are defined in.</span>\n{\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> a <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> b <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n}\n<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(a); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ReferenceError</span>\n<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(b); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ReferenceError</span></pre></li></ul><p><br></p><h2>Objects</h2><ul><li><p>Use the literal syntax for object creation.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> item <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Object</span>();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> item <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {};</pre><br></li><li><p>Don't use&nbsp;<a href=\"http://es5.github.io/#x7.6.1\">reserved words</a>&nbsp;as keys. It won't work in IE8.&nbsp;<a href=\"https://github.com/airbnb/javascript/issues/61\">More info</a>.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superman <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> { clark<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>kent<span class=\"pl-pds\">'</span></span> },\n  private<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superman <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  defaults<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> { clark<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>kent<span class=\"pl-pds\">'</span></span> },\n  hidden<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>\n};</pre><br></li><li><p>Use readable synonyms in place of reserved words.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superman <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  class<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>alien<span class=\"pl-pds\">'</span></span>\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superman <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  klass<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>alien<span class=\"pl-pds\">'</span></span>\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superman <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  type<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>alien<span class=\"pl-pds\">'</span></span>\n};</pre><br><p></p></li><li><p>Use computed property names when creating objects with dynamic property names.</p><blockquote><p>Why? They allow you to define all the properties of an object in one place.</p></blockquote><pre>  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getKey</span>(<span class=\"pl-smi\">k</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span>a key named <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>k<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    id<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">5</span>,\n    name<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>San Francisco<span class=\"pl-pds\">'</span></span>,\n  };\n  obj[getKey(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>enabled<span class=\"pl-pds\">'</span></span>)] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    id<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">5</span>,\n    name<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>San Francisco<span class=\"pl-pds\">'</span></span>,\n    [getKey(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>enabled<span class=\"pl-pds\">'</span></span>)]<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>,\n  };</pre><br><p></p></li><li><p>Use object method shorthand.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> atom <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  value<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>,\n\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">addValue</span>: <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> (<span class=\"pl-smi\">value</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> atom.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">value</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> value;\n  },\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> atom <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  value<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>,\n\n  addValue(value) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> atom.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">value</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> value;\n  },\n};</pre><br><p></p></li><li><p>Use property value shorthand.</p><blockquote><p>Why? It is shorter to write and descriptive.</p></blockquote><pre>  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> lukeSkywalker <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Luke Skywalker<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    lukeSkywalker<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> lukeSkywalker\n  };\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    lukeSkywalker\n  };</pre><br></li><li><p>Group your shorthand properties at the beginning of your object declaration.</p><blockquote><p>Why? It's easier to tell which properties are using the shorthand.</p></blockquote><pre>  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> anakinSkywalker <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Anakin Skywalker<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> lukeSkywalker <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Luke Skywalker<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    episodeOne<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>,\n    twoJedisWalkIntoACantina<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>,\n    lukeSkywalker,\n    episodeThree<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>,\n    mayTheFourth<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">4</span>,\n    anakinSkywalker,\n  };\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    lukeSkywalker,\n    anakinSkywalker,\n    episodeOne<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>,\n    twoJedisWalkIntoACantina<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>,\n    episodeThree<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>,\n    mayTheFourth<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">4</span>,\n  };</pre></li></ul><p><br></p><h2>Arrays</h2><ul><li><p>Use the literal syntax for array creation.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Array</span>();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [];</pre><br></li><li><p>Use Array#push instead of direct assignment to add items to an array.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> someStack <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [];\n\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\nsomeStack[someStack.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">length</span>] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>abracadabra<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\nsomeStack.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">push</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>abracadabra<span class=\"pl-pds\">'</span></span>);</pre><br><p></p></li><li><p>Use array spreads&nbsp;...&nbsp;to copy arrays.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> len <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> items.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">length</span>;\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> itemsCopy <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [];\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> i;\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">for</span> (i <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>; i <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&lt;</span> len; i<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">++</span>) {\n  itemsCopy[i] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> items[i];\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> itemsCopy <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [...items];</pre><br></li><li><p>To convert an array-like object to an array, use Array#from.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> foo <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">document</span>.querySelectorAll(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.foo<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> nodes <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Array</span>.from(foo);</pre></li></ul><p><br></p>", "title" : "Airbnb JavaScript Style Guide(1)", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55418c9ad17bf79c0c658bd9" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-30T09:59:54.018+0800" }, "content" : "<h2>Destructuring</h2><ul><li><p>Use object destructuring when accessing and using multiple properties of an object.</p><blockquote><p>Why? Destructuring saves you from creating temporary references for those properties.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getFullName</span>(<span class=\"pl-smi\">user</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> firstName <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> user.firstName;\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> lastName <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> user.lastName;\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span><span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>firstName<span class=\"pl-pse\">}</span></span> <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>lastName<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getFullName</span>(<span class=\"pl-smi\">obj</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> { firstName, lastName } <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> obj;\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span><span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>firstName<span class=\"pl-pse\">}</span></span> <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>lastName<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// best</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getFullName</span>({ <span class=\"pl-smi\">firstName</span>, <span class=\"pl-smi\">lastName</span> }) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span><span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>firstName<span class=\"pl-pse\">}</span></span> <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>lastName<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>;\n  }</pre><br></li><li><p>Use array destructuring.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> arr <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">4</span>];\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> first <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> arr[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>];\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> second <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> arr[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>];\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> [first, second] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> arr;</pre><br></li><li><p>Use object destructuring for multiple return values, not array destructuring.</p><blockquote><p>Why? You can add new properties over time or change the order of things without breaking call sites.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">processInput</span>(<span class=\"pl-smi\">input</span>) {\n    <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// then a miracle occurs</span>\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> [left, right, top, bottom];\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// the caller needs to think about the order of return data</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> [left, __, top] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> processInput(input);\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">processInput</span>(<span class=\"pl-smi\">input</span>) {\n    <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// then a miracle occurs</span>\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> { left, right, top, bottom };\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// the caller selects only the data they need</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> { left, right } <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> processInput(input);</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Strings</h2><ul><li><p>Use single quotes&nbsp;''&nbsp;for strings.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">\"</span>Capt. Janeway<span class=\"pl-pds\">\"</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Capt. Janeway<span class=\"pl-pds\">'</span></span>;</pre><br></li><li><p>Strings longer than 80 characters should be written across multiple lines using string concatenation.</p></li><li><p>Note: If overused, long strings with concatenation could impact performance.&nbsp;<a href=\"http://jsperf.com/ya-string-concat\">jsPerf</a>&nbsp;&amp;&nbsp;<a href=\"https://github.com/airbnb/javascript/issues/40\">Discussion</a>.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> errorMessage <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> errorMessage <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>This is a super long error that was thrown because \\</span>\n<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\">of Batman. When you stop to think about how Batman had anything to do \\</span>\n<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\">with this, you would get nowhere \\</span>\n<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\">fast.<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> errorMessage <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>This is a super long error that was thrown because <span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>\n  <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>of Batman. When you stop to think about how Batman had anything to do <span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>\n  <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>with this, you would get nowhere fast.<span class=\"pl-pds\">'</span></span>;</pre><br><p></p></li><li><p>When programmatically building up strings, use template strings instead of concatenation.</p><blockquote><p>Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">sayHi</span>(<span class=\"pl-smi\">name</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>How are you, <span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>?<span class=\"pl-pds\">'</span></span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">sayHi</span>(<span class=\"pl-smi\">name</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> [<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>How are you, <span class=\"pl-pds\">'</span></span>, name, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>?<span class=\"pl-pds\">'</span></span>].<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">join</span>();\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">sayHi</span>(<span class=\"pl-smi\">name</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span>How are you, <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span>name<span class=\"pl-pse\">}</span></span>?<span class=\"pl-pds\">`</span></span>;\n  }</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Functions</h2><ul><li><p>Use function declarations instead of function expressions.</p><blockquote><p>Why? Function declarations are named, so they're easier to identify in call stacks. Also, the whole body of a function declaration is hoisted, whereas only the reference of a function expression is hoisted. This rule makes it possible to always use&nbsp;<a href=\"https://github.com/airbnb/javascript#arrow-functions\">Arrow Functions</a>&nbsp;in place of function expressions.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">foo</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> () {\n  };\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">foo</span>() {\n  }</pre><br></li><li><p>Function expressions:</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// immediately-invoked function expression (IIFE)</span>\n(() <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Welcome to the Internet. Please follow me.<span class=\"pl-pds\">'</span></span>);\n})();</pre><br></li><li><p>Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears.</p></li><li><p><strong>Note:</strong>&nbsp;ECMA-262 defines a&nbsp;block&nbsp;as a list of statements. A function declaration is not a statement.&nbsp;<a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf#page=97\">Read ECMA-262's note on this issue</a>.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (currentUser) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">test</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Nope.<span class=\"pl-pds\">'</span></span>);\n  }\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> test;\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (currentUser) {\n  test <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> () <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Yup.<span class=\"pl-pds\">'</span></span>);\n  };\n}</pre><br></li><li><p>Never name a parameter&nbsp;arguments. This will take precedence over the&nbsp;arguments&nbsp;object that is given to every function scope.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">nope</span>(<span class=\"pl-smi\">name</span>, <span class=\"pl-smi\">options</span>, <span class=\"pl-smi\">arguments</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">yup</span>(<span class=\"pl-smi\">name</span>, <span class=\"pl-smi\">options</span>, <span class=\"pl-smi\">args</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}</pre><br><p></p></li><li><p>Never use&nbsp;arguments, opt to use rest syntax&nbsp;...&nbsp;instead.</p><blockquote><p>Why?&nbsp;...&nbsp;is explicit about which arguments you want pulled. Plus rest arguments are a real Array and not Array-like like&nbsp;arguments.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">concatenateAll</span>() {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> args <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Array</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">prototype</span>.slice.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">call</span>(arguments);\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> args.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">join</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>);\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">concatenateAll</span>(...<span class=\"pl-smi\">args</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> args.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">join</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>);\n  }</pre><br><p></p></li><li><p>Use default parameter syntax rather than mutating function arguments.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// really bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">handleThings</span>(<span class=\"pl-smi\">opts</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// No! We shouldn't mutate function arguments.</span>\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// Double bad: if opts is falsy it'll be set to an object which may</span>\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// be what you want but it can introduce subtle bugs.</span>\n  opts <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> opts <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">||</span> {};\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// still bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">handleThings</span>(<span class=\"pl-smi\">opts</span>) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (opts <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">===</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">void</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>) {\n    opts <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {};\n  }\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">handleThings</span>(<span class=\"pl-smi\">opts</span> = {}) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...</span>\n}</pre><br></li><li><p>Avoid side effects with default parameters</p><blockquote><p>Why? They are confusing to reason about.</p></blockquote><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> b <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>;\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">count</span>(<span class=\"pl-smi\">a</span> = b++) {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(a);\n}\ncount();  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// 1</span>\ncount();  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// 2</span>\ncount(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// 3</span>\ncount();  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// 3</span></pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Arrow Functions</h2><ul><li><p>When you must use function expressions (as when passing an anonymous function), use arrow function notation.</p><blockquote><p>Why? It creates a version of the function that executes in the context of&nbsp;this, which is usually what you want, and is a more concise syntax.</p><p>Why not? If you have a fairly complicated function, you might move that logic out into its own function declaration.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> (<span class=\"pl-smi\">x</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> x;\n  });\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map((x) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> x\n  });</pre><br></li><li><p>If the function body fits on one line, feel free to omit the braces and use implicit return. Otherwise, add the braces and use a&nbsp;return&nbsp;statement.</p><blockquote><p>Why? Syntactic sugar. It reads well when multiple functions are chained together.</p><p>Why not? If you plan on returning an object.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map((x) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> x);\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map((x) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> { number<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> x };\n  });</pre><br></li><li><p>Always use parentheses around the arguments. Omitting the parentheses makes the functions less readable and only works for single arguments.</p><blockquote><p>Why? These declarations read better with parentheses. They are also required when you have multiple parameters so this enforces consistency.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map(x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> x);\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>].map((x) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> x);</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Constructors</h2><ul><li><p>Always use&nbsp;class. Avoid manipulating&nbsp;prototype&nbsp;directly.</p><blockquote><p>Why?&nbsp;class&nbsp;syntax is more concise and easier to reason about.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Queue</span>(<span class=\"pl-smi\">contents</span> = []) {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [...contents];\n  }\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Queue</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">prototype</span>.<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">pop</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> value <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>];\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">splice</span>(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>);\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> value;\n  }\n\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Queue</span> {\n    constructor(contents <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> []) {\n      <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [...contents];\n    }\n    <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">pop</span>() {\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> value <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>];\n      <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">splice</span>(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>);\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> value;\n    }\n  }</pre><br></li><li><p>Use&nbsp;extends&nbsp;for inheritance.</p><blockquote><p>Why? It is a built-in way to inherit prototype functionality without breaking&nbsp;instanceof.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> inherits <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">require</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>inherits<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">PeekableQueue</span>(<span class=\"pl-smi\">contents</span>) {\n    Queue.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">apply</span>(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>, contents);\n  }\n  inherits(PeekableQueue, Queue);\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">PeekableQueue</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">prototype</span>.<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">peek</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>];\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">PeekableQueue</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">extends</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Queue</span> {\n    peek() {\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._queue[<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>];\n    }\n  }</pre><br></li><li><p>Methods can return&nbsp;this&nbsp;to help with method chaining.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Jedi</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">prototype</span>.<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">jump</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n  <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.jumping <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n};\n\n<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Jedi</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">prototype</span>.<span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">setHeight</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">height</span>) {\n  <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">height</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> height;\n};\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> luke <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Jedi</span>();\nluke.jump(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; true</span>\nluke.setHeight(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">20</span>); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Jedi</span> {\n  jump() {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.jumping <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>;\n  }\n\n  setHeight(height) {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">height</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> height;\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>;\n  }\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> luke <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Jedi</span>();\n\nluke.jump()\n  .setHeight(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">20</span>);</pre><br></li><li><p>It's okay to write a custom toString() method, just make sure it works successfully and causes no side effects.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Jedi</span> {\n  contructor(options <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {}) {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> options.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">||</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>no name<span class=\"pl-pds\">'</span></span>;\n  }\n\n  getName() {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span>;\n  }\n\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">toString</span>() {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">`</span>Jedi - <span class=\"pl-s1\" style=\"color: rgb(51, 51, 51);\"><span class=\"pl-pse\">${</span><span class=\"pl-v\" style=\"color: rgb(0, 134, 179);\">this</span>.getName()<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">`</span></span>;\n  }\n}</pre><br></li></ul><p><br></p>", "title" : "Airbnb JavaScript Style Guide(2)", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55418cd7d17bf79c0c658bda" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-30T10:00:55.038+0800" }, "content" : "<h2>Modules</h2><ul><li><p>Always use modules (import/export) over a non-standard module system. You can always transpile to your preferred module system.</p><blockquote><p>Why? Modules are the future, let's start using the future now.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> AirbnbStyleGuide <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">require</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">module</span>.exports <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> AirbnbStyleGuide.es6;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ok</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> AirbnbStyleGuide <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> AirbnbStyleGuide.es6;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// best</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> { es6 } <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> es6;</pre><br></li><li><p>Do not use wildcard imports.</p><blockquote><p>Why? This makes sure you have a single default export.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> * <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">as</span> AirbnbStyleGuide <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> AirbnbStyleGuide <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>;</pre><br></li><li><p>And do not export directly from an import.</p><blockquote><p>Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// filename es6.js</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> { es6 as <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> } <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./airbnbStyleGuide<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// filename es6.js</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> { es6 } <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./AirbnbStyleGuide<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> es6;</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Iterators and Generators</h2><ul><li><p>Don't use iterators. Prefer JavaScript's higher-order functions like&nbsp;map()&nbsp;and&nbsp;reduce()&nbsp;instead of loops like&nbsp;for-of.</p><blockquote><p>Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side-effects.</p></blockquote><pre>  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> numbers <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">3</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">4</span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">5</span>];\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> num <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">of</span> numbers) {\n    sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+=</span> num;\n  }\n\n  sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">===</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">15</span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n  numbers.forEach((num) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+=</span> num);\n  sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">===</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">15</span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// best (use the functional force)</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> numbers.reduce((total, num) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> total <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> num, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>);\n  sum <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">===</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">15</span>;</pre><br></li><li><p>Don't use generators for now.</p><blockquote><p>Why? They don't transpile well to ES5.</p></blockquote></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Properties</h2><ul><li><p>Use dot notation when accessing properties.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> luke <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  jedi<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>,\n  age<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">28</span>,\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> isJedi <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> luke[<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>jedi<span class=\"pl-pds\">'</span></span>];\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> isJedi <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> luke.jedi;</pre><br></li><li><p>Use subscript notation&nbsp;[]&nbsp;when accessing properties with a variable.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> luke <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  jedi<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>,\n  age<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">28</span>,\n};\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getProp</span>(<span class=\"pl-smi\">prop</span>) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> luke[prop];\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> isJedi <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getProp(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>jedi<span class=\"pl-pds\">'</span></span>);</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Variables</h2><ul><li><p>Always use&nbsp;const&nbsp;to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\nsuperPower <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">SuperPower</span>();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> superPower <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">SuperPower</span>();</pre><br></li><li><p>Use one&nbsp;const&nbsp;declaration per variable.</p><blockquote><p>Why? It's easier to add new variable declarations this way, and you never have to worry about swapping out a&nbsp;;&nbsp;for a&nbsp;,&nbsp;or introducing punctuation-only diffs.</p></blockquote><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems(),\n    goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>,\n    dragonball <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// (compare to above, and try to spot the mistake)</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems(),\n    goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n    dragonball <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems();\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> dragonball <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>;</pre><br></li><li><p>Group all your&nbsp;consts and then group all your&nbsp;lets.</p><blockquote><p>Why? This is helpful when later on you might need to assign a variable depending on one of the previous assigned variables.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> i, len, dragonball,\n      items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems(),\n      goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> i;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems();\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> dragonball;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> len;\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> goSportsTeam <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> items <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getItems();\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> dragonball;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> i;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> length;</pre><br></li><li><p>Assign variables where you need them, but place them in a reasonable place.</p><blockquote><p>Why?&nbsp;let&nbsp;and&nbsp;const&nbsp;are block scoped and not function scoped.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">test</span>();\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>doing stuff..<span class=\"pl-pds\">'</span></span>);\n\n    <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//..other stuff..</span>\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getName();\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">===</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>) {\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n    }\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> name;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad - unnessary function call</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">hasName</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getName();\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!</span>hasName) {\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n    }\n\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.setFirstName(name);\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">hasName</span>) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!</span>hasName) {\n      <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n    }\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> getName();\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.setFirstName(name);\n\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n  }</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Hoisting</h2><ul><li><p>var&nbsp;declarations get hoisted to the top of their scope, their assignment does not.&nbsp;const&nbsp;and&nbsp;letdeclarations are blessed with a new concept called&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone_and_errors_with_let\">Temporal Dead Zones (TDZ)</a>. It's important to know why&nbsp;<a href=\"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15\">typeof is no longer safe</a>.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// we know this wouldn't work (assuming there</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// is no notDefined global variable)</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(notDefined); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; throws a ReferenceError</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// creating a variable declaration after you</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// reference the variable will work due to</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// variable hoisting. Note: the assignment</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// value of `true` is not hoisted.</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(declaredButNotAssigned); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> declaredButNotAssigned <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// The interpreter is hoisting the variable</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// declaration to the top of the scope,</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// which means our example could be rewritten as:</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">let</span> declaredButNotAssigned;\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(declaredButNotAssigned); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n  declaredButNotAssigned <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// using const and let</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(declaredButNotAssigned); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; throws a ReferenceError</span>\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">typeof</span> declaredButNotAssigned); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; throws a ReferenceError</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> declaredButNotAssigned <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n}</pre><br></li><li><p>Anonymous function expressions hoist their variable name, but not the function assignment.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(anonymous); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n\n  anonymous(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; TypeError anonymous is not a function</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">anonymous</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>anonymous function expression<span class=\"pl-pds\">'</span></span>);\n  };\n}</pre><br></li><li><p>Named function expressions hoist the variable name, not the function name or the function body.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(named); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n\n  named(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; TypeError named is not a function</span>\n\n  superPower(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; ReferenceError superPower is not defined</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">named</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">superPower</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Flying<span class=\"pl-pds\">'</span></span>);\n  };\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// the same is true when the function name</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// is the same as the variable name.</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(named); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; undefined</span>\n\n  named(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; TypeError named is not a function</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">var</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">named</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">named</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>named<span class=\"pl-pds\">'</span></span>);\n  }\n}</pre><br></li><li><p>Function declarations hoist their name and the function body.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">example</span>() {\n  superPower(); <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// =&gt; Flying</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">superPower</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Flying<span class=\"pl-pds\">'</span></span>);\n  }\n}</pre><br></li><li><p>For more information refer to&nbsp;<a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\">JavaScript Scoping &amp; Hoisting</a>&nbsp;by&nbsp;<a href=\"http://www.adequatelygood.com/\">Ben Cherry</a>.</p></li></ul><p><br></p>", "title" : "Airbnb JavaScript Style Guide(3)", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "55418df4acfdef98112dc61f" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-30T10:05:40.870+0800" }, "content" : "<h2>Comparison Operators &amp; Equality</h2><ul><li>Use&nbsp;===&nbsp;and&nbsp;!==&nbsp;over&nbsp;==&nbsp;and&nbsp;!=.</li><li><p>Comparison operators are evaluated using coercion with the&nbsp;ToBoolean&nbsp;method and always follow these simple rules:</p><ul><li><strong>Objects</strong>&nbsp;evaluate to&nbsp;<strong>true</strong></li><li><strong>Undefined</strong>&nbsp;evaluates to&nbsp;<strong>false</strong></li><li><strong>Null</strong>&nbsp;evaluates to&nbsp;<strong>false</strong></li><li><strong>Booleans</strong>&nbsp;evaluate to&nbsp;<strong>the value of the boolean</strong></li><li><strong>Numbers</strong>&nbsp;evaluate to&nbsp;<strong>false</strong>&nbsp;if&nbsp;<strong>+0, -0, or NaN</strong>, otherwise&nbsp;<strong>true</strong></li><li><strong>Strings</strong>&nbsp;evaluate to&nbsp;<strong>false</strong>&nbsp;if an empty string&nbsp;'', otherwise&nbsp;<strong>true</strong></li></ul><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> ([<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>]) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// true</span>\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// An array is an object, objects evaluate to true</span>\n}</pre><br></li><li><p>Use shortcuts.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!==</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (name) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (collection.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">length</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (collection.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">length</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}</pre><br></li><li><p>For more information see&nbsp;<a href=\"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108\">Truth Equality and JavaScript</a>&nbsp;by Angus Croll.</p></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Blocks</h2><ul><li><p>Use braces with all multi-line blocks.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (test)\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (test) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (test) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() { <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>; }\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n}</pre><br></li><li><p>If you're using multi-line blocks with&nbsp;if&nbsp;and&nbsp;else, put&nbsp;else&nbsp;on the same line as your&nbsp;if&nbsp;block's closing brace.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (test) {\n  thing1();\n  thing2();\n}\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">else</span> {\n  thing3();\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (test) {\n  thing1();\n  thing2();\n} <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">else</span> {\n  thing3();\n}</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Comments</h2><ul><li><p>Use&nbsp;/** ... */&nbsp;for multi-line comments. Include a description, specify types and values for all parameters and return values.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// make() returns a new element</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// based on the passed in tag name</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// @param {String} tag</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// @return {Element} element</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">make</span>(<span class=\"pl-smi\">tag</span>) {\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> element;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">/**</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * make() returns a new element</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * based on the passed in tag name</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> *</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * @param {String} tag</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * @return {Element} element</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> */</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">make</span>(<span class=\"pl-smi\">tag</span>) {\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> element;\n}</pre><br></li><li><p>Use&nbsp;//&nbsp;for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> active <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// is current tab</span>\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// is current tab</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> active <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getType</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>fetching type...<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// set the default type to 'no type'</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> type <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._type <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">||</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>no type<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> type;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">getType</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>fetching type...<span class=\"pl-pds\">'</span></span>);\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// set the default type to 'no type'</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> type <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._type <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">||</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>no type<span class=\"pl-pds\">'</span></span>;\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> type;\n}</pre><br></li><li><p>Prefixing your comments with&nbsp;FIXME&nbsp;or&nbsp;TODO&nbsp;helps other developers quickly understand if you're pointing out a problem that needs to be revisited, or if you're suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are&nbsp;FIXME -- need to figure this out&nbsp;or&nbsp;TODO -- need to implement.</p></li><li><p>Use&nbsp;// FIXME:&nbsp;to annotate problems.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Calculator</span> {\n  constructor() {\n    <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// FIXME: shouldn't use a global here</span>\n    total <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n  }\n}</pre><br></li><li><p>Use&nbsp;// TODO:&nbsp;to annotate solutions to problems.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Calculator</span> {\n  constructor() {\n    <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// TODO: total should be configurable by an options param</span>\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.total <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n  }\n}</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Whitespace</h2><ul><li><p>Use soft tabs set to 2 spaces.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n∙∙∙∙<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n∙<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n∙∙<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name;\n}</pre><br></li><li><p>Place 1 space before the leading brace.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">test</span>(){\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>);\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">test</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>);\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\ndog.set(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>attr<span class=\"pl-pds\">'</span></span>,{\n  age<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>1 year<span class=\"pl-pds\">'</span></span>,\n  breed<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Bernese Mountain Dog<span class=\"pl-pds\">'</span></span>\n});\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\ndog.set(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>attr<span class=\"pl-pds\">'</span></span>, {\n  age<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>1 year<span class=\"pl-pds\">'</span></span>,\n  breed<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Bernese Mountain Dog<span class=\"pl-pds\">'</span></span>\n});</pre><br></li><li><p>Place 1 space before the opening parenthesis in control statements (if,&nbsp;while&nbsp;etc.). Place no space before the argument list in function calls and declarations.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span>(isJedi) {\n  fight ();\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (isJedi) {\n  fight();\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">fight</span> () {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span> (<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Swooosh!<span class=\"pl-pds\">'</span></span>);\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">fight</span>() {\n  <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Swooosh!<span class=\"pl-pds\">'</span></span>);\n}</pre><br></li><li><p>Set off operators with spaces.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> x<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span>y<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">5</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> x <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> y <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">5</span>;</pre><br></li><li><p>End files with a single newline character.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">global</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n})(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>);</pre><br><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">global</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n})(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>);↵\n↵</pre><br><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">global</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n})(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>);↵</pre><br></li><li><p>Use indentation when making long method chains. Use a leading dot, which emphasizes that the line is a method call, not a new statement.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>#items<span class=\"pl-pds\">'</span></span>).<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.selected<span class=\"pl-pds\">'</span></span>).highlight().end().<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.open<span class=\"pl-pds\">'</span></span>).updateCount();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>#items<span class=\"pl-pds\">'</span></span>).\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.selected<span class=\"pl-pds\">'</span></span>).\n    highlight().\n    end().\n  <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.open<span class=\"pl-pds\">'</span></span>).\n    updateCount();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>#items<span class=\"pl-pds\">'</span></span>)\n  .<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.selected<span class=\"pl-pds\">'</span></span>)\n    .highlight()\n    .end()\n  .<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.open<span class=\"pl-pds\">'</span></span>)\n    .updateCount();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> leds <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> stage.selectAll(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.led<span class=\"pl-pds\">'</span></span>).<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">data</span>(data).enter().append(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>svg:svg<span class=\"pl-pds\">'</span></span>).class(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>led<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>)\n    .attr(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>width<span class=\"pl-pds\">'</span></span>, (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>).append(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>svg:g<span class=\"pl-pds\">'</span></span>)\n    .attr(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>transform<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>translate(<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>,<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>)<span class=\"pl-pds\">'</span></span>)\n    .<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">call</span>(tron.led);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> leds <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> stage.selectAll(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.led<span class=\"pl-pds\">'</span></span>)\n    .<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">data</span>(data)\n  .enter().append(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>svg:svg<span class=\"pl-pds\">'</span></span>)\n    .classed(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>led<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>)\n    .attr(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>width<span class=\"pl-pds\">'</span></span>, (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">*</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2</span>)\n  .append(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>svg:g<span class=\"pl-pds\">'</span></span>)\n    .attr(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>transform<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>translate(<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>,<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> (radius <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> margin) <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>)<span class=\"pl-pds\">'</span></span>)\n    .<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">call</span>(tron.led);</pre><br></li><li><p>Leave a blank line after blocks and before the next statement</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (foo) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> bar;\n}\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> baz;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (foo) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> bar;\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> baz;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  foo() {\n  },\n  bar() {\n  },\n};\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> obj;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> obj <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> obj;</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Commas</h2><ul><li><p>Leading commas:&nbsp;<strong>Nope.</strong></p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> story <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [\n    once\n  , upon\n  , aTime\n];\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> story <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [\n  once,\n  upon,\n  aTime,\n];\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Ada<span class=\"pl-pds\">'</span></span>\n  , lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Lovelace<span class=\"pl-pds\">'</span></span>\n  , birthYear<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1815</span>\n  , superPower<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>computers<span class=\"pl-pds\">'</span></span>\n};\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Ada<span class=\"pl-pds\">'</span></span>,\n  lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Lovelace<span class=\"pl-pds\">'</span></span>,\n  birthYear<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">1815</span>,\n  superPower<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>computers<span class=\"pl-pds\">'</span></span>,\n};</pre><br></li><li><p>Additional trailing comma:&nbsp;<strong>Yup.</strong></p><blockquote><p>Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don't have to worry about the&nbsp;<a href=\"https://github.com/airbnb/javascript/blob/master/es5/README.md#commas\">trailing comma problem</a>&nbsp;in legacy browsers.</p></blockquote><pre>  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad - git diff without trailing comma</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n       firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Florence<span class=\"pl-pds\">'</span></span>,\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">-</span>    lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Nightingale<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>    lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Nightingale<span class=\"pl-pds\">'</span></span>,\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>    inventorOf<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> [<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>coxcomb graph<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>mordern nursing<span class=\"pl-pds\">'</span></span>]\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good - git diff with trailing comma</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n       firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Florence<span class=\"pl-pds\">'</span></span>,\n       lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Nightingale<span class=\"pl-pds\">'</span></span>,\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>    inventorOf<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> [<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>coxcomb chart<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>mordern nursing<span class=\"pl-pds\">'</span></span>],\n  }\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Dana<span class=\"pl-pds\">'</span></span>,\n    lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Scully<span class=\"pl-pds\">'</span></span>\n  };\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> heroes <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Batman<span class=\"pl-pds\">'</span></span>,\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Superman<span class=\"pl-pds\">'</span></span>\n  ];\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hero <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n    firstName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Dana<span class=\"pl-pds\">'</span></span>,\n    lastName<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Scully<span class=\"pl-pds\">'</span></span>,\n  };\n\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> heroes <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> [\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Batman<span class=\"pl-pds\">'</span></span>,\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Superman<span class=\"pl-pds\">'</span></span>,\n  ];</pre><br></li></ul><p><br></p>", "title" : "Airbnb JavaScript Style Guide(4)", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "554190128fdece04175e74d6" }, "category" : "Javascript", "create_time" : { "$date" : "2015-04-30T10:14:42.028+0800" }, "content" : "<h2>Semicolons</h2><ul><li><p><strong>Yup.</strong></p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n(<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Skywalker<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> name\n})()\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n(() <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Skywalker<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> name;\n})();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good (guards against the function becoming an argument when two files with IIFEs are concatenated)</span>\n;(() <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> name <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Skywalker<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> name;\n})();</pre><br><p><a href=\"http://stackoverflow.com/a/7365214/1712802\">Read more</a>.</p></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Type Casting &amp; Coercion</h2><ul><li>Perform type coercion at the beginning of the statement.</li><li><p>Strings:</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//  =&gt; this.reviewScore = 9;</span>\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> totalScore <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.reviewScore <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> totalScore <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">String</span>(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.reviewScore);</pre><br></li><li><p>Use&nbsp;parseInt&nbsp;for Numbers and always with a radix for type casting.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> inputValue <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>4<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Number</span>(inputValue);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">+</span>inputValue;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> inputValue <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">parseInt</span>(inputValue);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Number</span>(inputValue);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">parseInt</span>(inputValue, <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">10</span>);</pre><br></li><li><p>If for whatever reason you are doing something wild and&nbsp;parseInt&nbsp;is your bottleneck and need to use Bitshift for&nbsp;<a href=\"http://jsperf.com/coercion-vs-casting/3\">performance reasons</a>, leave a comment explaining why and what you're doing.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">/**</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * parseInt was the reason my code was slow.</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * Bitshifting the String to coerce it to a</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> * Number made it a lot faster.</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\"> */</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> val <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> inputValue <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;</pre><br></li><li><p><strong>Note:</strong>&nbsp;Be careful when using bitshift operations. Numbers are represented as&nbsp;<a href=\"http://es5.github.io/#x4.3.19\">64-bit values</a>, but Bitshift operations always return a 32-bit integer (<a href=\"http://es5.github.io/#x11.7\">source</a>). Bitshift can lead to unexpected behavior for integer values larger than 32 bits.&nbsp;<a href=\"https://github.com/airbnb/javascript/issues/109\">Discussion</a>. Largest signed 32-bit Int is 2,147,483,647:</p><pre><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2147483647</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span> <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//=&gt; 2147483647</span>\n<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2147483648</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span> <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//=&gt; -2147483648</span>\n<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">2147483649</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">&gt;&gt;</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span> <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">//=&gt; -2147483647</span></pre><br></li><li><p>Booleans:</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> age <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">0</span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hasAge <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Boolean</span>(age);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hasAge <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">Boolean</span>(age);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> hasAge <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!!</span>age;</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Naming Conventions</h2><ul><li><p>Avoid single letter names. Be descriptive with your naming.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">q</span>() {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">query</span>() {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ..stuff..</span>\n}</pre><br></li><li><p>Use camelCase when naming objects, functions, and instances.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> OBJEcttsssss <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {};\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> this_is_my_object <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {};\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">c</span>() {}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> thisIsMyObject <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {};\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">thisIsMyFunction</span>() {}</pre><br></li><li><p>Use PascalCase when naming constructors or classes.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">user</span>(<span class=\"pl-smi\">options</span>) {\n  <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> options.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span>;\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> bad <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">user</span>({\n  name<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>nope<span class=\"pl-pds\">'</span></span>,\n});\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">User</span> {\n  constructor(options) {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> options.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">name</span>;\n  }\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> good <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">new</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">User</span>({\n  name<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>yup<span class=\"pl-pds\">'</span></span>,\n});</pre><br></li><li><p>Use a leading underscore&nbsp;_&nbsp;when naming private properties.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.__firstName__ <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Panda<span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.firstName_ <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Panda<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>._firstName <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>Panda<span class=\"pl-pds\">'</span></span>;</pre><br></li><li><p>Don't save references to&nbsp;this. Use arrow functions or Function#bind.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">foo</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> self <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(self);\n  };\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">foo</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> that <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>;\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(that);\n  };\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">foo</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> () <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=&gt;</span> {\n    <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">console</span><span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">.log</span>(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>);\n  };\n}</pre><br></li><li><p>If your file exports a single class, your filename should be exactly the name of the class.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// file contents</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">CheckBox</span> {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...</span>\n}\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> CheckBox;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// in some other file</span>\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> CheckBox <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./checkBox<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> CheckBox <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./check_box<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">import</span> CheckBox <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">from</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>./CheckBox<span class=\"pl-pds\">'</span></span>;</pre><br></li><li><p>Use camelCase when you export-default a function. Your filename should be identical to your function's name.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">makeStyleGuide</span>() {\n}\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> makeStyleGuide;</pre><br></li><li><p>Use PascalCase when you export a singleton / function library / bare object.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> AirbnbStyleGuide <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {\n  es6<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> {\n  }\n};\n\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">export</span> <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">default</span> AirbnbStyleGuide;</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Accessors</h2><ul><li>Accessor functions for properties are not required.</li><li><p>If you do make accessor functions use getVal() and setVal('hello').</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\ndragon.age();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\ndragon.getAge();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\ndragon.age(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">25</span>);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\ndragon.setAge(<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">25</span>);</pre><br></li><li><p>If the property is a boolean, use isVal() or hasVal().</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!</span>dragon.age()) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">if</span> (<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">!</span>dragon.hasAge()) {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">false</span>;\n}</pre><br></li><li><p>It's okay to create get() and set() functions, but be consistent.</p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">class</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">Jedi</span> {\n  constructor(options <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> {}) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> lightsaber <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> options.lightsaber <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">||</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>blue<span class=\"pl-pds\">'</span></span>;\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>.set(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>lightsaber<span class=\"pl-pds\">'</span></span>, lightsaber);\n  }\n\n  set(key, val) {\n    <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>[key] <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> val;\n  }\n\n  get(key) {\n    <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>[key];\n  }\n}</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Events</h2><ul><li><p>When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass a hash instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n$(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>).trigger(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>listingUpdated<span class=\"pl-pds\">'</span></span>, listing.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">id</span>);\n\n...\n\n$(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>).on(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>listingUpdated<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">e</span>, <span class=\"pl-smi\">listingId</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// do something with listingId</span>\n});</pre><br><p>prefer:</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n$(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>).trigger(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>listingUpdated<span class=\"pl-pds\">'</span></span>, { listingId <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> listing.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">id</span> });\n\n...\n\n$(<span class=\"pl-v\" style=\"color: rgb(237, 106, 67);\">this</span>).on(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>listingUpdated<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>(<span class=\"pl-smi\">e</span>, <span class=\"pl-smi\">data</span>) {\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// do something with data.listingId</span>\n});</pre><br><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p></li></ul><h2>jQuery</h2><ul><li><p>Prefix jQuery object variables with a&nbsp;$.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> sidebar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> $(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>);\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> $sidebar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> $(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>);</pre><br></li><li><p>Cache jQuery lookups.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">setSidebar</span>() {\n  $(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>).hide();\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n\n  $(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>).css({\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>background-color<span class=\"pl-pds\">'</span></span><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>pink<span class=\"pl-pds\">'</span></span>\n  });\n}\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n<span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span> <span class=\"pl-en\" style=\"color: rgb(121, 93, 163);\">setSidebar</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">const</span> $sidebar <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">=</span> $(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>);\n  $sidebar.hide();\n\n  <span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// ...stuff...</span>\n\n  $sidebar.css({\n    <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>background-color<span class=\"pl-pds\">'</span></span><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">:</span> <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>pink<span class=\"pl-pds\">'</span></span>\n  });\n}</pre><br></li><li><p>For DOM queries use Cascading&nbsp;$('.sidebar ul')&nbsp;or parent &gt; child&nbsp;$('.sidebar &gt; ul').&nbsp;<a href=\"http://jsperf.com/jquery-find-vs-context-sel/16\">jsPerf</a></p></li><li><p>Use&nbsp;find&nbsp;with scoped jQuery object queries.</p><pre><span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>ul<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>).hide();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// bad</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar<span class=\"pl-pds\">'</span></span>).<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>ul<span class=\"pl-pds\">'</span></span>).hide();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar ul<span class=\"pl-pds\">'</span></span>).hide();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n$(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>.sidebar &gt; ul<span class=\"pl-pds\">'</span></span>).hide();\n\n<span class=\"pl-c\" style=\"color: rgb(150, 152, 150);\">// good</span>\n$sidebar.<span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">find</span>(<span class=\"pl-s\" style=\"color: rgb(24, 54, 145);\"><span class=\"pl-pds\">'</span>ul<span class=\"pl-pds\">'</span></span>).hide();</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>ECMAScript 5 Compatibility</h2><ul><li>Refer to&nbsp;<a href=\"https://twitter.com/kangax/\">Kangax</a>'s ES5&nbsp;<a href=\"http://kangax.github.com/es5-compat-table/\">compatibility table</a>.</li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>ECMAScript 6 Styles</h2><p>This is a collection of links to the various es6 features.</p><ol><li><a href=\"https://github.com/airbnb/javascript#arrow-functions\">Arrow Functions</a></li><li><a href=\"https://github.com/airbnb/javascript#constructors\">Classes</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-object-shorthand\">Object Shorthand</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-object-concise\">Object Concise</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-computed-properties\">Object Computed Properties</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-template-literals\">Template Strings</a></li><li><a href=\"https://github.com/airbnb/javascript#destructuring\">Destructuring</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-default-parameters\">Default Parameters</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-rest\">Rest</a></li><li><a href=\"https://github.com/airbnb/javascript#es6-array-spreads\">Array Spreads</a></li><li><a href=\"https://github.com/airbnb/javascript#references\">Let and Const</a></li><li><a href=\"https://github.com/airbnb/javascript#iterators-and-generators\">Iterators and Generators</a></li><li><a href=\"https://github.com/airbnb/javascript#modules\">Modules</a></li></ol><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Testing</h2><ul><li><p><strong>Yup.</strong></p><pre><span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">function</span>() {\n  <span class=\"pl-k\" style=\"color: rgb(167, 29, 93);\">return</span> <span class=\"pl-c1\" style=\"color: rgb(0, 134, 179);\">true</span>;\n}</pre><br></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Performance</h2><ul><li><a href=\"http://kellegous.com/j/2013/01/26/layout-performance/\">On Layout &amp; Web Performance</a></li><li><a href=\"http://jsperf.com/string-vs-array-concat/2\">String vs Array Concat</a></li><li><a href=\"http://jsperf.com/try-catch-in-loop-cost\">Try/Catch Cost In a Loop</a></li><li><a href=\"http://jsperf.com/bang-function\">Bang Function</a></li><li><a href=\"http://jsperf.com/jquery-find-vs-context-sel/13\">jQuery Find vs Context, Selector</a></li><li><a href=\"http://jsperf.com/innerhtml-vs-textcontent-for-script-text\">innerHTML vs textContent for script text</a></li><li><a href=\"http://jsperf.com/ya-string-concat\">Long String Concatenation</a></li><li>Loading...</li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>Resources</h2><p><strong>Learning ES6</strong></p><ul><li><a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html\">Draft ECMA 2015 (ES6) Spec</a></li><li><a href=\"http://exploringjs.com/\">ExploringJS</a></li><li><a href=\"https://kangax.github.io/compat-table/es6/\">ES6 Compatibility Table</a></li><li><a href=\"http://es6-features.org/\">Comprehensive Overview of ES6 Features</a></li></ul><p><strong>Read This</strong></p><ul><li><a href=\"http://es5.github.com/\">Annotated ECMAScript 5.1</a></li></ul><p><strong>Tools</strong></p><ul><li>Code Style Linters<ul><li><a href=\"http://www.jshint.com/\">JSHint</a>&nbsp;-&nbsp;<a href=\"https://github.com/airbnb/javascript/blob/master/linters/jshintrc\">Airbnb Style .jshintrc</a></li><li><a href=\"https://github.com/jscs-dev/node-jscs\">JSCS</a>&nbsp;-&nbsp;<a href=\"https://github.com/jscs-dev/node-jscs/blob/master/presets/airbnb.json\">Airbnb Style Preset</a></li></ul></li></ul><p><strong>Other Styleguides</strong></p><ul><li><a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\">Google JavaScript Style Guide</a></li><li><a href=\"http://docs.jquery.com/JQuery_Core_Style_Guidelines\">jQuery Core Style Guidelines</a></li><li><a href=\"https://github.com/rwldrn/idiomatic.js/\">Principles of Writing Consistent, Idiomatic JavaScript</a></li></ul><p><strong>Other Styles</strong></p><ul><li><a href=\"https://gist.github.com/4135065\">Naming this in nested functions</a>&nbsp;- Christian Johansen</li><li><a href=\"https://github.com/airbnb/javascript/issues/52\">Conditional Callbacks</a>&nbsp;- Ross Allen</li><li><a href=\"http://sideeffect.kr/popularconvention/#javascript\">Popular JavaScript Coding Conventions on Github</a>&nbsp;- JeongHoon Byun</li><li><a href=\"http://benalman.com/news/2012/05/multiple-var-statements-javascript/\">Multiple var statements in JavaScript, not superfluous</a>&nbsp;- Ben Alman</li></ul><p><strong>Further Reading</strong></p><ul><li><a href=\"http://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/\">Understanding JavaScript Closures</a>&nbsp;- Angus Croll</li><li><a href=\"http://www.2ality.com/2013/06/basic-javascript.html\">Basic JavaScript for the impatient programmer</a>&nbsp;- Dr. Axel Rauschmayer</li><li><a href=\"http://youmightnotneedjquery.com/\">You Might Not Need jQuery</a>&nbsp;- Zack Bloom &amp; Adam Schwartz</li><li><a href=\"https://github.com/lukehoban/es6features\">ES6 Features</a>&nbsp;- Luke Hoban</li><li><a href=\"https://github.com/bendc/frontend-guidelines\">Frontend Guidelines</a>&nbsp;- Benjamin De Cock</li></ul><p><strong>Books</strong></p><ul><li><a href=\"http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742\">JavaScript: The Good Parts</a>&nbsp;- Douglas Crockford</li><li><a href=\"http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752\">JavaScript Patterns</a>&nbsp;- Stoyan Stefanov</li><li><a href=\"http://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X\">Pro JavaScript Design Patterns</a>&nbsp;- Ross Harmes and Dustin Diaz</li><li><a href=\"http://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309\">High Performance Web Sites: Essential Knowledge for Front-End Engineers</a>&nbsp;- Steve Souders</li><li><a href=\"http://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680\">Maintainable JavaScript</a>&nbsp;- Nicholas C. Zakas</li><li><a href=\"http://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X\">JavaScript Web Applications</a>&nbsp;- Alex MacCaw</li><li><a href=\"http://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273\">Pro JavaScript Techniques</a>&nbsp;- John Resig</li><li><a href=\"http://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595\">Smashing Node.js: JavaScript Everywhere</a>&nbsp;- Guillermo Rauch</li><li><a href=\"http://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X\">Secrets of the JavaScript Ninja</a>&nbsp;- John Resig and Bear Bibeault</li><li><a href=\"http://humanjavascript.com/\">Human JavaScript</a>&nbsp;- Henrik Joreteg</li><li><a href=\"http://superherojs.com/\">Superhero.js</a>&nbsp;- Kim Joar Bekkelund, Mads Mobæk, &amp; Olav Bjorkoy</li><li><a href=\"http://jsbooks.revolunet.com/\">JSBooks</a>&nbsp;- Julien Bouquillon</li><li><a href=\"http://manning.com/vinegar/\">Third Party JavaScript</a>&nbsp;- Ben Vinegar and Anton Kovalyov</li><li><a href=\"http://amzn.com/0321812182\">Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript</a>&nbsp;- David Herman</li></ul><p><strong>Blogs</strong></p><ul><li><a href=\"http://dailyjs.com/\">DailyJS</a></li><li><a href=\"http://javascriptweekly.com/\">JavaScript Weekly</a></li><li><a href=\"http://javascriptweblog.wordpress.com/\">JavaScript, JavaScript...</a></li><li><a href=\"http://weblog.bocoup.com/\">Bocoup Weblog</a></li><li><a href=\"http://www.adequatelygood.com/\">Adequately Good</a></li><li><a href=\"http://www.nczonline.net/\">NCZOnline</a></li><li><a href=\"http://perfectionkills.com/\">Perfection Kills</a></li><li><a href=\"http://benalman.com/\">Ben Alman</a></li><li><a href=\"http://dmitry.baranovskiy.com/\">Dmitry Baranovskiy</a></li><li><a href=\"http://dustindiaz.com/\">Dustin Diaz</a></li><li><a href=\"http://net.tutsplus.com/?s=javascript\">nettuts</a></li></ul><p><strong>Podcasts</strong></p><ul><li><a href=\"http://devchat.tv/js-jabber/\">JavaScript Jabber</a></li></ul><p><strong><a href=\"https://github.com/airbnb/javascript#table-of-contents\">⬆ back to top</a></strong></p><h2>In the Wild</h2><p>This is a list of organizations that are using this style guide. Send us a pull request or open an issue and we'll add you to the list.</p><ul><li><strong>Aan Zee</strong>:&nbsp;<a href=\"https://github.com/AanZee/javascript\">AanZee/javascript</a></li><li><strong>Adult Swim</strong>:&nbsp;<a href=\"https://github.com/adult-swim/javascript\">adult-swim/javascript</a></li><li><strong>Airbnb</strong>:&nbsp;<a href=\"https://github.com/airbnb/javascript\">airbnb/javascript</a></li><li><strong>American Insitutes for Research</strong>:&nbsp;<a href=\"https://github.com/AIRAST/javascript\">AIRAST/javascript</a></li><li><strong>Apartmint</strong>:&nbsp;<a href=\"https://github.com/apartmint/javascript\">apartmint/javascript</a></li><li><strong>Avalara</strong>:&nbsp;<a href=\"https://github.com/avalara/javascript\">avalara/javascript</a></li><li><strong>Compass Learning</strong>:&nbsp;<a href=\"https://github.com/compasslearning/javascript-style-guide\">compasslearning/javascript-style-guide</a></li><li><strong>DailyMotion</strong>:&nbsp;<a href=\"https://github.com/dailymotion/javascript\">dailymotion/javascript</a></li><li><strong>Digitpaint</strong>&nbsp;<a href=\"https://github.com/digitpaint/javascript\">digitpaint/javascript</a></li><li><strong>Evernote</strong>:&nbsp;<a href=\"https://github.com/evernote/javascript-style-guide\">evernote/javascript-style-guide</a></li><li><strong>ExactTarget</strong>:&nbsp;<a href=\"https://github.com/ExactTarget/javascript\">ExactTarget/javascript</a></li><li><strong>Flexberry</strong>:&nbsp;<a href=\"https://github.com/Flexberry/javascript-style-guide\">Flexberry/javascript-style-guide</a></li><li><strong>Gawker Media</strong>:&nbsp;<a href=\"https://github.com/gawkermedia/javascript\">gawkermedia/javascript</a></li><li><strong>GeneralElectric</strong>:&nbsp;<a href=\"https://github.com/GeneralElectric/javascript\">GeneralElectric/javascript</a></li><li><strong>GoodData</strong>:&nbsp;<a href=\"https://github.com/gooddata/gdc-js-style\">gooddata/gdc-js-style</a></li><li><strong>Grooveshark</strong>:&nbsp;<a href=\"https://github.com/grooveshark/javascript\">grooveshark/javascript</a></li><li><strong>How About We</strong>:&nbsp;<a href=\"https://github.com/howaboutwe/javascript\">howaboutwe/javascript</a></li><li><strong>InfoJobs</strong>:&nbsp;<a href=\"https://github.com/InfoJobs/JavaScript-Style-Guide\">InfoJobs/JavaScript-Style-Guide</a></li><li><strong>Intent Media</strong>:&nbsp;<a href=\"https://github.com/intentmedia/javascript\">intentmedia/javascript</a></li><li><strong>Jam3</strong>:&nbsp;<a href=\"https://github.com/Jam3/Javascript-Code-Conventions\">Jam3/Javascript-Code-Conventions</a></li><li><strong>JSSolutions</strong>:&nbsp;<a href=\"https://github.com/JSSolutions/javascript\">JSSolutions/javascript</a></li><li><strong>Kinetica Solutions</strong>:&nbsp;<a href=\"https://github.com/kinetica/javascript\">kinetica/javascript</a></li><li><strong>Mighty Spring</strong>:&nbsp;<a href=\"https://github.com/mightyspring/javascript\">mightyspring/javascript</a></li><li><strong>MinnPost</strong>:&nbsp;<a href=\"https://github.com/MinnPost/javascript\">MinnPost/javascript</a></li><li><strong>ModCloth</strong>:&nbsp;<a href=\"https://github.com/modcloth/javascript\">modcloth/javascript</a></li><li><strong>Money Advice Service</strong>:&nbsp;<a href=\"https://github.com/moneyadviceservice/javascript\">moneyadviceservice/javascript</a></li><li><strong>Muber</strong>:&nbsp;<a href=\"https://github.com/muber/javascript\">muber/javascript</a></li><li><strong>National Geographic</strong>:&nbsp;<a href=\"https://github.com/natgeo/javascript\">natgeo/javascript</a></li><li><strong>National Park Service</strong>:&nbsp;<a href=\"https://github.com/nationalparkservice/javascript\">nationalparkservice/javascript</a></li><li><strong>Nimbl3</strong>:&nbsp;<a href=\"https://github.com/nimbl3/javascript\">nimbl3/javascript</a></li><li><strong>Orion Health</strong>:&nbsp;<a href=\"https://github.com/orionhealth/javascript\">orionhealth/javascript</a></li><li><strong>Peerby</strong>:&nbsp;<a href=\"https://github.com/Peerby/javascript\">Peerby/javascript</a></li><li><strong>Razorfish</strong>:&nbsp;<a href=\"https://github.com/razorfish/javascript-style-guide\">razorfish/javascript-style-guide</a></li><li><strong>reddit</strong>:&nbsp;<a href=\"https://github.com/reddit/styleguide/tree/master/javascript\">reddit/styleguide/javascript</a></li><li><strong>REI</strong>:&nbsp;<a href=\"https://github.com/reidev/js-style-guide\">reidev/js-style-guide</a></li><li><strong>Ripple</strong>:&nbsp;<a href=\"https://github.com/ripple/javascript-style-guide\">ripple/javascript-style-guide</a></li><li><strong>SeekingAlpha</strong>:&nbsp;<a href=\"https://github.com/seekingalpha/javascript-style-guide\">seekingalpha/javascript-style-guide</a></li><li><strong>Shutterfly</strong>:&nbsp;<a href=\"https://github.com/shutterfly/javascript\">shutterfly/javascript</a></li><li><strong>StudentSphere</strong>:&nbsp;<a href=\"https://github.com/studentsphere/javascript\">studentsphere/javascript</a></li><li><strong>Target</strong>:&nbsp;<a href=\"https://github.com/target/javascript\">target/javascript</a></li><li><strong>TheLadders</strong>:&nbsp;<a href=\"https://github.com/TheLadders/javascript\">TheLadders/javascript</a></li><li><strong>T4R Technology</strong>:&nbsp;<a href=\"https://github.com/T4R-Technology/javascript\">T4R-Technology/javascript</a></li><li><strong>Userify</strong>:&nbsp;<a href=\"https://github.com/userify/javascript\">userify/javascript</a></li><li><strong>VoxFeed</strong>:&nbsp;<a href=\"https://github.com/VoxFeed/javascript-style-guide\">VoxFeed/javascript-style-guide</a></li><li><strong>Weggo</strong>:&nbsp;<a href=\"https://github.com/Weggo/javascript\">Weggo/javascript</a></li><li><strong>Zillow</strong>:&nbsp;<a href=\"https://github.com/zillow/javascript\">zillow/javascript</a></li><li><strong>ZocDoc</strong>:&nbsp;<a href=\"https://github.com/ZocDoc/javascript\">ZocDoc/javascript</a></li></ul><p><br></p>", "title" : "Airbnb JavaScript Style Guide(5)", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "554197a346480440159af64d" }, "category" : "AngularJS", "create_time" : { "$date" : "2015-04-30T10:46:59.042+0800" }, "content" : "<p><strong><a href=\"http://5code.net/406.html\" target=\"_blank\" class=\"\">http://5code.net/406.html</a><br></strong></p><p><strong>ng实现简单的select<br></strong></p><pre class=\"\">&lt;div ng-controller=\"ngSelect\"&gt;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&lt;select ng-model=\"vm.selectVal\"&nbsp;ng-options=\"o.title for o in vm.optionsData\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;option value=\"\"&gt;请选择&lt;/option&gt;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&lt;/select&gt;\n&lt;/div&gt;\n\nvar&nbsp;app = angular.module(\"app\",[]);\napp.controller(\"ngSelect\",function($scope){\n&nbsp;&nbsp;var&nbsp;vm = $scope.vm = {};\n&nbsp;&nbsp;//数组对象用来给ng-options遍历\n&nbsp;&nbsp;vm.optionsData = [\n&nbsp;&nbsp;&nbsp;&nbsp;{title :&nbsp;\"angularJs\"},\n&nbsp;&nbsp;&nbsp;&nbsp;{title :&nbsp;\"emberJs\"},\n&nbsp;&nbsp;&nbsp;&nbsp;{title :&nbsp;\"backboneJs\"},\n&nbsp;&nbsp;&nbsp;&nbsp;{title :&nbsp;\"knockoutJs\"}];\n&nbsp;&nbsp;})</pre><div class=\"simditor-table\"><strong style=\"line-height: 1.6; background-color: transparent;\">给ng-options自定义option的value值</strong><br></div><div class=\"simditor-table\"></div><pre class=\"\">&lt;select ng-model=\"vm.selectVal\"&nbsp;ng-options=\"o.id as o.title for o in vm.optionsData\"&nbsp;ng-change=\"selectChange()\"&gt;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&lt;option value=\"\"&gt;请选择&lt;/option&gt;\n&lt;/select&gt;</pre><div class=\"simditor-table\"><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"display: none;\"></div></div><p>添加了id属性作为option的value<br>你可能会在页面视图看到option生成的value为0,1,2,3,是因为angular会自动添加索引为value的值<br>让我们来个ng-change事件监控来看看<br></p><pre class=\"\">vm.optionsData = [\n&nbsp;&nbsp;{id : 4543,title :&nbsp;\"angularJs\"},\n&nbsp;&nbsp;{id : 546,title :&nbsp;\"emberJs\"},\n&nbsp;&nbsp;{id : 456,title :&nbsp;\"backboneJs\"},\n&nbsp;&nbsp;{id : 75,title :&nbsp;\"knockoutJs\"}\n];</pre><pre class=\"\">$scope.selectChange =&nbsp;function(){&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;//添加了ng-change事件来试试id值的输出&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;console.log(vm.selectVal);\n}</pre><div class=\"simditor-table\"><div class=\"simditor-resize-handle\" contenteditable=\"false\" style=\"display: none;\"></div></div><p><br></p>", "title" : "angular实现select的ng-options", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
{ "_id" : { "$oid" : "5541c2a10f9e27f418c06148" }, "category" : "NodeJS", "create_time" : { "$date" : "2015-04-30T13:50:25.103+0800" }, "content" : "<p>使用nodemailer发送邮件时，发送邮箱为qq邮箱，但是却报出以下错误：</p><p>{ [Error: Invalid login]</p><p>&nbsp; code: 'EAUTH',</p><p>&nbsp; response: '454 Authentication failed, please open smtp flag first!',</p><p>&nbsp; responseCode: 454 }</p><p>原因是没有开启相应的服务</p><p><img alt=\"Clipboard Image.png\" class=\"\" src=\"http://localhost:3000/images/0602eab8f31e6ebb09c471c10fe203ad1430372651664.png\" data-image-size=\"622,226\"><br></p><p>不过当你开启之后，是要设置独立密码的</p><p><img alt=\"Clipboard Image.png\" class=\"\" src=\"http://localhost:3000/images/ff3cd42fe979b1695318128615e8417b1430372744579.png\"><br></p><p>再尝试发送邮件时，又会报出这么个错误：<br></p><p>{ [Error: connect ETIMEDOUT] code: 'ETIMEDOUT', errno: 'ETIMEDOUT', syscall: 'connect' }<br></p><p>或许和那个独立密码有关吧</p><p>取消独立密码之后以上开启的服务就会自动关闭</p><p>不过这个情况是对于新申请的邮箱而言的，老早申请的qq可以直接发送，服务也是自动开启的，所以这里就要注意了，nodemailer似乎没有提供这么个独立密码的设置项，我的解决办法就是用老的qq给新的qq发邮件</p>", "title" : "关于使用nodemailer时，用QQ邮箱调试的一点问题", "page_number" : 0, "delete" : 0, "favor" : 5, "__v" : 0 }
{ "_id" : { "$oid" : "5541c64366ef4de81ba4dc73" }, "category" : "MongoDB", "create_time" : { "$date" : "2015-04-30T14:05:55.225+0800" }, "content" : "<p><a href=\"http://mobile.51cto.com/aengine-448430.htm\" target=\"_blank\" class=\"\">http://mobile.51cto.com/aengine-448430.htm</a><br></p><p>(mongoexport导出工具</p><p>MongoDB提供了mongoexport工具，可以把一个collection导出成json格式或csv格式的文件。可以指定导出哪些数据项，也可以根据给定的条件导出数据。工具帮助信息如下：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongoexport&nbsp;--help&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">options:&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--help&nbsp;produce&nbsp;help&nbsp;message&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-v&nbsp;[&nbsp;--verbose&nbsp;]&nbsp;be&nbsp;more&nbsp;verbose&nbsp;(include&nbsp;multiple&nbsp;times&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;more&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">verbosity&nbsp;e.g.&nbsp;-vvvvv)&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-h&nbsp;[&nbsp;--host&nbsp;]&nbsp;arg&nbsp;mongo&nbsp;host&nbsp;to&nbsp;connect&nbsp;to&nbsp;(&nbsp;/s1,s2&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;sets)&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--port&nbsp;arg&nbsp;server&nbsp;port.&nbsp;Can&nbsp;also&nbsp;use&nbsp;--host&nbsp;hostname:port&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--ipv6&nbsp;enable&nbsp;IPv6&nbsp;support&nbsp;(disabled&nbsp;by&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">default</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-u&nbsp;[&nbsp;--username&nbsp;]&nbsp;arg&nbsp;username&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-p&nbsp;[&nbsp;--password&nbsp;]&nbsp;arg&nbsp;password&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--dbpath&nbsp;arg&nbsp;directly&nbsp;access&nbsp;mongod&nbsp;database&nbsp;files&nbsp;in&nbsp;the&nbsp;given&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">path,&nbsp;instead&nbsp;of&nbsp;connecting&nbsp;to&nbsp;a&nbsp;mongod&nbsp;server&nbsp;-&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">needs&nbsp;to&nbsp;lock&nbsp;the&nbsp;data&nbsp;directory,&nbsp;so&nbsp;cannot&nbsp;be&nbsp;used&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;a&nbsp;mongod&nbsp;is&nbsp;currently&nbsp;accessing&nbsp;the&nbsp;same&nbsp;path&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--directoryperdb&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;dbpath&nbsp;specified,&nbsp;each&nbsp;db&nbsp;is&nbsp;in&nbsp;a&nbsp;separate&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">directory&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-d&nbsp;[&nbsp;--db&nbsp;]&nbsp;arg&nbsp;database&nbsp;to&nbsp;use&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-c&nbsp;[&nbsp;--collection&nbsp;]&nbsp;arg&nbsp;collection&nbsp;to&nbsp;use&nbsp;(some&nbsp;commands)&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-f&nbsp;[&nbsp;--fields&nbsp;]&nbsp;arg&nbsp;comma&nbsp;separated&nbsp;list&nbsp;of&nbsp;field&nbsp;names&nbsp;e.g.&nbsp;-f&nbsp;name,age&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--fieldFile&nbsp;arg&nbsp;file&nbsp;with&nbsp;fields&nbsp;names&nbsp;-&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;per&nbsp;line&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-q&nbsp;[&nbsp;--query&nbsp;]&nbsp;arg&nbsp;query&nbsp;filter,&nbsp;as&nbsp;a&nbsp;JSON&nbsp;string&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--csv&nbsp;export&nbsp;to&nbsp;csv&nbsp;instead&nbsp;of&nbsp;json&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-o&nbsp;[&nbsp;--out&nbsp;]&nbsp;arg&nbsp;output&nbsp;file;&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;not&nbsp;specified,&nbsp;stdout&nbsp;is&nbsp;used&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--jsonArray&nbsp;output&nbsp;to&nbsp;a&nbsp;json&nbsp;array&nbsp;rather&nbsp;than&nbsp;one&nbsp;object&nbsp;per&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">line&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;</span></span></li></ol></pre><p>下面我们将以一个实际的例子说明，此工具的用法：</p><p>将foo库中的表t1导出成json格式：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongoexport&nbsp;-d&nbsp;foo&nbsp;-c&nbsp;t1&nbsp;-o&nbsp;/data/t1.json&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">connected&nbsp;to:&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">127.0</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">0.1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">exported&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;records&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;</span></span></li></ol></pre><p>导出成功后我们看一下/data/t1.json文件的样式，是否是我们所希望的：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;more&nbsp;t1.json&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">{&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"_id\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;{&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"$oid\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"4f927e2385b7a6814a0540a0\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;},&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"age\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">2</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;</span></span></li></ol></pre><p>通过以上说明导出成功，但有一个问题，要是异构数据库的迁移怎么办呢?例如我们要将MongoDB的数据导入到MySQL该怎么办呢?MongoDB提供 了一种csv的导出格式，就可以解决异构数据库迁移的问题了. 下面将foo库的t2表的age和name列导出, 具体如下：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongoexport&nbsp;-d&nbsp;foo&nbsp;-c&nbsp;t2&nbsp;--csv&nbsp;-f&nbsp;age,name&nbsp;-o&nbsp;/data/t2.csv&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">connected&nbsp;to:&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">127.0</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">0.1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">exported&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;records&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;</span></span></li></ol></pre><p>查看/data/t2.csv的导出结果</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;more&nbsp;t2.csv&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">age,name&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">,</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"wwl\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;</span></span></li></ol></pre><p>mongoimport导入工具</p><p>MongoDB提供了mongoimport工具，可以把一个特定格式文件中的内容导入到某张collection中。工具帮助信息如下：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongoimport&nbsp;--help&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">options:&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--help&nbsp;produce&nbsp;help&nbsp;message&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-v&nbsp;[&nbsp;--verbose&nbsp;]&nbsp;be&nbsp;more&nbsp;verbose&nbsp;(include&nbsp;multiple&nbsp;times&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;more&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">verbosity&nbsp;e.g.&nbsp;-vvvvv)&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-h&nbsp;[&nbsp;--host&nbsp;]&nbsp;arg&nbsp;mongo&nbsp;host&nbsp;to&nbsp;connect&nbsp;to&nbsp;(&nbsp;/s1,s2&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;sets)&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--port&nbsp;arg&nbsp;server&nbsp;port.&nbsp;Can&nbsp;also&nbsp;use&nbsp;--host&nbsp;hostname:port&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--ipv6&nbsp;enable&nbsp;IPv6&nbsp;support&nbsp;(disabled&nbsp;by&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">default</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-u&nbsp;[&nbsp;--username&nbsp;]&nbsp;arg&nbsp;username&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-p&nbsp;[&nbsp;--password&nbsp;]&nbsp;arg&nbsp;password&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--dbpath&nbsp;arg&nbsp;directly&nbsp;access&nbsp;mongod&nbsp;database&nbsp;files&nbsp;in&nbsp;the&nbsp;given&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">path,&nbsp;instead&nbsp;of&nbsp;connecting&nbsp;to&nbsp;a&nbsp;mongod&nbsp;server&nbsp;-&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">needs&nbsp;to&nbsp;lock&nbsp;the&nbsp;data&nbsp;directory,&nbsp;so&nbsp;cannot&nbsp;be&nbsp;used&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;a&nbsp;mongod&nbsp;is&nbsp;currently&nbsp;accessing&nbsp;the&nbsp;same&nbsp;path&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--directoryperdb&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;dbpath&nbsp;specified,&nbsp;each&nbsp;db&nbsp;is&nbsp;in&nbsp;a&nbsp;separate&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">directory&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-d&nbsp;[&nbsp;--db&nbsp;]&nbsp;arg&nbsp;database&nbsp;to&nbsp;use&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-c&nbsp;[&nbsp;--collection&nbsp;]&nbsp;arg&nbsp;collection&nbsp;to&nbsp;use&nbsp;(some&nbsp;commands)&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">-f&nbsp;[&nbsp;--fields&nbsp;]&nbsp;arg&nbsp;comma&nbsp;separated&nbsp;list&nbsp;of&nbsp;field&nbsp;names&nbsp;e.g.&nbsp;-f&nbsp;name,age&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--fieldFile&nbsp;arg&nbsp;file&nbsp;with&nbsp;fields&nbsp;names&nbsp;-&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;per&nbsp;line&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--ignoreBlanks&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;given,&nbsp;empty&nbsp;fields&nbsp;in&nbsp;csv&nbsp;and&nbsp;tsv&nbsp;will&nbsp;be&nbsp;ignored&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--type&nbsp;arg&nbsp;type&nbsp;of&nbsp;file&nbsp;to&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">default</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">:&nbsp;json&nbsp;(json,csv,tsv)&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--file&nbsp;arg&nbsp;file&nbsp;to&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">import</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;from;&nbsp;</span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">if</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;not&nbsp;specified&nbsp;stdin&nbsp;is&nbsp;used&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--drop&nbsp;drop&nbsp;collection&nbsp;first&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--headerline&nbsp;CSV,TSV&nbsp;only&nbsp;-&nbsp;use&nbsp;first&nbsp;line&nbsp;as&nbsp;headers&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--upsert&nbsp;insert&nbsp;or&nbsp;update&nbsp;objects&nbsp;that&nbsp;already&nbsp;exist&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--upsertFields&nbsp;arg&nbsp;comma-separated&nbsp;fields&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">for</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;the&nbsp;query&nbsp;part&nbsp;of&nbsp;the&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">upsert.&nbsp;You&nbsp;should&nbsp;make&nbsp;sure&nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); font-weight: bold; background-color: inherit;\">this</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;is&nbsp;indexed&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--stopOnError&nbsp;stop&nbsp;importing&nbsp;at&nbsp;first&nbsp;error&nbsp;rather&nbsp;than&nbsp;continuing&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">--jsonArray&nbsp;load&nbsp;a&nbsp;json&nbsp;array,&nbsp;not&nbsp;one&nbsp;item&nbsp;per&nbsp;line.&nbsp;Currently&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">limited&nbsp;to&nbsp;4MB.&nbsp;</span></li></ol></pre><p>下面我们将以一人实际的例子说明，此工具的用法：&nbsp;<br>先看一下foo库中的t1表数据：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&gt;&nbsp;db.t1.find();&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">{&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"_id\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;ObjectId(</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"4f937a56450beadc560feaa9\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">),&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"age\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">5</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&gt;&nbsp;</span></li></ol></pre><p>t1其中有一条age=5的记录, 我们再看一下json文件中的数据是什么样子的：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;more&nbsp;t1.json&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">{&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"_id\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;{&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"$oid\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"4f937a56450beadc560feaa7\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;},&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"age\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">8</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">[root<span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;data]#&nbsp;</span></span></li></ol></pre><p>可以看到t1.json文件中有一条age=8的数据，下面我们将用mongoimport工具将json文件中的记录导入到t1表中：</p><pre><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongoimport&nbsp;-d&nbsp;foo&nbsp;-c&nbsp;t1&nbsp;/data/t1.json&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">connected&nbsp;to:&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">127.0</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">0.1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">imported&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;objects&nbsp;</span></span></li></ol></pre><p>工具返回信息说明向表中插入了一条记录. 我们进库里实际验证一下：</p><pre class=\"\"><ol class=\"dp-j\" style=\"margin-left: 55px; padding: 5px 0px; color: rgb(92, 92, 92); list-style-position: initial; list-style-image: initial; word-wrap: break-word; word-break: normal; border: none; margin-right: 0px !important; margin-bottom: 1px !important; background: rgb(247, 247, 247);\"><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\"><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">[root</span><span class=\"annotation\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@localhost</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;bin]#&nbsp;./mongo&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">MongoDB&nbsp;shell&nbsp;version:&nbsp;<span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1.8</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">1</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">connecting&nbsp;to:&nbsp;test&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&gt;&nbsp;use&nbsp;foo&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">switched&nbsp;to&nbsp;db&nbsp;foo&nbsp;&nbsp;&nbsp;</span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&gt;&nbsp;db.t1.find();&nbsp;&nbsp;&nbsp;</span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">{&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"_id\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;ObjectId(</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"4f937a56450beadc560feaa9\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">),&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"age\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">5</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li><li style=\"list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">{&nbsp;<span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"_id\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;ObjectId(</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"4f937a56450beadc560feaa7\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">),&nbsp;</span><span class=\"string\" style=\"margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;\">\"age\"</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;:&nbsp;</span><span class=\"number\" style=\"margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">8</span><span style=\"margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;}&nbsp;&nbsp;&nbsp;</span></span></li><li class=\"alt\" style=\"margin: 0px !important; padding: 0px 3px 0px 10px !important; color: inherit; list-style: decimal outside none; word-wrap: break-word; word-break: normal; border: none; line-height: 18px; background: url(http://images.51cto.com/images/art1105/images/0.gif) -498px -70px repeat-y scroll transparent;\"><span style=\"margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;\">&gt;&nbsp;</span></li></ol></pre><p><br></p>", "title" : "mongodb的导入导出方法", "page_number" : 0, "delete" : 0, "favor" : 0, "__v" : 0 }
